package com.tencent.mobileqq.wink.editor;

import a63.WinkBubbleInfo;
import android.content.Context;
import android.content.Intent;
import android.content.res.Configuration;
import android.net.Uri;
import android.os.Bundle;
import android.text.TextUtils;
import androidx.exifinterface.media.ExifInterface;
import androidx.lifecycle.LiveData;
import androidx.lifecycle.MutableLiveData;
import androidx.lifecycle.Observer;
import camera.XEFFECT_MATERIALS_GENERAL_DATASTRUCT.MetaCategory;
import camera.XEFFECT_MATERIALS_GENERAL_DATASTRUCT.MetaMaterial;
import com.heytap.databaseengine.model.UserInfo;
import com.huawei.hms.support.api.entity.common.CommonConstant;
import com.tencent.ams.mosaic.jsengine.component.ComponentFactory;
import com.tencent.biz.richframework.part.BasePartFragment;
import com.tencent.biz.richframework.part.BaseViewModel;
import com.tencent.bugly.common.constants.Constants;
import com.tencent.gamecenter.wadl.biz.entity.WadlProxyConsts;
import com.tencent.intervideo.nowproxy.NowProxyConstants;
import com.tencent.mobileqq.activity.photo.LocalMediaInfo;
import com.tencent.mobileqq.app.AppConstants;
import com.tencent.mobileqq.app.ThreadManager;
import com.tencent.mobileqq.highway.utils.BdhLogUtil;
import com.tencent.mobileqq.mqq.api.IAccountRuntime;
import com.tencent.mobileqq.qcircle.api.constant.QCircleScheme;
import com.tencent.mobileqq.qroute.QRoute;
import com.tencent.mobileqq.transfile.predownload.schedule.PreDownloadConstants;
import com.tencent.mobileqq.tvideo.ad.miniqadsdk.QAdCore.qaddefine.QAdReportDefine$AdReporterParams;
import com.tencent.mobileqq.wink.WinkConfig;
import com.tencent.mobileqq.wink.api.QQWinkConstants;
import com.tencent.mobileqq.wink.api.QQWinkTempConstants;
import com.tencent.mobileqq.wink.context.WinkContext;
import com.tencent.mobileqq.wink.context.WinkExodus;
import com.tencent.mobileqq.wink.edit.manager.WinkEditorResourceManager;
import com.tencent.mobileqq.wink.edit.util.AECameraPrefsUtil;
import com.tencent.mobileqq.wink.editor.clipping.thumbnail.ThumbnailProviderManager;
import com.tencent.mobileqq.wink.editor.dr;
import com.tencent.mobileqq.wink.editor.draft.WinkEditData;
import com.tencent.mobileqq.wink.editor.draft.WinkEditDataListResult;
import com.tencent.mobileqq.wink.editor.draft.WinkEditDataWrapper;
import com.tencent.mobileqq.wink.editor.draft.WinkEditUIData;
import com.tencent.mobileqq.wink.editor.draft.WinkStickerModelExtra;
import com.tencent.mobileqq.wink.editor.hdr.WinkHDRCacheManager;
import com.tencent.mobileqq.wink.editor.menu.MenuItem;
import com.tencent.mobileqq.wink.editor.menu.MenuSwitchAction;
import com.tencent.mobileqq.wink.editor.menu.MenuType;
import com.tencent.mobileqq.wink.editor.model.WinkTavCutScene;
import com.tencent.mobileqq.wink.editor.music.viewmodel.DraftMusic;
import com.tencent.mobileqq.wink.editor.music.viewmodel.MusicSourceViewModel;
import com.tencent.mobileqq.wink.editor.music.viewmodel.MusicVolumeControlViewModel;
import com.tencent.mobileqq.wink.editor.music.vo.WinkEditorMusicInfo;
import com.tencent.mobileqq.wink.editor.performance.WinkEditorPefScene;
import com.tencent.mobileqq.wink.editor.sticker.StickerLayerIndexManager;
import com.tencent.mobileqq.wink.editor.sticker.WinkStickerModel;
import com.tencent.mobileqq.wink.editor.tts.source.TTSAudioInfo;
import com.tencent.mobileqq.wink.model.InteractiveModel;
import com.tencent.mobileqq.wink.output.QCircleWinkOutputRouter;
import com.tencent.mobileqq.wink.picker.MediaPickerScene;
import com.tencent.mobileqq.wink.picker.TemplateLibraryHolderInfo;
import com.tencent.mobileqq.wink.picker.core.part.an;
import com.tencent.mobileqq.wink.publish.util.WinkDraftUtil;
import com.tencent.mobileqq.wink.reddot.WinkMaterialRedDotManager;
import com.tencent.mobileqq.wink.sdk.Wink;
import com.tencent.mobileqq.winkreport.datong.WinkDaTongReportConstant;
import com.tencent.mobileqq.winkreport.datong.WinkDatongCurrentParams;
import com.tencent.mobileqq.winkreport.datong.WinkSchemeConstant;
import com.tencent.mtt.hippy.views.hippylist.ViewStickEventHelper;
import com.tencent.opentelemetry.semconv.trace.attributes.SemanticAttributes;
import com.tencent.qphone.base.util.QLog;
import com.tencent.qqmini.miniapp.task.ServiceCreateTask;
import com.tencent.rmonitor.custom.ICustomDataEditor;
import com.tencent.tavcut.core.render.player.IPlayer;
import com.tencent.thumbplayer.report.reportv1.TPReportKeys;
import com.tencent.videocut.model.HDRModel;
import com.tencent.videocut.model.StickerModel;
import com.tencent.videocut.model.TextItem;
import common.config.service.QzoneConfig;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import kotlin.Metadata;
import kotlin.NoWhenBranchMatchedException;
import kotlin.Unit;
import kotlin.collections.CollectionsKt__CollectionsKt;
import kotlin.collections.CollectionsKt___CollectionsKt;
import kotlin.collections.MapsKt__MapsKt;
import kotlin.jvm.functions.Function1;
import kotlin.jvm.internal.Intrinsics;
import kotlin.jvm.internal.StringCompanionObject;
import mqq.app.MobileQQ;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.json.JSONObject;
import org.light.ClipPlaceHolder;
import org.light.LightConstants;
import org.light.WatermarkConfig;

/* compiled from: P */
@Metadata(d1 = {"\u0000\u00bb\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0010\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u000e\n\u0002\b\u0004\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u000b\n\u0000\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010 \n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0002\b\f\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0004\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0006\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0010\b\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0007\n\u0002\u0018\u0002\n\u0002\b\n\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010!\n\u0002\b\u001d\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010%\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\t\n\u0002\b\u0004\n\u0002\u0018\u0002\n\u0002\b\u0004\n\u0002\u0018\u0002\n\u0002\b\r\n\u0002\u0018\u0002\n\u0002\b\f\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0017\n\u0002\u0018\u0002\n\u0002\b\u0013\n\u0002\u0018\u0002\n\u0002\bY\n\u0002\u0018\u0002\n\u0002\b:\n\u0002\u0018\u0002\n\u0003\b\u00b9\u0001\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\n\n\u0002\u0018\u0002\n\u0002\b\u0014\u0018\u0000 \u00c9\u00042\u00020\u0001:\u0004\u00ca\u0004\u00cb\u0004B\t\u00a2\u0006\u0006\b\u00c7\u0004\u0010\u00c8\u0004J\b\u0010\u0003\u001a\u00020\u0002H\u0002J\b\u0010\u0004\u001a\u00020\u0002H\u0002J\u0012\u0010\b\u001a\u00020\u00072\b\u0010\u0006\u001a\u0004\u0018\u00010\u0005H\u0002J\u0012\u0010\t\u001a\u00020\u00072\b\u0010\u0006\u001a\u0004\u0018\u00010\u0005H\u0002J\b\u0010\n\u001a\u00020\u0002H\u0002J\u0010\u0010\u000b\u001a\u00020\u00022\u0006\u0010\u0006\u001a\u00020\u0005H\u0002J\u0014\u0010\u000f\u001a\u0004\u0018\u00010\u000e2\b\u0010\r\u001a\u0004\u0018\u00010\fH\u0002J\"\u0010\u0015\u001a\u0012\u0012\u0004\u0012\u00020\u00130\u0012j\b\u0012\u0004\u0012\u00020\u0013`\u00142\b\b\u0002\u0010\u0011\u001a\u00020\u0010H\u0002J\"\u0010\u001b\u001a\u00020\u00102\u000e\u0010\u0018\u001a\n\u0012\u0004\u0012\u00020\u0017\u0018\u00010\u00162\b\u0010\u001a\u001a\u0004\u0018\u00010\u0019H\u0002J\u0010\u0010\u001c\u001a\u00020\u00102\u0006\u0010\u0006\u001a\u00020\u0005H\u0002J\u0010\u0010\u001d\u001a\u00020\u00102\u0006\u0010\u0006\u001a\u00020\u0005H\u0002J\b\u0010\u001e\u001a\u00020\u0002H\u0002J\u0018\u0010 \u001a\u0012\u0012\u0004\u0012\u00020\u001f0\u0012j\b\u0012\u0004\u0012\u00020\u001f`\u0014H\u0002J\u0012\u0010\"\u001a\u0004\u0018\u00010\u001f2\u0006\u0010!\u001a\u00020\u0007H\u0002J \u0010$\u001a\u00020\u00022\u0016\u0010#\u001a\u0012\u0012\u0004\u0012\u00020\u001f0\u0012j\b\u0012\u0004\u0012\u00020\u001f`\u0014H\u0002J \u0010%\u001a\u00020\u00022\u0016\u0010#\u001a\u0012\u0012\u0004\u0012\u00020\u001f0\u0012j\b\u0012\u0004\u0012\u00020\u001f`\u0014H\u0002J \u0010&\u001a\u00020\u00022\u0016\u0010#\u001a\u0012\u0012\u0004\u0012\u00020\u001f0\u0012j\b\u0012\u0004\u0012\u00020\u001f`\u0014H\u0002J\u0018\u0010'\u001a\u0012\u0012\u0004\u0012\u00020\u001f0\u0012j\b\u0012\u0004\u0012\u00020\u001f`\u0014H\u0002J \u0010)\u001a\u00020\u00022\u0016\u0010(\u001a\u0012\u0012\u0004\u0012\u00020\u001f0\u0012j\b\u0012\u0004\u0012\u00020\u001f`\u0014H\u0002J\b\u0010*\u001a\u00020\u0010H\u0002J\b\u0010+\u001a\u00020\u0010H\u0002J(\u0010.\u001a\"\u0012\u0004\u0012\u00020\u0007\u0012\u0004\u0012\u00020\u0007\u0018\u00010,j\u0010\u0012\u0004\u0012\u00020\u0007\u0012\u0004\u0012\u00020\u0007\u0018\u0001`-H\u0002J\b\u0010/\u001a\u00020\u0010H\u0002J\b\u00100\u001a\u00020\u0010H\u0002J\u0012\u00103\u001a\u00020\u00022\b\u00102\u001a\u0004\u0018\u000101H\u0002J\u001a\u00106\u001a\u00020\u00022\b\u0010\u0006\u001a\u0004\u0018\u00010\u00052\b\u00105\u001a\u0004\u0018\u000104J\u0006\u00107\u001a\u00020\u0010J\u0006\u00108\u001a\u00020\u0010J\u000e\u0010;\u001a\u00020\u00022\u0006\u0010:\u001a\u000209J\b\u0010=\u001a\u0004\u0018\u00010<J\u0010\u0010?\u001a\u00020\u00022\b\u0010>\u001a\u0004\u0018\u00010<J\u000e\u0010A\u001a\u00020\u00022\u0006\u0010@\u001a\u00020\u0010J\u0012\u0010B\u001a\u0004\u0018\u00010\u00072\b\u0010\u0006\u001a\u0004\u0018\u00010\u0005J\u0010\u0010E\u001a\u00020\u00022\b\u0010D\u001a\u0004\u0018\u00010CJ\u0016\u0010J\u001a\u00020I2\u0006\u0010G\u001a\u00020F2\u0006\u0010H\u001a\u00020FJ\b\u0010K\u001a\u0004\u0018\u00010\u0007J\u0010\u0010M\u001a\u00020\u00022\b\u0010L\u001a\u0004\u0018\u00010\u0007J\u0016\u0010O\u001a\u00020\u00022\u0006\u0010N\u001a\u00020\u00072\u0006\u0010L\u001a\u00020\u0007J\u0006\u0010P\u001a\u00020\u0002J\u001a\u0010T\u001a\u00020\u00022\u0006\u0010R\u001a\u00020Q2\n\b\u0002\u0010S\u001a\u0004\u0018\u000104J\u000e\u0010U\u001a\u00020\u00022\u0006\u0010R\u001a\u00020QJ\u000e\u0010W\u001a\u00020\u00022\u0006\u0010V\u001a\u00020\u0010J\u0006\u0010X\u001a\u00020\u0002J\u0006\u0010Y\u001a\u00020\u0005J\u000e\u0010Z\u001a\u00020\u00022\u0006\u0010\r\u001a\u00020\fJ\u0012\u0010[\u001a\u0004\u0018\u00010\u00072\b\u0010\r\u001a\u0004\u0018\u00010\fJ\u001e\u0010_\u001a\b\u0012\u0004\u0012\u00020\u00130^2\u0006\u0010]\u001a\u00020\\2\b\b\u0002\u0010\u0011\u001a\u00020\u0010J\u0006\u0010`\u001a\u00020\u0002J\u0006\u0010a\u001a\u00020\u0002J\u0006\u0010b\u001a\u00020\u0010J\u0006\u0010c\u001a\u00020\u0010J\u000e\u0010e\u001a\u00020\u00022\u0006\u0010d\u001a\u00020QJ\u000e\u0010g\u001a\u00020\u00022\u0006\u0010f\u001a\u00020\u0010J\u001e\u0010i\u001a\u00020\u00022\u0016\u0010h\u001a\u0012\u0012\u0004\u0012\u00020\u00170\u0012j\b\u0012\u0004\u0012\u00020\u0017`\u0014J\u0006\u0010j\u001a\u00020FJ\u0006\u0010k\u001a\u00020\u0010J\u0006\u0010l\u001a\u00020\u0010J\u0006\u0010m\u001a\u00020\u0010J\u0006\u0010n\u001a\u00020\u0010J\u0006\u0010o\u001a\u00020\u0010J\u0006\u0010p\u001a\u00020\u0010J\u0006\u0010q\u001a\u00020\u0010J\u0006\u0010r\u001a\u00020\u0010J\u0006\u0010s\u001a\u00020\u0010J\u0006\u0010t\u001a\u00020\u0010J\u0006\u0010u\u001a\u00020FJ\u0006\u0010v\u001a\u00020\u0010J\u0006\u0010w\u001a\u00020\u0010J\u0010\u0010x\u001a\u00020\u00022\b\u00102\u001a\u0004\u0018\u000101J\u0006\u0010y\u001a\u00020\u0002J\u0006\u0010z\u001a\u00020\u0002J\b\u0010{\u001a\u00020\u0007H\u0016JR\u0010\u0085\u0001\u001a\u00020\u00192\u0006\u0010\r\u001a\u00020\f2\u0006\u0010}\u001a\u00020|2\u0006\u0010\u007f\u001a\u00020~2\n\u0010\u0081\u0001\u001a\u0005\u0018\u00010\u0080\u00012\u0019\b\u0002\u0010\u0084\u0001\u001a\u0012\u0012\u0004\u0012\u00020\u0007\u0012\u0005\u0012\u00030\u0083\u0001\u0018\u00010\u0082\u00012\n\b\u0002\u0010\u0006\u001a\u0004\u0018\u00010\u0005JT\u0010\u008c\u0001\u001a\u00020\u00022\u0006\u0010\r\u001a\u00020\f2%\u0010\u0087\u0001\u001a \u0012\u0004\u0012\u00020\u0007\u0012\u0005\u0012\u00030\u0086\u00010,j\u000f\u0012\u0004\u0012\u00020\u0007\u0012\u0005\u0012\u00030\u0086\u0001`-2\b\u0010\u0089\u0001\u001a\u00030\u0088\u00012\u0007\u0010\u008a\u0001\u001a\u00020\u00102\t\b\u0002\u0010\u008b\u0001\u001a\u00020\u0010J\u0011\u0010\u008f\u0001\u001a\u00020\u00022\b\u0010\u008e\u0001\u001a\u00030\u008d\u0001J\u0010\u0010\u0091\u0001\u001a\u00020\u00022\u0007\u0010\u0090\u0001\u001a\u00020\u0010J\u0011\u0010\u0094\u0001\u001a\u00020\u00022\b\u0010\u0093\u0001\u001a\u00030\u0092\u0001J\u0010\u0010\u0096\u0001\u001a\u00020\u00022\u0007\u0010\u0095\u0001\u001a\u00020\u0010J\u000f\u0010\u0097\u0001\u001a\u00020\u00022\u0006\u0010d\u001a\u00020QJ\u0010\u0010\u0099\u0001\u001a\u00020\u00022\u0007\u0010\u0098\u0001\u001a\u00020FJ\u0007\u0010\u009a\u0001\u001a\u00020\u0002J\u0011\u0010\u009c\u0001\u001a\u00020\u00022\b\u0010\u009b\u0001\u001a\u00030\u0088\u0001J\u0007\u0010\u009d\u0001\u001a\u00020\u0002J\u0007\u0010\u009e\u0001\u001a\u00020\u0002J\u0007\u0010\u009f\u0001\u001a\u00020\u0002J\u0011\u0010\u00a2\u0001\u001a\u00020\u00102\b\u0010\u00a1\u0001\u001a\u00030\u00a0\u0001J\u0007\u0010\u00a3\u0001\u001a\u00020\u0010J\u0007\u0010\u00a4\u0001\u001a\u00020\u0010J\u0011\u0010\u00a6\u0001\u001a\u00020\u00022\b\u0010\u00a5\u0001\u001a\u00030\u0088\u0001J\t\u0010\u00a7\u0001\u001a\u00020\u0002H\u0014J\u0007\u0010\u00a8\u0001\u001a\u00020FJ\u0016\u0010\u00aa\u0001\u001a\u00020\u00022\r\u0010\u00a9\u0001\u001a\b\u0012\u0004\u0012\u00020\u000e0\u0016J\u0007\u0010\u00ab\u0001\u001a\u00020\u0010J\u0007\u0010\u00ac\u0001\u001a\u00020\u0010R$\u0010\u00b0\u0001\u001a\u000f\u0012\n\u0012\b\u0012\u0004\u0012\u00020\u001f0\u00160\u00ad\u00018\u0002X\u0082\u0004\u00a2\u0006\b\n\u0006\b\u00ae\u0001\u0010\u00af\u0001R)\u0010\u00b6\u0001\u001a\u000f\u0012\n\u0012\b\u0012\u0004\u0012\u00020\u001f0\u00160\u00b1\u00018\u0006\u00a2\u0006\u0010\n\u0006\b\u00b2\u0001\u0010\u00b3\u0001\u001a\u0006\b\u00b4\u0001\u0010\u00b5\u0001R\u001f\u0010\u00b9\u0001\u001a\b\u0012\u0004\u0012\u00020\u001f0^8\u0002@\u0002X\u0082\u000e\u00a2\u0006\b\n\u0006\b\u00b7\u0001\u0010\u00b8\u0001R\u001e\u0010\u00bb\u0001\u001a\t\u0012\u0004\u0012\u00020Q0\u00ad\u00018\u0002X\u0082\u0004\u00a2\u0006\b\n\u0006\b\u00ba\u0001\u0010\u00af\u0001R#\u0010\u00be\u0001\u001a\t\u0012\u0004\u0012\u00020Q0\u00b1\u00018\u0006\u00a2\u0006\u0010\n\u0006\b\u00bc\u0001\u0010\u00b3\u0001\u001a\u0006\b\u00bd\u0001\u0010\u00b5\u0001R\u001e\u0010\u00c0\u0001\u001a\t\u0012\u0004\u0012\u00020\u00100\u00ad\u00018\u0002X\u0082\u0004\u00a2\u0006\b\n\u0006\b\u00bf\u0001\u0010\u00af\u0001R#\u0010\u00c3\u0001\u001a\t\u0012\u0004\u0012\u00020\u00100\u00b1\u00018\u0006\u00a2\u0006\u0010\n\u0006\b\u00c1\u0001\u0010\u00b3\u0001\u001a\u0006\b\u00c2\u0001\u0010\u00b5\u0001R$\u0010\u00c5\u0001\u001a\u000f\u0012\n\u0012\b\u0012\u0004\u0012\u00020\u00170\u00120\u00ad\u00018\u0002X\u0082\u0004\u00a2\u0006\b\n\u0006\b\u00c4\u0001\u0010\u00af\u0001R)\u0010\u00c8\u0001\u001a\u000f\u0012\n\u0012\b\u0012\u0004\u0012\u00020\u00170\u00120\u00b1\u00018\u0006\u00a2\u0006\u0010\n\u0006\b\u00c6\u0001\u0010\u00b3\u0001\u001a\u0006\b\u00c7\u0001\u0010\u00b5\u0001R\u001f\u0010\u00cb\u0001\u001a\n\u0012\u0005\u0012\u00030\u00c9\u00010\u00ad\u00018\u0002X\u0082\u0004\u00a2\u0006\b\n\u0006\b\u00ca\u0001\u0010\u00af\u0001R$\u0010\u00ce\u0001\u001a\n\u0012\u0005\u0012\u00030\u00c9\u00010\u00b1\u00018\u0006\u00a2\u0006\u0010\n\u0006\b\u00cc\u0001\u0010\u00b3\u0001\u001a\u0006\b\u00cd\u0001\u0010\u00b5\u0001R\u001e\u0010\u00d0\u0001\u001a\t\u0012\u0004\u0012\u00020I0\u00ad\u00018\u0002X\u0082\u0004\u00a2\u0006\b\n\u0006\b\u00cf\u0001\u0010\u00af\u0001R#\u0010\u00d3\u0001\u001a\t\u0012\u0004\u0012\u00020I0\u00b1\u00018\u0006\u00a2\u0006\u0010\n\u0006\b\u00d1\u0001\u0010\u00b3\u0001\u001a\u0006\b\u00d2\u0001\u0010\u00b5\u0001R\u001e\u0010\u00d5\u0001\u001a\t\u0012\u0004\u0012\u00020\u00100\u00ad\u00018\u0002X\u0082\u0004\u00a2\u0006\b\n\u0006\b\u00d4\u0001\u0010\u00af\u0001R#\u0010\u00d8\u0001\u001a\t\u0012\u0004\u0012\u00020\u00100\u00b1\u00018\u0006\u00a2\u0006\u0010\n\u0006\b\u00d6\u0001\u0010\u00b3\u0001\u001a\u0006\b\u00d7\u0001\u0010\u00b5\u0001R\u001e\u0010\u00da\u0001\u001a\t\u0012\u0004\u0012\u00020\u00100\u00ad\u00018\u0002X\u0082\u0004\u00a2\u0006\b\n\u0006\b\u00d9\u0001\u0010\u00af\u0001R#\u0010\u00dc\u0001\u001a\t\u0012\u0004\u0012\u00020\u00100\u00b1\u00018\u0006\u00a2\u0006\u0010\n\u0006\b\u00db\u0001\u0010\u00b3\u0001\u001a\u0006\b\u00dc\u0001\u0010\u00b5\u0001R%\u0010\u00df\u0001\u001a\u0010\u0012\u000b\u0012\t\u0012\u0004\u0012\u00020\u00100\u00dd\u00010\u00ad\u00018\u0002X\u0082\u0004\u00a2\u0006\b\n\u0006\b\u00de\u0001\u0010\u00af\u0001R*\u0010\u00e2\u0001\u001a\u0010\u0012\u000b\u0012\t\u0012\u0004\u0012\u00020\u00100\u00dd\u00010\u00b1\u00018\u0006\u00a2\u0006\u0010\n\u0006\b\u00e0\u0001\u0010\u00b3\u0001\u001a\u0006\b\u00e1\u0001\u0010\u00b5\u0001R%\u0010\u00e4\u0001\u001a\u0010\u0012\u000b\u0012\t\u0012\u0004\u0012\u00020\u00070\u00dd\u00010\u00ad\u00018\u0002X\u0082\u0004\u00a2\u0006\b\n\u0006\b\u00e3\u0001\u0010\u00af\u0001R*\u0010\u00e7\u0001\u001a\u0010\u0012\u000b\u0012\t\u0012\u0004\u0012\u00020\u00070\u00dd\u00010\u00b1\u00018\u0006\u00a2\u0006\u0010\n\u0006\b\u00e5\u0001\u0010\u00b3\u0001\u001a\u0006\b\u00e6\u0001\u0010\u00b5\u0001R\u001e\u0010\u00e9\u0001\u001a\t\u0012\u0004\u0012\u00020\u00100\u00ad\u00018\u0002X\u0082\u0004\u00a2\u0006\b\n\u0006\b\u00e8\u0001\u0010\u00af\u0001R#\u0010\u00ec\u0001\u001a\t\u0012\u0004\u0012\u00020\u00100\u00b1\u00018\u0006\u00a2\u0006\u0010\n\u0006\b\u00ea\u0001\u0010\u00b3\u0001\u001a\u0006\b\u00eb\u0001\u0010\u00b5\u0001R)\u0010\u00f3\u0001\u001a\u00020\u00108\u0006@\u0006X\u0086\u000e\u00a2\u0006\u0018\n\u0006\b\u00ed\u0001\u0010\u00ee\u0001\u001a\u0006\b\u00ef\u0001\u0010\u00f0\u0001\"\u0006\b\u00f1\u0001\u0010\u00f2\u0001R&\u0010\u00f4\u0001\u001a\u0011\u0012\f\u0012\n\u0012\u0005\u0012\u00030\u008d\u00010\u00dd\u00010\u00ad\u00018\u0002X\u0082\u0004\u00a2\u0006\b\n\u0006\b\u00ee\u0001\u0010\u00af\u0001R+\u0010\u00f7\u0001\u001a\u0011\u0012\f\u0012\n\u0012\u0005\u0012\u00030\u008d\u00010\u00dd\u00010\u00b1\u00018\u0006\u00a2\u0006\u0010\n\u0006\b\u00f5\u0001\u0010\u00b3\u0001\u001a\u0006\b\u00f6\u0001\u0010\u00b5\u0001R,\u0010\u00f9\u0001\u001a\u0017\u0012\u0012\u0012\u0010\u0012\u0004\u0012\u00020\u0007\u0012\u0005\u0012\u00030\u0083\u00010\u0082\u00010\u00ad\u00018\u0002X\u0082\u0004\u00a2\u0006\b\n\u0006\b\u00f8\u0001\u0010\u00af\u0001R1\u0010\u00fc\u0001\u001a\u0017\u0012\u0012\u0012\u0010\u0012\u0004\u0012\u00020\u0007\u0012\u0005\u0012\u00030\u0083\u00010\u0082\u00010\u00b1\u00018\u0006\u00a2\u0006\u0010\n\u0006\b\u00fa\u0001\u0010\u00b3\u0001\u001a\u0006\b\u00fb\u0001\u0010\u00b5\u0001R\u001e\u0010\u00fe\u0001\u001a\t\u0012\u0004\u0012\u00020\u00100\u00ad\u00018\u0002X\u0082\u0004\u00a2\u0006\b\n\u0006\b\u00fd\u0001\u0010\u00af\u0001R#\u0010\u0081\u0002\u001a\t\u0012\u0004\u0012\u00020\u00100\u00b1\u00018\u0006\u00a2\u0006\u0010\n\u0006\b\u00ff\u0001\u0010\u00b3\u0001\u001a\u0006\b\u0080\u0002\u0010\u00b5\u0001R\u001e\u0010\u0083\u0002\u001a\t\u0012\u0004\u0012\u00020Q0\u00ad\u00018\u0002X\u0082\u0004\u00a2\u0006\b\n\u0006\b\u0082\u0002\u0010\u00af\u0001R#\u0010\u0086\u0002\u001a\t\u0012\u0004\u0012\u00020Q0\u00b1\u00018\u0006\u00a2\u0006\u0010\n\u0006\b\u0084\u0002\u0010\u00b3\u0001\u001a\u0006\b\u0085\u0002\u0010\u00b5\u0001R\u001e\u0010\u0088\u0002\u001a\t\u0012\u0004\u0012\u00020\u00070\u00ad\u00018\u0002X\u0082\u0004\u00a2\u0006\b\n\u0006\b\u0087\u0002\u0010\u00af\u0001R#\u0010\u008b\u0002\u001a\t\u0012\u0004\u0012\u00020\u00070\u00b1\u00018\u0006\u00a2\u0006\u0010\n\u0006\b\u0089\u0002\u0010\u00b3\u0001\u001a\u0006\b\u008a\u0002\u0010\u00b5\u0001R\u001e\u0010\u008d\u0002\u001a\t\u0012\u0004\u0012\u00020\u00070\u00ad\u00018\u0002X\u0082\u0004\u00a2\u0006\b\n\u0006\b\u008c\u0002\u0010\u00af\u0001R#\u0010\u0090\u0002\u001a\t\u0012\u0004\u0012\u00020\u00070\u00b1\u00018\u0006\u00a2\u0006\u0010\n\u0006\b\u008e\u0002\u0010\u00b3\u0001\u001a\u0006\b\u008f\u0002\u0010\u00b5\u0001R\u001f\u0010\u0092\u0002\u001a\n\u0012\u0005\u0012\u00030\u00a0\u00010\u00ad\u00018\u0002X\u0082\u0004\u00a2\u0006\b\n\u0006\b\u0091\u0002\u0010\u00af\u0001R$\u0010\u0095\u0002\u001a\n\u0012\u0005\u0012\u00030\u00a0\u00010\u00b1\u00018\u0006\u00a2\u0006\u0010\n\u0006\b\u0093\u0002\u0010\u00b3\u0001\u001a\u0006\b\u0094\u0002\u0010\u00b5\u0001R\u001f\u0010\u0097\u0002\u001a\n\u0012\u0005\u0012\u00030\u0088\u00010\u00ad\u00018\u0002X\u0082\u0004\u00a2\u0006\b\n\u0006\b\u0096\u0002\u0010\u00af\u0001R$\u0010\u009a\u0002\u001a\n\u0012\u0005\u0012\u00030\u0088\u00010\u00b1\u00018\u0006\u00a2\u0006\u0010\n\u0006\b\u0098\u0002\u0010\u00b3\u0001\u001a\u0006\b\u0099\u0002\u0010\u00b5\u0001R$\u0010\u009c\u0002\u001a\u000f\u0012\n\u0012\b\u0012\u0004\u0012\u00020\u000e0\u00160\u00ad\u00018\u0002X\u0082\u0004\u00a2\u0006\b\n\u0006\b\u009b\u0002\u0010\u00af\u0001R)\u0010\u009f\u0002\u001a\u000f\u0012\n\u0012\b\u0012\u0004\u0012\u00020\u000e0\u00160\u00b1\u00018\u0006\u00a2\u0006\u0010\n\u0006\b\u009d\u0002\u0010\u00b3\u0001\u001a\u0006\b\u009e\u0002\u0010\u00b5\u0001R \u0010\u00a1\u0002\u001a\u000b\u0012\u0006\u0012\u0004\u0018\u00010C0\u00ad\u00018\u0002X\u0082\u0004\u00a2\u0006\b\n\u0006\b\u00a0\u0002\u0010\u00af\u0001R%\u0010\u00a4\u0002\u001a\u000b\u0012\u0006\u0012\u0004\u0018\u00010C0\u00b1\u00018\u0006\u00a2\u0006\u0010\n\u0006\b\u00a2\u0002\u0010\u00b3\u0001\u001a\u0006\b\u00a3\u0002\u0010\u00b5\u0001R \u0010\u00a6\u0002\u001a\u000b\u0012\u0006\u0012\u0004\u0018\u00010Q0\u00ad\u00018\u0002X\u0082\u0004\u00a2\u0006\b\n\u0006\b\u00a5\u0002\u0010\u00af\u0001R%\u0010\u00a9\u0002\u001a\u000b\u0012\u0006\u0012\u0004\u0018\u00010Q0\u00b1\u00018\u0006\u00a2\u0006\u0010\n\u0006\b\u00a7\u0002\u0010\u00b3\u0001\u001a\u0006\b\u00a8\u0002\u0010\u00b5\u0001R\u001e\u0010\u00ab\u0002\u001a\t\u0012\u0004\u0012\u00020\u00100\u00ad\u00018\u0002X\u0082\u0004\u00a2\u0006\b\n\u0006\b\u00aa\u0002\u0010\u00af\u0001R#\u0010\u00ae\u0002\u001a\t\u0012\u0004\u0012\u00020\u00100\u00b1\u00018\u0006\u00a2\u0006\u0010\n\u0006\b\u00ac\u0002\u0010\u00b3\u0001\u001a\u0006\b\u00ad\u0002\u0010\u00b5\u0001R#\u0010\u00b2\u0002\u001a\t\u0012\u0004\u0012\u00020Q0\u00ad\u00018\u0006\u00a2\u0006\u0010\n\u0006\b\u00af\u0002\u0010\u00af\u0001\u001a\u0006\b\u00b0\u0002\u0010\u00b1\u0002R\u0019\u0010\u00b4\u0002\u001a\u00020F8\u0002@\u0002X\u0082\u000e\u00a2\u0006\b\n\u0006\b\u00b3\u0002\u0010\u00c6\u0001R\u0018\u0010G\u001a\u00020F8\u0002@\u0002X\u0082\u000e\u00a2\u0006\b\n\u0006\b\u00b5\u0002\u0010\u00c6\u0001R\u0018\u0010H\u001a\u00020F8\u0002@\u0002X\u0082\u000e\u00a2\u0006\b\n\u0006\b\u00b6\u0002\u0010\u00c6\u0001R2\u0010\u00bd\u0002\u001a\u000b\u0012\u0005\u0012\u00030\u00b7\u0002\u0018\u00010\u00168\u0006@\u0006X\u0086\u000e\u00a2\u0006\u0018\n\u0006\b\u00b8\u0002\u0010\u00b8\u0001\u001a\u0006\b\u00b9\u0002\u0010\u00ba\u0002\"\u0006\b\u00bb\u0002\u0010\u00bc\u0002R+\u0010\u00c0\u0002\u001a\u0004\u0018\u00010\u00078\u0006@\u0006X\u0086\u000e\u00a2\u0006\u0018\n\u0006\b\u00be\u0002\u0010\u00bf\u0002\u001a\u0006\b\u00c0\u0002\u0010\u00c1\u0002\"\u0006\b\u00c2\u0002\u0010\u00c3\u0002R+\u0010\u00c7\u0002\u001a\u0004\u0018\u00010\u00078\u0006@\u0006X\u0086\u000e\u00a2\u0006\u0018\n\u0006\b\u00c4\u0002\u0010\u00bf\u0002\u001a\u0006\b\u00c5\u0002\u0010\u00c1\u0002\"\u0006\b\u00c6\u0002\u0010\u00c3\u0002R+\u0010\u00ce\u0002\u001a\u0004\u0018\u00010<8\u0006@\u0006X\u0086\u000e\u00a2\u0006\u0018\n\u0006\b\u00c8\u0002\u0010\u00c9\u0002\u001a\u0006\b\u00ca\u0002\u0010\u00cb\u0002\"\u0006\b\u00cc\u0002\u0010\u00cd\u0002R*\u0010:\u001a\u0004\u0018\u0001098\u0006@\u0006X\u0086\u000e\u00a2\u0006\u0018\n\u0006\b\u00cf\u0002\u0010\u00d0\u0002\u001a\u0006\b\u00d1\u0002\u0010\u00d2\u0002\"\u0006\b\u00d3\u0002\u0010\u00d4\u0002R=\u0010\u00db\u0002\u001a\u0016\u0012\u0004\u0012\u00020\u0017\u0018\u00010\u0012j\n\u0012\u0004\u0012\u00020\u0017\u0018\u0001`\u00148\u0006@\u0006X\u0086\u000e\u00a2\u0006\u0018\n\u0006\b\u00d5\u0002\u0010\u00d6\u0002\u001a\u0006\b\u00d7\u0002\u0010\u00d8\u0002\"\u0006\b\u00d9\u0002\u0010\u00da\u0002R*\u0010\u00df\u0002\u001a\u00020\u00072\u0007\u0010\u00dc\u0002\u001a\u00020\u00078\u0006@BX\u0086\u000e\u00a2\u0006\u0010\n\u0006\b\u00dd\u0002\u0010\u00bf\u0002\u001a\u0006\b\u00de\u0002\u0010\u00c1\u0002R*\u0010\u00e2\u0002\u001a\u00020\u00102\u0007\u0010\u00dc\u0002\u001a\u00020\u00108\u0006@BX\u0086\u000e\u00a2\u0006\u0010\n\u0006\b\u00e0\u0002\u0010\u00ee\u0001\u001a\u0006\b\u00e1\u0002\u0010\u00f0\u0001R)\u0010\u00e6\u0002\u001a\u00020\u00108\u0006@\u0006X\u0086\u000e\u00a2\u0006\u0018\n\u0006\b\u00e3\u0002\u0010\u00ee\u0001\u001a\u0006\b\u00e4\u0002\u0010\u00f0\u0001\"\u0006\b\u00e5\u0002\u0010\u00f2\u0001R8\u0010\u00eb\u0002\u001a\u001e\u0012\u0004\u0012\u00020\u0007\u0012\u0004\u0012\u00020\u00070,j\u000e\u0012\u0004\u0012\u00020\u0007\u0012\u0004\u0012\u00020\u0007`-8\u0006\u00a2\u0006\u0010\n\u0006\b\u00e7\u0002\u0010\u00e8\u0002\u001a\u0006\b\u00e9\u0002\u0010\u00ea\u0002R*\u0010\u00ee\u0002\u001a\u0015\u0012\u0004\u0012\u00020\\\u0012\n\u0012\b\u0012\u0004\u0012\u00020\u00130^0\u0082\u00018\u0002X\u0082\u0004\u00a2\u0006\b\n\u0006\b\u00ec\u0002\u0010\u00ed\u0002R$\u0010\u00f1\u0002\u001a\n\u0012\u0005\u0012\u00030\u0088\u00010\u00ad\u00018\u0006\u00a2\u0006\u0010\n\u0006\b\u00ef\u0002\u0010\u00af\u0001\u001a\u0006\b\u00f0\u0002\u0010\u00b1\u0002R$\u0010\u00f5\u0002\u001a\n\u0012\u0005\u0012\u00030\u00f2\u00020\u00ad\u00018\u0006\u00a2\u0006\u0010\n\u0006\b\u00f3\u0002\u0010\u00af\u0001\u001a\u0006\b\u00f4\u0002\u0010\u00b1\u0002R)\u0010\u00f7\u0002\u001a\u00020\u00108\u0006@\u0006X\u0086\u000e\u00a2\u0006\u0018\n\u0006\b\u00f6\u0002\u0010\u00ee\u0001\u001a\u0006\b\u00f7\u0002\u0010\u00f0\u0001\"\u0006\b\u00f8\u0002\u0010\u00f2\u0001R)\u0010\u00fc\u0002\u001a\u00020\u00108\u0006@\u0006X\u0086\u000e\u00a2\u0006\u0018\n\u0006\b\u00f9\u0002\u0010\u00ee\u0001\u001a\u0006\b\u00fa\u0002\u0010\u00f0\u0001\"\u0006\b\u00fb\u0002\u0010\u00f2\u0001R)\u0010\u0082\u0003\u001a\u00020F8\u0006@\u0006X\u0086\u000e\u00a2\u0006\u0018\n\u0006\b\u00fd\u0002\u0010\u00c6\u0001\u001a\u0006\b\u00fe\u0002\u0010\u00ff\u0002\"\u0006\b\u0080\u0003\u0010\u0081\u0003R)\u0010\u0086\u0003\u001a\u00020F8\u0006@\u0006X\u0086\u000e\u00a2\u0006\u0018\n\u0006\b\u0083\u0003\u0010\u00c6\u0001\u001a\u0006\b\u0084\u0003\u0010\u00ff\u0002\"\u0006\b\u0085\u0003\u0010\u0081\u0003R.\u0010\u0089\u0003\u001a\u0004\u0018\u00010\u00072\t\u0010\u00dc\u0002\u001a\u0004\u0018\u00010\u00078\u0006@BX\u0086\u000e\u00a2\u0006\u0010\n\u0006\b\u0087\u0003\u0010\u00bf\u0002\u001a\u0006\b\u0088\u0003\u0010\u00c1\u0002R)\u0010\u008d\u0003\u001a\u00020\u00108\u0006@\u0006X\u0086\u000e\u00a2\u0006\u0018\n\u0006\b\u008a\u0003\u0010\u00ee\u0001\u001a\u0006\b\u008b\u0003\u0010\u00f0\u0001\"\u0006\b\u008c\u0003\u0010\u00f2\u0001R)\u0010\u0091\u0003\u001a\u00020\u00108\u0006@\u0006X\u0086\u000e\u00a2\u0006\u0018\n\u0006\b\u008e\u0003\u0010\u00ee\u0001\u001a\u0006\b\u008f\u0003\u0010\u00f0\u0001\"\u0006\b\u0090\u0003\u0010\u00f2\u0001R)\u0010\u0095\u0003\u001a\u00020\u00108\u0006@\u0006X\u0086\u000e\u00a2\u0006\u0018\n\u0006\b\u0092\u0003\u0010\u00ee\u0001\u001a\u0006\b\u0093\u0003\u0010\u00f0\u0001\"\u0006\b\u0094\u0003\u0010\u00f2\u0001R)\u0010\u0099\u0003\u001a\u00020\u00108\u0006@\u0006X\u0086\u000e\u00a2\u0006\u0018\n\u0006\b\u0096\u0003\u0010\u00ee\u0001\u001a\u0006\b\u0097\u0003\u0010\u00f0\u0001\"\u0006\b\u0098\u0003\u0010\u00f2\u0001R*\u0010\u009c\u0003\u001a\u00020\u00102\u0007\u0010\u00dc\u0002\u001a\u00020\u00108\u0006@BX\u0086\u000e\u00a2\u0006\u0010\n\u0006\b\u009a\u0003\u0010\u00ee\u0001\u001a\u0006\b\u009b\u0003\u0010\u00f0\u0001R*\u0010\u009f\u0003\u001a\u00020\u00102\u0007\u0010\u00dc\u0002\u001a\u00020\u00108\u0006@BX\u0086\u000e\u00a2\u0006\u0010\n\u0006\b\u009d\u0003\u0010\u00ee\u0001\u001a\u0006\b\u009e\u0003\u0010\u00f0\u0001R*\u0010\u00a2\u0003\u001a\u00020\u00102\u0007\u0010\u00dc\u0002\u001a\u00020\u00108\u0006@BX\u0086\u000e\u00a2\u0006\u0010\n\u0006\b\u00a0\u0003\u0010\u00ee\u0001\u001a\u0006\b\u00a1\u0003\u0010\u00f0\u0001R*\u0010\u00a5\u0003\u001a\u00020\u00102\u0007\u0010\u00dc\u0002\u001a\u00020\u00108\u0006@BX\u0086\u000e\u00a2\u0006\u0010\n\u0006\b\u00a3\u0003\u0010\u00ee\u0001\u001a\u0006\b\u00a4\u0003\u0010\u00f0\u0001R)\u0010\u00a9\u0003\u001a\u00020\u00108\u0006@\u0006X\u0086\u000e\u00a2\u0006\u0018\n\u0006\b\u00a6\u0003\u0010\u00ee\u0001\u001a\u0006\b\u00a7\u0003\u0010\u00f0\u0001\"\u0006\b\u00a8\u0003\u0010\u00f2\u0001R)\u0010\u00ad\u0003\u001a\u00020\u00108\u0006@\u0006X\u0086\u000e\u00a2\u0006\u0018\n\u0006\b\u00aa\u0003\u0010\u00ee\u0001\u001a\u0006\b\u00ab\u0003\u0010\u00f0\u0001\"\u0006\b\u00ac\u0003\u0010\u00f2\u0001R)\u0010\u00b1\u0003\u001a\u00020\u00108\u0006@\u0006X\u0086\u000e\u00a2\u0006\u0018\n\u0006\b\u00ae\u0003\u0010\u00ee\u0001\u001a\u0006\b\u00af\u0003\u0010\u00f0\u0001\"\u0006\b\u00b0\u0003\u0010\u00f2\u0001R)\u0010\u00b5\u0003\u001a\u00020\u00108\u0006@\u0006X\u0086\u000e\u00a2\u0006\u0018\n\u0006\b\u00b2\u0003\u0010\u00ee\u0001\u001a\u0006\b\u00b3\u0003\u0010\u00f0\u0001\"\u0006\b\u00b4\u0003\u0010\u00f2\u0001R)\u0010\u00b9\u0003\u001a\u00020F8\u0006@\u0006X\u0086\u000e\u00a2\u0006\u0018\n\u0006\b\u00b6\u0003\u0010\u00c6\u0001\u001a\u0006\b\u00b7\u0003\u0010\u00ff\u0002\"\u0006\b\u00b8\u0003\u0010\u0081\u0003R)\u0010\u00bd\u0003\u001a\u00020\u00078\u0006@\u0006X\u0086\u000e\u00a2\u0006\u0018\n\u0006\b\u00ba\u0003\u0010\u00bf\u0002\u001a\u0006\b\u00bb\u0003\u0010\u00c1\u0002\"\u0006\b\u00bc\u0003\u0010\u00c3\u0002R+\u0010\u00c1\u0003\u001a\u0004\u0018\u00010\u00078\u0006@\u0006X\u0086\u000e\u00a2\u0006\u0018\n\u0006\b\u00be\u0003\u0010\u00bf\u0002\u001a\u0006\b\u00bf\u0003\u0010\u00c1\u0002\"\u0006\b\u00c0\u0003\u0010\u00c3\u0002R)\u0010\u00c5\u0003\u001a\u00020\u00108\u0006@\u0006X\u0086\u000e\u00a2\u0006\u0018\n\u0006\b\u00c2\u0003\u0010\u00ee\u0001\u001a\u0006\b\u00c3\u0003\u0010\u00f0\u0001\"\u0006\b\u00c4\u0003\u0010\u00f2\u0001R)\u0010\u00c7\u0003\u001a\u00020\u00108\u0006@\u0006X\u0086\u000e\u00a2\u0006\u0018\n\u0006\b\u00c6\u0003\u0010\u00ee\u0001\u001a\u0006\b\u00c7\u0003\u0010\u00f0\u0001\"\u0006\b\u00c8\u0003\u0010\u00f2\u0001R)\u0010\u00ca\u0003\u001a\u00020\u00108\u0006@\u0006X\u0086\u000e\u00a2\u0006\u0018\n\u0006\b\u00c9\u0003\u0010\u00ee\u0001\u001a\u0006\b\u00ca\u0003\u0010\u00f0\u0001\"\u0006\b\u00cb\u0003\u0010\u00f2\u0001R(\u0010]\u001a\u00020\\8\u0006@\u0006X\u0086\u000e\u00a2\u0006\u0018\n\u0006\b\u00cc\u0003\u0010\u00cd\u0003\u001a\u0006\b\u00ce\u0003\u0010\u00cf\u0003\"\u0006\b\u00d0\u0003\u0010\u00d1\u0003R+\u0010\u00d8\u0003\u001a\u0004\u0018\u00010Q8\u0006@\u0006X\u0086\u000e\u00a2\u0006\u0018\n\u0006\b\u00d2\u0003\u0010\u00d3\u0003\u001a\u0006\b\u00d4\u0003\u0010\u00d5\u0003\"\u0006\b\u00d6\u0003\u0010\u00d7\u0003R)\u0010\u00dc\u0003\u001a\u00020\u00108\u0006@\u0006X\u0086\u000e\u00a2\u0006\u0018\n\u0006\b\u00d9\u0003\u0010\u00ee\u0001\u001a\u0006\b\u00da\u0003\u0010\u00f0\u0001\"\u0006\b\u00db\u0003\u0010\u00f2\u0001R)\u0010\u00e0\u0003\u001a\u00020\u00108\u0006@\u0006X\u0086\u000e\u00a2\u0006\u0018\n\u0006\b\u00dd\u0003\u0010\u00ee\u0001\u001a\u0006\b\u00de\u0003\u0010\u00f0\u0001\"\u0006\b\u00df\u0003\u0010\u00f2\u0001R)\u0010\u00e4\u0003\u001a\u00020\u00108\u0006@\u0006X\u0086\u000e\u00a2\u0006\u0018\n\u0006\b\u00e1\u0003\u0010\u00ee\u0001\u001a\u0006\b\u00e2\u0003\u0010\u00f0\u0001\"\u0006\b\u00e3\u0003\u0010\u00f2\u0001R)\u0010\u00e6\u0003\u001a\u00020\u00108\u0006@\u0006X\u0086\u000e\u00a2\u0006\u0018\n\u0006\b\u00e5\u0003\u0010\u00ee\u0001\u001a\u0006\b\u00e6\u0003\u0010\u00f0\u0001\"\u0006\b\u00e7\u0003\u0010\u00f2\u0001R)\u0010\u00e9\u0003\u001a\u00020\u00108\u0006@\u0006X\u0086\u000e\u00a2\u0006\u0018\n\u0006\b\u00e8\u0003\u0010\u00ee\u0001\u001a\u0006\b\u00e9\u0003\u0010\u00f0\u0001\"\u0006\b\u00ea\u0003\u0010\u00f2\u0001R+\u0010\u00ee\u0003\u001a\u0004\u0018\u00010\u00078\u0006@\u0006X\u0086\u000e\u00a2\u0006\u0018\n\u0006\b\u00eb\u0003\u0010\u00bf\u0002\u001a\u0006\b\u00ec\u0003\u0010\u00c1\u0002\"\u0006\b\u00ed\u0003\u0010\u00c3\u0002R)\u0010\u00f2\u0003\u001a\u00020F8\u0006@\u0006X\u0086\u000e\u00a2\u0006\u0018\n\u0006\b\u00ef\u0003\u0010\u00c6\u0001\u001a\u0006\b\u00f0\u0003\u0010\u00ff\u0002\"\u0006\b\u00f1\u0003\u0010\u0081\u0003R=\u0010\u00f6\u0003\u001a\u0016\u0012\u0004\u0012\u00020\u0007\u0018\u00010\u0012j\n\u0012\u0004\u0012\u00020\u0007\u0018\u0001`\u00148\u0006@\u0006X\u0086\u000e\u00a2\u0006\u0018\n\u0006\b\u00f3\u0003\u0010\u00d6\u0002\u001a\u0006\b\u00f4\u0003\u0010\u00d8\u0002\"\u0006\b\u00f5\u0003\u0010\u00da\u0002R)\u0010\u00fa\u0003\u001a\u00020\u00078\u0006@\u0006X\u0086\u000e\u00a2\u0006\u0018\n\u0006\b\u00f7\u0003\u0010\u00bf\u0002\u001a\u0006\b\u00f8\u0003\u0010\u00c1\u0002\"\u0006\b\u00f9\u0003\u0010\u00c3\u0002R)\u0010\u00fe\u0003\u001a\u00020\u00108\u0006@\u0006X\u0086\u000e\u00a2\u0006\u0018\n\u0006\b\u00fb\u0003\u0010\u00ee\u0001\u001a\u0006\b\u00fc\u0003\u0010\u00f0\u0001\"\u0006\b\u00fd\u0003\u0010\u00f2\u0001R)\u0010\u0082\u0004\u001a\u00020\u00108\u0006@\u0006X\u0086\u000e\u00a2\u0006\u0018\n\u0006\b\u00ff\u0003\u0010\u00ee\u0001\u001a\u0006\b\u0080\u0004\u0010\u00f0\u0001\"\u0006\b\u0081\u0004\u0010\u00f2\u0001R+\u0010\u0086\u0004\u001a\u0004\u0018\u00010\u00078\u0006@\u0006X\u0086\u000e\u00a2\u0006\u0018\n\u0006\b\u0083\u0004\u0010\u00bf\u0002\u001a\u0006\b\u0084\u0004\u0010\u00c1\u0002\"\u0006\b\u0085\u0004\u0010\u00c3\u0002R+\u0010\u008a\u0004\u001a\u0004\u0018\u00010\u00078\u0006@\u0006X\u0086\u000e\u00a2\u0006\u0018\n\u0006\b\u0087\u0004\u0010\u00bf\u0002\u001a\u0006\b\u0088\u0004\u0010\u00c1\u0002\"\u0006\b\u0089\u0004\u0010\u00c3\u0002R\u001b\u0010\u008c\u0004\u001a\u0004\u0018\u00010\u00078\u0002@\u0002X\u0082\u000e\u00a2\u0006\b\n\u0006\b\u008b\u0004\u0010\u00bf\u0002R)\u0010\u0090\u0004\u001a\u00020\u00078\u0006@\u0006X\u0086\u000e\u00a2\u0006\u0018\n\u0006\b\u008d\u0004\u0010\u00bf\u0002\u001a\u0006\b\u008e\u0004\u0010\u00c1\u0002\"\u0006\b\u008f\u0004\u0010\u00c3\u0002R)\u0010\u0094\u0004\u001a\u00020\u00108\u0006@\u0006X\u0086\u000e\u00a2\u0006\u0018\n\u0006\b\u0091\u0004\u0010\u00ee\u0001\u001a\u0006\b\u0092\u0004\u0010\u00f0\u0001\"\u0006\b\u0093\u0004\u0010\u00f2\u0001R)\u0010\u0098\u0004\u001a\u00020F8\u0006@\u0006X\u0086\u000e\u00a2\u0006\u0018\n\u0006\b\u0095\u0004\u0010\u00c6\u0001\u001a\u0006\b\u0096\u0004\u0010\u00ff\u0002\"\u0006\b\u0097\u0004\u0010\u0081\u0003R)\u0010\u009c\u0004\u001a\u00020\u00108\u0006@\u0006X\u0086\u000e\u00a2\u0006\u0018\n\u0006\b\u0099\u0004\u0010\u00ee\u0001\u001a\u0006\b\u009a\u0004\u0010\u00f0\u0001\"\u0006\b\u009b\u0004\u0010\u00f2\u0001R+\u0010\u00a3\u0004\u001a\u0004\u0018\u00010\u00058\u0006@\u0006X\u0086\u000e\u00a2\u0006\u0018\n\u0006\b\u009d\u0004\u0010\u009e\u0004\u001a\u0006\b\u009f\u0004\u0010\u00a0\u0004\"\u0006\b\u00a1\u0004\u0010\u00a2\u0004R)\u0010\u00a7\u0004\u001a\u00020\u00108\u0006@\u0006X\u0086\u000e\u00a2\u0006\u0018\n\u0006\b\u00a4\u0004\u0010\u00ee\u0001\u001a\u0006\b\u00a5\u0004\u0010\u00f0\u0001\"\u0006\b\u00a6\u0004\u0010\u00f2\u0001R)\u0010\u00ab\u0004\u001a\u00020\u00108\u0006@\u0006X\u0086\u000e\u00a2\u0006\u0018\n\u0006\b\u00a8\u0004\u0010\u00ee\u0001\u001a\u0006\b\u00a9\u0004\u0010\u00f0\u0001\"\u0006\b\u00aa\u0004\u0010\u00f2\u0001R)\u0010\u00b0\u0004\u001a\u0012\u0012\u000b\u0012\t\u0012\u0005\u0012\u00030\u00ad\u00040\u0016\u0018\u00010\u00ac\u00048\u0002@\u0002X\u0082\u000e\u00a2\u0006\b\n\u0006\b\u00ae\u0004\u0010\u00af\u0004R+\u0010\u00b7\u0004\u001a\u0004\u0018\u00010\u00198\u0006@\u0006X\u0086\u000e\u00a2\u0006\u0018\n\u0006\b\u00b1\u0004\u0010\u00b2\u0004\u001a\u0006\b\u00b3\u0004\u0010\u00b4\u0004\"\u0006\b\u00b5\u0004\u0010\u00b6\u0004R,\u0010\u00bf\u0004\u001a\u0005\u0018\u00010\u00b8\u00048\u0006@\u0006X\u0086\u000e\u00a2\u0006\u0018\n\u0006\b\u00b9\u0004\u0010\u00ba\u0004\u001a\u0006\b\u00bb\u0004\u0010\u00bc\u0004\"\u0006\b\u00bd\u0004\u0010\u00be\u0004R)\u0010\u00c1\u0004\u001a\u00020\u00108\u0006@\u0006X\u0086\u000e\u00a2\u0006\u0018\n\u0006\b\u00c0\u0004\u0010\u00ee\u0001\u001a\u0006\b\u00c1\u0004\u0010\u00f0\u0001\"\u0006\b\u00c2\u0004\u0010\u00f2\u0001R\u0014\u0010\u00c4\u0004\u001a\u00020\u00108F\u00a2\u0006\b\u001a\u0006\b\u00c3\u0004\u0010\u00f0\u0001R\u0014\u0010\u00c6\u0004\u001a\u00020\u00078F\u00a2\u0006\b\u001a\u0006\b\u00c5\u0004\u0010\u00c1\u0002\u00a8\u0006\u00cc\u0004"}, d2 = {"Lcom/tencent/mobileqq/wink/editor/WinkEditorViewModel;", "Lcom/tencent/biz/richframework/part/BaseViewModel;", "", "I3", "initVideoTemplatesObserver", "Landroid/content/Intent;", "intent", "", "t2", "v2", "H3", "A3", "Lcom/tencent/mobileqq/wink/editor/dr;", "curTavCut", "Lcom/tencent/mobileqq/wink/editor/sticker/WinkStickerModel;", ICustomDataEditor.NUMBER_PARAM_2, "", "canChange", "Ljava/util/ArrayList;", "Lcom/tencent/mobileqq/wink/editor/draft/WinkEditData;", "Lkotlin/collections/ArrayList;", "f2", "", "Lcom/tencent/mobileqq/activity/photo/LocalMediaInfo;", "inputMedias", "Lcom/tencent/mobileqq/wink/editor/draft/WinkEditDataWrapper;", "wrapper", "B4", "L4", "z4", ServiceCreateTask.SERVICE_TYPE_X5, "Lcom/tencent/mobileqq/wink/editor/menu/MenuItem;", "c3", "name", "b3", "menuItems", "O1", "Q1", "P1", "g2", "list", "K4", "C3", Constants.BASE_IN_APP_NAME, "Ljava/util/HashMap;", "Lkotlin/collections/HashMap;", "m3", "P3", "S3", "Landroid/content/Context;", "context", "y4", "Landroid/os/Bundle;", mqq.app.Constants.FILE_INSTANCE_STATE, "F3", "b2", ICustomDataEditor.STRING_ARRAY_PARAM_2, "Lcom/tencent/mobileqq/wink/editor/tts/source/TTSAudioInfo;", "ttsAudioInfo", "E5", "Lcamera/XEFFECT_MATERIALS_GENERAL_DATASTRUCT/MetaMaterial;", Constants.BASE_IN_PLUGIN_VERSION, WadlProxyConsts.KEY_MATERIAL, "U4", TPReportKeys.LiveExKeys.LIVE_EX_DEFINATION_SWICH, "A5", Constants.EMULATOR_INFO, "Landroid/content/res/Configuration;", "newConfig", "C4", "", "playerWidth", "playerHeight", "Lcom/tencent/mobileqq/wink/editor/dr$c;", "H4", "T2", "value", "M4", "key", "P4", "l5", "Lcom/tencent/mobileqq/wink/editor/menu/MenuType;", "newMenuType", "args", "u5", "F4", "onOrOff", "t5", "S1", "S2", "D5", "m2", "Lcom/tencent/mobileqq/wink/editor/WinkEditorViewModel$EditMode;", "editMode", "", "H2", "y5", "I4", "d2", "c2", "menuType", ICustomDataEditor.STRING_PARAM_5, ViewStickEventHelper.IS_SHOW, "m5", "localMediaInfo", "e2", "K2", "f4", "V3", "i4", "Z3", "c4", "g4", "b4", "X3", "k4", "W3", "O2", "u4", "t4", Constants.BASE_IN_HOTFIX, "O4", "W1", "getLogTag", "Lcom/tencent/mobileqq/wink/editor/music/viewmodel/MusicSourceViewModel;", "musicSourceViewModel", "Lcom/tencent/mobileqq/wink/editor/music/viewmodel/MusicVolumeControlViewModel;", "musicVolumeViewModel", "Lcom/tencent/mobileqq/wink/model/InteractiveModel;", "interactiveModel", "", "Lcom/tencent/mobileqq/wink/editor/draft/WinkEditUIData;", "partUIDataMap", "N4", "Lcom/tencent/videocut/model/HDRModel;", "inputMap", "", QAdReportDefine$AdReporterParams.K_Q_AD_REPORTER_PARAM_KEY_PLAY_TIME, "useHDR", "needPlay", "B5", "Ljava/lang/Runnable;", "action", "E4", "isUp", "T1", "Lcom/tencent/biz/richframework/part/BasePartFragment;", "hostFragment", "J4", "isChildFragmentShow", "U1", "Z1", "showLevel", "w5", "r5", "mediaDuration", ICustomDataEditor.NUMBER_PARAM_5, "o5", "q5", "p5", "La63/b;", "bubbleInfo", "p4", ICustomDataEditor.STRING_PARAM_4, "E3", "durationUs", "z5", "onCleared", "C2", "deletedStickerModels", Constants.DEBUG_INFO, "R1", "A4", "Landroidx/lifecycle/MutableLiveData;", "i", "Landroidx/lifecycle/MutableLiveData;", "_bottomDashboardMenuLiveData", "Landroidx/lifecycle/LiveData;", QCircleScheme.AttrQQPublish.INPUT_TAB_MAGIC_STUDIO, "Landroidx/lifecycle/LiveData;", "o2", "()Landroidx/lifecycle/LiveData;", "bottomDashboardMenuLiveData", BdhLogUtil.LogTag.Tag_Conn, "Ljava/util/List;", "currentMenuItems", "D", "_bottomDashboardMenuSwitchLiveData", "E", "p2", "bottomDashboardMenuSwitchLiveData", UserInfo.SEX_FEMALE, "_bottomDashboardShowHideLiveData", "G", "q2", "bottomDashboardShowHideLiveData", "H", "_firstTemplateClipSourceChangeLiveData", "I", "P2", "firstTemplateClipSourceChangeLiveData", "Lcom/tencent/mobileqq/wink/editor/menu/w;", "J", "_menuSwitchActionLiveData", "K", "f3", "menuSwitchActionLiveData", "L", "_tavCutParamsLiveData", "M", "p3", "tavCutParamsLiveData", "N", "_hasSmartFilterLiveData", "P", "Q2", "hasSmartFilterLiveData", AppConstants.RichMediaErrorCode.HTTP_OK_FAIL_PRE, "_isBackgroundTextMaterialLiveData", BdhLogUtil.LogTag.Tag_Req, "isBackgroundTextMaterialLiveData", "Lt73/a;", ExifInterface.LATITUDE_SOUTH, "_enhanceEvent", "T", "M2", "enhanceEvent", "U", "_changeBackgroundEvent", "V", "w2", "changeBackgroundEvent", "W", "_stickerLayoutChanged", "X", "o3", "stickerLayoutChanged", "Y", "Z", "N2", "()Z", "c5", "(Z)V", "enhanceOnOffState", "_openGuideEnhance", "a0", "i3", "openGuideEnhance", "b0", "_uiDraftChanged", "c0", "w3", "uiDraftChanged", "d0", "_childFragmentHidden", "e0", "x2", "childFragmentHidden", "f0", "_dismissPartLiveData", "g0", "F2", "dismissPartLiveData", "h0", "_mediaTooLongLiveData", "i0", ICustomDataEditor.STRING_ARRAY_PARAM_3, "mediaTooLongLiveData", "j0", "_qzonePhotoTemplateLiveData", "k0", "l3", "qzonePhotoTemplateLiveData", "l0", "_tianShuBubbleLiveData", "m0", "u3", "tianShuBubbleLiveData", "n0", "_mediaDurationLiveData", "o0", "Y2", "mediaDurationLiveData", "p0", "_stickerDeletedLiveData", "q0", ICustomDataEditor.NUMBER_PARAM_3, "stickerDeletedLiveData", "r0", "_onConfigurationChanged", "s0", "h3", "onConfigurationChanged", "t0", "_menuSwitch", "u0", "e3", "menuSwitch", "v0", "_updateEnhanceResLiveData", "w0", "x3", "updateEnhanceResLiveData", "x0", "d3", "()Landroidx/lifecycle/MutableLiveData;", "menuRedDotLiveData", "y0", "bubbleShowLevel", "z0", "A0", "Lcom/tencent/mobileqq/wink/picker/TemplateLibraryHolderInfo;", "B0", "r3", "()Ljava/util/List;", "i5", "(Ljava/util/List;)V", "templateMediaHolderInfo", "C0", "Ljava/lang/String;", "isPubFailed", "()Ljava/lang/String;", "setPubFailed", "(Ljava/lang/String;)V", "D0", ICustomDataEditor.STRING_PARAM_3, "setTemplatePath", "templatePath", "E0", "Lcamera/XEFFECT_MATERIALS_GENERAL_DATASTRUCT/MetaMaterial;", "q3", "()Lcamera/XEFFECT_MATERIALS_GENERAL_DATASTRUCT/MetaMaterial;", "setTemplateMaterial", "(Lcamera/XEFFECT_MATERIALS_GENERAL_DATASTRUCT/MetaMaterial;)V", "templateMaterial", "F0", "Lcom/tencent/mobileqq/wink/editor/tts/source/TTSAudioInfo;", "v3", "()Lcom/tencent/mobileqq/wink/editor/tts/source/TTSAudioInfo;", "setTtsAudioInfo", "(Lcom/tencent/mobileqq/wink/editor/tts/source/TTSAudioInfo;)V", "G0", "Ljava/util/ArrayList;", "R2", "()Ljava/util/ArrayList;", "e5", "(Ljava/util/ArrayList;)V", "inputMedia", "<set-?>", "H0", "g3", "missionId", "I0", "o4", "isLoadFromDraft", "J0", "R3", "X4", "isDraftDeletedWhenBack", "K0", "Ljava/util/HashMap;", "i2", "()Ljava/util/HashMap;", "assetData", "L0", "Ljava/util/Map;", "editDataMap", "M0", "B2", "currentPlayerTimeLiveData", "Lcom/tencent/tavcut/core/render/player/IPlayer$PlayerStatus;", "N0", NowProxyConstants.AccountInfoKey.A2, "currentPlayerStateLiveData", "O0", "isReportAutoTemplate", "setReportAutoTemplate", "P0", "v4", "h5", "isSchemaTemplate", "Q0", "V2", "()I", "f5", "(I)V", "mFrom", "R0", "U2", "setMDraftFrom", "mDraftFrom", "S0", "r2", PreDownloadConstants.RPORT_KEY_BUSINESS_NAME, "T0", "Y3", "setFromCapture", "isFromCapture", "U0", "Q3", "W4", "isDisableOther", "V0", "L3", "setAllImages", "isAllImages", "W0", "M3", "setAllVideos", "isAllVideos", "X0", "w4", "isSingleVideo", "Y0", "l4", "isFromTemplateLib", "Z0", "j4", "isFromTemplateColl", ICustomDataEditor.STRING_ARRAY_PARAM_1, "r4", "isQCircleAutoTemplate", "b1", "N3", "R4", "isAutoTemplate", "c1", "e4", "setFromMemoryAlbum", "isFromMemoryAlbum", "d1", "m4", "setFromZShow", "isFromZShow", "e1", "d4", "setFromMagicStudio", "isFromMagicStudio", "f1", "y2", "setCoverIndex", "coverIndex", "g1", "W2", "setMagicStudioSessionID", "magicStudioSessionID", "h1", "getMagicStudioStyleName", "setMagicStudioStyleName", "magicStudioStyleName", "i1", ICustomDataEditor.STRING_ARRAY_PARAM_4, "setFromFirstTemplate", "isFromFirstTemplate", "j1", "isFromQzoneAlbum", "setFromQzoneAlbum", "k1", "isFromQzoneAlumShowRecommendTemplate", "setFromQzoneAlumShowRecommendTemplate", "l1", "Lcom/tencent/mobileqq/wink/editor/WinkEditorViewModel$EditMode;", "J2", "()Lcom/tencent/mobileqq/wink/editor/WinkEditorViewModel$EditMode;", "Y4", "(Lcom/tencent/mobileqq/wink/editor/WinkEditorViewModel$EditMode;)V", "m1", "Lcom/tencent/mobileqq/wink/editor/menu/MenuType;", "z2", "()Lcom/tencent/mobileqq/wink/editor/menu/MenuType;", "T4", "(Lcom/tencent/mobileqq/wink/editor/menu/MenuType;)V", "curMenuType", ICustomDataEditor.NUMBER_PARAM_1, "L2", "Z4", "enableImageTransition", "o1", "x4", "k5", "isUserImageReplaced", "p1", "h4", "setFromQzoneText", "isFromQzoneText", "q1", "isFormFeedPublish", "setFormFeedPublish", "r1", "isFormQCirclePicker", "setFormQCirclePicker", ICustomDataEditor.STRING_PARAM_1, "t3", "j5", "textQzoneText", "t1", "j2", "setBackgroundMaterialIndex", "backgroundMaterialIndex", "u1", "k2", "setBackgroundMaterialList", "backgroundMaterialList", "v1", "l2", "S4", "backgroundTemplatePath", "w1", "q4", "g5", "isOpeningEndingEditMode", "x1", "K3", "Q4", "isAigcOpeningEndingTemplate", "y1", ICustomDataEditor.STRING_PARAM_2, "setCaptureMaterialId", "captureMaterialId", "z1", "u2", "setCaptureMaterialName", "captureMaterialName", "A1", "bottomTabString", "B1", Constants.MMCCID, "setDraftMusicMid", "draftMusicMid", "C1", "T3", ICustomDataEditor.STRING_ARRAY_PARAM_5, "isEnableMusic", Constants.BASE_IN_PLUGIN_ID, "y3", "setUseHD", "useHD", "E1", "O3", "setBubbleShowed", "isBubbleShowed", "F1", "Landroid/content/Intent;", SemanticAttributes.DbSystemValues.H2, "()Landroid/content/Intent;", "setActivityIntent", "(Landroid/content/Intent;)V", "activityIntent", Constants.APK_CERTIFICATE, "U3", "b5", "isEnableSwitchEditMode", "H1", ICustomDataEditor.NUMBER_PARAM_4, "d5", "isHDRExporting", "Landroidx/lifecycle/Observer;", "Lcamera/XEFFECT_MATERIALS_GENERAL_DATASTRUCT/MetaCategory;", "I1", "Landroidx/lifecycle/Observer;", "mVideoTemplatesObserver", "J1", "Lcom/tencent/mobileqq/wink/editor/draft/WinkEditDataWrapper;", "j3", "()Lcom/tencent/mobileqq/wink/editor/draft/WinkEditDataWrapper;", "setOriginEditData", "(Lcom/tencent/mobileqq/wink/editor/draft/WinkEditDataWrapper;)V", "originEditData", "Lorg/light/WatermarkConfig;", "K1", "Lorg/light/WatermarkConfig;", "z3", "()Lorg/light/WatermarkConfig;", "setWatermarkConfig", "(Lorg/light/WatermarkConfig;)V", "watermarkConfig", "L1", "isDailySend", "V4", "k3", "pageFromDraft", "E2", "directPublishType", "<init>", "()V", "M1", "a", "EditMode", "qq-wink-impl_release"}, k = 1, mv = {1, 7, 1})
/* loaded from: classes21.dex */
public final class WinkEditorViewModel extends BaseViewModel {

    @NotNull
    private static final List<MenuType> N1;

    @Nullable
    private static MetaMaterial O1;

    /* renamed from: A0, reason: from kotlin metadata */
    private int playerHeight;

    /* renamed from: A1, reason: from kotlin metadata */
    @Nullable
    private String bottomTabString;

    /* renamed from: B0, reason: from kotlin metadata */
    @Nullable
    private List<TemplateLibraryHolderInfo> templateMediaHolderInfo;

    /* renamed from: B1, reason: from kotlin metadata */
    @NotNull
    private String draftMusicMid;

    /* renamed from: C */
    @NotNull
    private List<MenuItem> currentMenuItems;

    /* renamed from: C0, reason: from kotlin metadata */
    @Nullable
    private String isPubFailed;

    /* renamed from: C1, reason: from kotlin metadata */
    private boolean isEnableMusic;

    /* renamed from: D, reason: from kotlin metadata */
    @NotNull
    private final MutableLiveData<MenuType> _bottomDashboardMenuSwitchLiveData;

    /* renamed from: D0, reason: from kotlin metadata */
    @Nullable
    private String templatePath;

    /* renamed from: D1 */
    private int useHD;

    /* renamed from: E, reason: from kotlin metadata */
    @NotNull
    private final LiveData<MenuType> bottomDashboardMenuSwitchLiveData;

    /* renamed from: E0, reason: from kotlin metadata */
    @Nullable
    private MetaMaterial templateMaterial;

    /* renamed from: E1, reason: from kotlin metadata */
    private boolean isBubbleShowed;

    /* renamed from: F */
    @NotNull
    private final MutableLiveData<Boolean> _bottomDashboardShowHideLiveData;

    /* renamed from: F0, reason: from kotlin metadata */
    @Nullable
    private TTSAudioInfo ttsAudioInfo;

    /* renamed from: F1, reason: from kotlin metadata */
    @Nullable
    private Intent activityIntent;

    /* renamed from: G, reason: from kotlin metadata */
    @NotNull
    private final LiveData<Boolean> bottomDashboardShowHideLiveData;

    /* renamed from: G0, reason: from kotlin metadata */
    @Nullable
    private ArrayList<LocalMediaInfo> inputMedia;

    /* renamed from: G1 */
    private boolean isEnableSwitchEditMode;

    /* renamed from: H, reason: from kotlin metadata */
    @NotNull
    private final MutableLiveData<ArrayList<LocalMediaInfo>> _firstTemplateClipSourceChangeLiveData;

    /* renamed from: H0, reason: from kotlin metadata */
    @NotNull
    private String missionId;

    /* renamed from: H1, reason: from kotlin metadata */
    private volatile boolean isHDRExporting;

    /* renamed from: I, reason: from kotlin metadata */
    @NotNull
    private final LiveData<ArrayList<LocalMediaInfo>> firstTemplateClipSourceChangeLiveData;

    /* renamed from: I0, reason: from kotlin metadata */
    private boolean isLoadFromDraft;

    /* renamed from: I1, reason: from kotlin metadata */
    @Nullable
    private Observer<List<MetaCategory>> mVideoTemplatesObserver;

    /* renamed from: J, reason: from kotlin metadata */
    @NotNull
    private final MutableLiveData<MenuSwitchAction> _menuSwitchActionLiveData;

    /* renamed from: J0, reason: from kotlin metadata */
    private boolean isDraftDeletedWhenBack;

    /* renamed from: J1, reason: from kotlin metadata */
    @Nullable
    private WinkEditDataWrapper originEditData;

    /* renamed from: K, reason: from kotlin metadata */
    @NotNull
    private final LiveData<MenuSwitchAction> menuSwitchActionLiveData;

    /* renamed from: K0, reason: from kotlin metadata */
    @NotNull
    private final HashMap<String, String> assetData;

    /* renamed from: K1, reason: from kotlin metadata */
    @Nullable
    private WatermarkConfig watermarkConfig;

    /* renamed from: L, reason: from kotlin metadata */
    @NotNull
    private final MutableLiveData<dr.WinkTavCutParams> _tavCutParamsLiveData;

    /* renamed from: L0, reason: from kotlin metadata */
    @NotNull
    private final Map<EditMode, List<WinkEditData>> editDataMap;

    /* renamed from: L1, reason: from kotlin metadata */
    private boolean isDailySend;

    /* renamed from: M, reason: from kotlin metadata */
    @NotNull
    private final LiveData<dr.WinkTavCutParams> tavCutParamsLiveData;

    /* renamed from: M0, reason: from kotlin metadata */
    @NotNull
    private final MutableLiveData<Long> currentPlayerTimeLiveData;

    /* renamed from: N, reason: from kotlin metadata */
    @NotNull
    private final MutableLiveData<Boolean> _hasSmartFilterLiveData;

    /* renamed from: N0, reason: from kotlin metadata */
    @NotNull
    private final MutableLiveData<IPlayer.PlayerStatus> currentPlayerStateLiveData;

    /* renamed from: O0, reason: from kotlin metadata */
    private boolean isReportAutoTemplate;

    /* renamed from: P, reason: from kotlin metadata */
    @NotNull
    private final LiveData<Boolean> hasSmartFilterLiveData;

    /* renamed from: P0, reason: from kotlin metadata */
    private boolean isSchemaTemplate;

    /* renamed from: Q */
    @NotNull
    private final MutableLiveData<Boolean> _isBackgroundTextMaterialLiveData;

    /* renamed from: Q0, reason: from kotlin metadata */
    private int mFrom;

    /* renamed from: R */
    @NotNull
    private final LiveData<Boolean> isBackgroundTextMaterialLiveData;

    /* renamed from: R0, reason: from kotlin metadata */
    private int mDraftFrom;

    /* renamed from: S */
    @NotNull
    private final MutableLiveData<t73.a<Boolean>> _enhanceEvent;

    /* renamed from: S0, reason: from kotlin metadata */
    @Nullable
    private String com.tencent.mobileqq.transfile.predownload.schedule.PreDownloadConstants.RPORT_KEY_BUSINESS_NAME java.lang.String;

    /* renamed from: T, reason: from kotlin metadata */
    @NotNull
    private final LiveData<t73.a<Boolean>> enhanceEvent;

    /* renamed from: T0, reason: from kotlin metadata */
    private boolean isFromCapture;

    /* renamed from: U, reason: from kotlin metadata */
    @NotNull
    private final MutableLiveData<t73.a<String>> _changeBackgroundEvent;

    /* renamed from: U0, reason: from kotlin metadata */
    private boolean isDisableOther;

    /* renamed from: V, reason: from kotlin metadata */
    @NotNull
    private final LiveData<t73.a<String>> changeBackgroundEvent;

    /* renamed from: V0, reason: from kotlin metadata */
    private boolean isAllImages;

    /* renamed from: W, reason: from kotlin metadata */
    @NotNull
    private final MutableLiveData<Boolean> _stickerLayoutChanged;

    /* renamed from: W0, reason: from kotlin metadata */
    private boolean isAllVideos;

    /* renamed from: X, reason: from kotlin metadata */
    @NotNull
    private final LiveData<Boolean> stickerLayoutChanged;

    /* renamed from: X0, reason: from kotlin metadata */
    private boolean isSingleVideo;

    /* renamed from: Y, reason: from kotlin metadata */
    private boolean enhanceOnOffState;

    /* renamed from: Y0, reason: from kotlin metadata */
    private boolean isFromTemplateLib;

    /* renamed from: Z, reason: from kotlin metadata */
    @NotNull
    private final MutableLiveData<t73.a<Runnable>> _openGuideEnhance;

    /* renamed from: Z0, reason: from kotlin metadata */
    private boolean isFromTemplateColl;

    /* renamed from: a0, reason: from kotlin metadata */
    @NotNull
    private final LiveData<t73.a<Runnable>> openGuideEnhance;

    /* renamed from: a1 */
    private boolean isQCircleAutoTemplate;

    /* renamed from: b0, reason: from kotlin metadata */
    @NotNull
    private final MutableLiveData<Map<String, WinkEditUIData>> _uiDraftChanged;

    /* renamed from: b1, reason: from kotlin metadata */
    private boolean isAutoTemplate;

    /* renamed from: c0, reason: from kotlin metadata */
    @NotNull
    private final LiveData<Map<String, WinkEditUIData>> uiDraftChanged;

    /* renamed from: c1, reason: from kotlin metadata */
    private boolean isFromMemoryAlbum;

    /* renamed from: d0, reason: from kotlin metadata */
    @NotNull
    private final MutableLiveData<Boolean> _childFragmentHidden;

    /* renamed from: d1, reason: from kotlin metadata */
    private boolean isFromZShow;

    /* renamed from: e0, reason: from kotlin metadata */
    @NotNull
    private final LiveData<Boolean> childFragmentHidden;

    /* renamed from: e1, reason: from kotlin metadata */
    private boolean isFromMagicStudio;

    /* renamed from: f0, reason: from kotlin metadata */
    @NotNull
    private final MutableLiveData<MenuType> _dismissPartLiveData;

    /* renamed from: f1, reason: from kotlin metadata */
    private int coverIndex;

    /* renamed from: g0, reason: from kotlin metadata */
    @NotNull
    private final LiveData<MenuType> dismissPartLiveData;

    /* renamed from: g1, reason: from kotlin metadata */
    @NotNull
    private String magicStudioSessionID;

    /* renamed from: h0, reason: from kotlin metadata */
    @NotNull
    private final MutableLiveData<String> _mediaTooLongLiveData;

    /* renamed from: h1, reason: from kotlin metadata */
    @Nullable
    private String magicStudioStyleName;

    /* renamed from: i, reason: from kotlin metadata */
    @NotNull
    private final MutableLiveData<List<MenuItem>> _bottomDashboardMenuLiveData;

    /* renamed from: i0, reason: from kotlin metadata */
    @NotNull
    private final LiveData<String> mediaTooLongLiveData;

    /* renamed from: i1, reason: from kotlin metadata */
    private boolean isFromFirstTemplate;

    /* renamed from: j0, reason: from kotlin metadata */
    @NotNull
    private final MutableLiveData<String> _qzonePhotoTemplateLiveData;

    /* renamed from: j1, reason: from kotlin metadata */
    private boolean isFromQzoneAlbum;

    /* renamed from: k0, reason: from kotlin metadata */
    @NotNull
    private final LiveData<String> qzonePhotoTemplateLiveData;

    /* renamed from: k1, reason: from kotlin metadata */
    private boolean isFromQzoneAlumShowRecommendTemplate;

    /* renamed from: l0, reason: from kotlin metadata */
    @NotNull
    private final MutableLiveData<WinkBubbleInfo> _tianShuBubbleLiveData;

    /* renamed from: l1, reason: from kotlin metadata */
    @NotNull
    private EditMode editMode;

    /* renamed from: m */
    @NotNull
    private final LiveData<List<MenuItem>> bottomDashboardMenuLiveData;

    /* renamed from: m0, reason: from kotlin metadata */
    @NotNull
    private final LiveData<WinkBubbleInfo> tianShuBubbleLiveData;

    /* renamed from: m1, reason: from kotlin metadata */
    @Nullable
    private MenuType curMenuType;

    /* renamed from: n0, reason: from kotlin metadata */
    @NotNull
    private final MutableLiveData<Long> _mediaDurationLiveData;

    /* renamed from: n1 */
    private boolean enableImageTransition;

    /* renamed from: o0, reason: from kotlin metadata */
    @NotNull
    private final LiveData<Long> mediaDurationLiveData;

    /* renamed from: o1, reason: from kotlin metadata */
    private boolean isUserImageReplaced;

    /* renamed from: p0, reason: from kotlin metadata */
    @NotNull
    private final MutableLiveData<List<WinkStickerModel>> _stickerDeletedLiveData;

    /* renamed from: p1, reason: from kotlin metadata */
    private boolean isFromQzoneText;

    /* renamed from: q0, reason: from kotlin metadata */
    @NotNull
    private final LiveData<List<WinkStickerModel>> stickerDeletedLiveData;

    /* renamed from: q1, reason: from kotlin metadata */
    private boolean isFormFeedPublish;

    /* renamed from: r0, reason: from kotlin metadata */
    @NotNull
    private final MutableLiveData<Configuration> _onConfigurationChanged;

    /* renamed from: r1, reason: from kotlin metadata */
    private boolean isFormQCirclePicker;

    /* renamed from: s0, reason: from kotlin metadata */
    @NotNull
    private final LiveData<Configuration> onConfigurationChanged;

    /* renamed from: s1 */
    @Nullable
    private String textQzoneText;

    /* renamed from: t0, reason: from kotlin metadata */
    @NotNull
    private final MutableLiveData<MenuType> _menuSwitch;

    /* renamed from: t1, reason: from kotlin metadata */
    private int backgroundMaterialIndex;

    /* renamed from: u0, reason: from kotlin metadata */
    @NotNull
    private final LiveData<MenuType> menuSwitch;

    /* renamed from: u1, reason: from kotlin metadata */
    @Nullable
    private ArrayList<String> backgroundMaterialList;

    /* renamed from: v0, reason: from kotlin metadata */
    @NotNull
    private final MutableLiveData<Boolean> _updateEnhanceResLiveData;

    /* renamed from: v1, reason: from kotlin metadata */
    @NotNull
    private String backgroundTemplatePath;

    /* renamed from: w0, reason: from kotlin metadata */
    @NotNull
    private final LiveData<Boolean> updateEnhanceResLiveData;

    /* renamed from: w1, reason: from kotlin metadata */
    private boolean isOpeningEndingEditMode;

    /* renamed from: x0, reason: from kotlin metadata */
    @NotNull
    private final MutableLiveData<MenuType> menuRedDotLiveData;

    /* renamed from: x1, reason: from kotlin metadata */
    private boolean isAigcOpeningEndingTemplate;

    /* renamed from: y0, reason: from kotlin metadata */
    private int bubbleShowLevel;

    /* renamed from: y1, reason: from kotlin metadata */
    @Nullable
    private String captureMaterialId;

    /* renamed from: z0, reason: from kotlin metadata */
    private int playerWidth;

    /* renamed from: z1, reason: from kotlin metadata */
    @Nullable
    private String captureMaterialName;

    /* compiled from: P */
    @Metadata(d1 = {"\u0000\f\n\u0002\u0018\u0002\n\u0002\u0010\u0010\n\u0002\b\u0004\b\u0086\u0001\u0018\u00002\b\u0012\u0004\u0012\u00020\u00000\u0001B\u0007\b\u0002\u00a2\u0006\u0002\u0010\u0002j\u0002\b\u0003j\u0002\b\u0004\u00a8\u0006\u0005"}, d2 = {"Lcom/tencent/mobileqq/wink/editor/WinkEditorViewModel$EditMode;", "", "(Ljava/lang/String;I)V", "Image", ComponentFactory.ComponentType.VIDEO, "qq-wink-impl_release"}, k = 1, mv = {1, 7, 1}, xi = 48)
    /* loaded from: classes21.dex */
    public enum EditMode {
        Image,
        Video
    }

    /* compiled from: P */
    @Metadata(k = 3, mv = {1, 7, 1}, xi = 48)
    /* loaded from: classes21.dex */
    public /* synthetic */ class b {

        /* renamed from: a */
        public static final /* synthetic */ int[] f318643a;

        /* renamed from: b */
        public static final /* synthetic */ int[] f318644b;

        /* renamed from: c */
        public static final /* synthetic */ int[] f318645c;

        static {
            int[] iArr = new int[MenuType.values().length];
            try {
                iArr[MenuType.TO_IMAGE.ordinal()] = 1;
            } catch (NoSuchFieldError unused) {
            }
            try {
                iArr[MenuType.TO_VIDEO.ordinal()] = 2;
            } catch (NoSuchFieldError unused2) {
            }
            try {
                iArr[MenuType.TTS.ordinal()] = 3;
            } catch (NoSuchFieldError unused3) {
            }
            f318643a = iArr;
            int[] iArr2 = new int[EditMode.values().length];
            try {
                iArr2[EditMode.Image.ordinal()] = 1;
            } catch (NoSuchFieldError unused4) {
            }
            try {
                iArr2[EditMode.Video.ordinal()] = 2;
            } catch (NoSuchFieldError unused5) {
            }
            f318644b = iArr2;
            int[] iArr3 = new int[MenuItem.values().length];
            try {
                iArr3[MenuItem.ENHANCE.ordinal()] = 1;
            } catch (NoSuchFieldError unused6) {
            }
            try {
                iArr3[MenuItem.EFFECT.ordinal()] = 2;
            } catch (NoSuchFieldError unused7) {
            }
            f318645c = iArr3;
        }
    }

    static {
        List<MenuType> listOf;
        listOf = CollectionsKt__CollectionsKt.listOf((Object[]) new MenuType[]{MenuType.CLIPPING, MenuType.TEMPLATE_COLL_CLIP, MenuType.EFFECT, MenuType.CROP, MenuType.OPENING_ENDING, MenuType.SUBTITLE});
        N1 = listOf;
    }

    public WinkEditorViewModel() {
        MutableLiveData<List<MenuItem>> mutableLiveData = new MutableLiveData<>();
        this._bottomDashboardMenuLiveData = mutableLiveData;
        this.bottomDashboardMenuLiveData = mutableLiveData;
        this.currentMenuItems = new ArrayList();
        MutableLiveData<MenuType> mutableLiveData2 = new MutableLiveData<>();
        this._bottomDashboardMenuSwitchLiveData = mutableLiveData2;
        this.bottomDashboardMenuSwitchLiveData = mutableLiveData2;
        MutableLiveData<Boolean> mutableLiveData3 = new MutableLiveData<>();
        this._bottomDashboardShowHideLiveData = mutableLiveData3;
        this.bottomDashboardShowHideLiveData = mutableLiveData3;
        MutableLiveData<ArrayList<LocalMediaInfo>> mutableLiveData4 = new MutableLiveData<>();
        this._firstTemplateClipSourceChangeLiveData = mutableLiveData4;
        this.firstTemplateClipSourceChangeLiveData = mutableLiveData4;
        MutableLiveData<MenuSwitchAction> mutableLiveData5 = new MutableLiveData<>();
        this._menuSwitchActionLiveData = mutableLiveData5;
        this.menuSwitchActionLiveData = mutableLiveData5;
        MutableLiveData<dr.WinkTavCutParams> mutableLiveData6 = new MutableLiveData<>();
        this._tavCutParamsLiveData = mutableLiveData6;
        this.tavCutParamsLiveData = mutableLiveData6;
        MutableLiveData<Boolean> mutableLiveData7 = new MutableLiveData<>();
        this._hasSmartFilterLiveData = mutableLiveData7;
        this.hasSmartFilterLiveData = mutableLiveData7;
        MutableLiveData<Boolean> mutableLiveData8 = new MutableLiveData<>();
        this._isBackgroundTextMaterialLiveData = mutableLiveData8;
        this.isBackgroundTextMaterialLiveData = mutableLiveData8;
        MutableLiveData<t73.a<Boolean>> mutableLiveData9 = new MutableLiveData<>();
        this._enhanceEvent = mutableLiveData9;
        Intrinsics.checkNotNull(mutableLiveData9, "null cannot be cast to non-null type androidx.lifecycle.LiveData<com.tencent.mobileqq.wink.event.LiveDataEvent<kotlin.Boolean>>");
        this.enhanceEvent = mutableLiveData9;
        MutableLiveData<t73.a<String>> mutableLiveData10 = new MutableLiveData<>();
        this._changeBackgroundEvent = mutableLiveData10;
        Intrinsics.checkNotNull(mutableLiveData10, "null cannot be cast to non-null type androidx.lifecycle.LiveData<com.tencent.mobileqq.wink.event.LiveDataEvent<kotlin.String>>");
        this.changeBackgroundEvent = mutableLiveData10;
        MutableLiveData<Boolean> mutableLiveData11 = new MutableLiveData<>();
        this._stickerLayoutChanged = mutableLiveData11;
        Intrinsics.checkNotNull(mutableLiveData11, "null cannot be cast to non-null type androidx.lifecycle.LiveData<kotlin.Boolean>");
        this.stickerLayoutChanged = mutableLiveData11;
        MutableLiveData<t73.a<Runnable>> mutableLiveData12 = new MutableLiveData<>();
        this._openGuideEnhance = mutableLiveData12;
        Intrinsics.checkNotNull(mutableLiveData12, "null cannot be cast to non-null type androidx.lifecycle.LiveData<com.tencent.mobileqq.wink.event.LiveDataEvent<java.lang.Runnable>>");
        this.openGuideEnhance = mutableLiveData12;
        MutableLiveData<Map<String, WinkEditUIData>> mutableLiveData13 = new MutableLiveData<>();
        this._uiDraftChanged = mutableLiveData13;
        Intrinsics.checkNotNull(mutableLiveData13, "null cannot be cast to non-null type androidx.lifecycle.LiveData<kotlin.collections.MutableMap<kotlin.String, com.tencent.mobileqq.wink.editor.draft.WinkEditUIData>>");
        this.uiDraftChanged = mutableLiveData13;
        MutableLiveData<Boolean> mutableLiveData14 = new MutableLiveData<>();
        this._childFragmentHidden = mutableLiveData14;
        Intrinsics.checkNotNull(mutableLiveData14, "null cannot be cast to non-null type androidx.lifecycle.LiveData<kotlin.Boolean>");
        this.childFragmentHidden = mutableLiveData14;
        MutableLiveData<MenuType> mutableLiveData15 = new MutableLiveData<>();
        this._dismissPartLiveData = mutableLiveData15;
        Intrinsics.checkNotNull(mutableLiveData15, "null cannot be cast to non-null type androidx.lifecycle.LiveData<com.tencent.mobileqq.wink.editor.menu.MenuType>");
        this.dismissPartLiveData = mutableLiveData15;
        MutableLiveData<String> mutableLiveData16 = new MutableLiveData<>();
        this._mediaTooLongLiveData = mutableLiveData16;
        Intrinsics.checkNotNull(mutableLiveData16, "null cannot be cast to non-null type androidx.lifecycle.LiveData<kotlin.String>");
        this.mediaTooLongLiveData = mutableLiveData16;
        MutableLiveData<String> mutableLiveData17 = new MutableLiveData<>();
        this._qzonePhotoTemplateLiveData = mutableLiveData17;
        Intrinsics.checkNotNull(mutableLiveData17, "null cannot be cast to non-null type androidx.lifecycle.LiveData<kotlin.String>");
        this.qzonePhotoTemplateLiveData = mutableLiveData17;
        MutableLiveData<WinkBubbleInfo> mutableLiveData18 = new MutableLiveData<>();
        this._tianShuBubbleLiveData = mutableLiveData18;
        Intrinsics.checkNotNull(mutableLiveData18, "null cannot be cast to non-null type androidx.lifecycle.LiveData<com.tencent.mobileqq.wink.editor.bubble.WinkBubbleInfo>");
        this.tianShuBubbleLiveData = mutableLiveData18;
        MutableLiveData<Long> mutableLiveData19 = new MutableLiveData<>();
        this._mediaDurationLiveData = mutableLiveData19;
        Intrinsics.checkNotNull(mutableLiveData19, "null cannot be cast to non-null type androidx.lifecycle.LiveData<kotlin.Long>");
        this.mediaDurationLiveData = mutableLiveData19;
        MutableLiveData<List<WinkStickerModel>> mutableLiveData20 = new MutableLiveData<>();
        this._stickerDeletedLiveData = mutableLiveData20;
        Intrinsics.checkNotNull(mutableLiveData20, "null cannot be cast to non-null type androidx.lifecycle.LiveData<kotlin.collections.List<com.tencent.mobileqq.wink.editor.sticker.WinkStickerModel>>");
        this.stickerDeletedLiveData = mutableLiveData20;
        MutableLiveData<Configuration> mutableLiveData21 = new MutableLiveData<>();
        this._onConfigurationChanged = mutableLiveData21;
        Intrinsics.checkNotNull(mutableLiveData21, "null cannot be cast to non-null type androidx.lifecycle.LiveData<android.content.res.Configuration?>");
        this.onConfigurationChanged = mutableLiveData21;
        MutableLiveData<MenuType> mutableLiveData22 = new MutableLiveData<>();
        this._menuSwitch = mutableLiveData22;
        Intrinsics.checkNotNull(mutableLiveData22, "null cannot be cast to non-null type androidx.lifecycle.LiveData<com.tencent.mobileqq.wink.editor.menu.MenuType?>");
        this.menuSwitch = mutableLiveData22;
        MutableLiveData<Boolean> mutableLiveData23 = new MutableLiveData<>();
        this._updateEnhanceResLiveData = mutableLiveData23;
        Intrinsics.checkNotNull(mutableLiveData23, "null cannot be cast to non-null type androidx.lifecycle.LiveData<kotlin.Boolean>");
        this.updateEnhanceResLiveData = mutableLiveData23;
        this.menuRedDotLiveData = new MutableLiveData<>();
        this.bubbleShowLevel = Integer.MIN_VALUE;
        this.missionId = WinkContext.INSTANCE.d().getMissionId();
        this.assetData = new HashMap<>();
        this.editDataMap = new LinkedHashMap();
        this.currentPlayerTimeLiveData = new MutableLiveData<>();
        this.currentPlayerStateLiveData = new MutableLiveData<>();
        this.mFrom = -1;
        this.mDraftFrom = -1;
        this.com.tencent.mobileqq.transfile.predownload.schedule.PreDownloadConstants.RPORT_KEY_BUSINESS_NAME java.lang.String = "QCIRCLE";
        this.magicStudioSessionID = "";
        this.isFromQzoneAlumShowRecommendTemplate = true;
        this.editMode = EditMode.Video;
        this.backgroundTemplatePath = "";
        this.draftMusicMid = "";
        this.isEnableMusic = true;
        this.isEnableSwitchEditMode = true;
    }

    private final void A3(Intent intent) {
        String stringExtra = intent.getStringExtra("key_template_asset");
        ms.a.a("jumptest", "handleEventParams " + stringExtra);
        if (!TextUtils.isEmpty(stringExtra)) {
            HashMap<String, String> hashMap = this.assetData;
            Intrinsics.checkNotNull(stringExtra);
            hashMap.put(LightConstants.EventKey.EVENT_SCRIPT_PARAMS, stringExtra);
        }
    }

    /* JADX WARN: Removed duplicated region for block: B:32:0x00a7  */
    /* JADX WARN: Removed duplicated region for block: B:37:0x00e1  */
    /* JADX WARN: Removed duplicated region for block: B:40:0x00b9 A[SYNTHETIC] */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    private final boolean B4(List<? extends LocalMediaInfo> inputMedias, WinkEditDataWrapper wrapper) {
        ArrayList<LocalMediaInfo> arrayList;
        Integer num;
        Integer num2;
        boolean z16;
        Integer num3;
        Integer num4;
        int i3;
        String str;
        String str2;
        Object orNull;
        Object orNull2;
        if (wrapper != null) {
            arrayList = wrapper.getOriginMediaInfos();
        } else {
            arrayList = null;
        }
        if (inputMedias != null) {
            num = Integer.valueOf(inputMedias.size());
        } else {
            num = null;
        }
        if (arrayList != null) {
            num2 = Integer.valueOf(arrayList.size());
        } else {
            num2 = null;
        }
        w53.b.f("WinkEditorViewModel", "[loadMediaDataFromDraft] inputMedia.size=" + num + ", wrapperMedias.size=" + num2);
        if (inputMedias == null || inputMedias.isEmpty()) {
            if (arrayList != null && (!arrayList.isEmpty())) {
                z16 = true;
            } else {
                z16 = false;
            }
            if (z16) {
                return true;
            }
        }
        if ((inputMedias == null || inputMedias.isEmpty()) && (arrayList == null || arrayList.isEmpty())) {
            return false;
        }
        if (inputMedias != null) {
            num3 = Integer.valueOf(inputMedias.size());
        } else {
            num3 = null;
        }
        if (arrayList != null) {
            num4 = Integer.valueOf(arrayList.size());
        } else {
            num4 = null;
        }
        if (!Intrinsics.areEqual(num3, num4)) {
            return false;
        }
        if (inputMedias != null) {
            i3 = inputMedias.size();
        } else {
            i3 = 0;
        }
        if (i3 >= 0) {
            int i16 = 0;
            while (true) {
                if (inputMedias != null) {
                    orNull2 = CollectionsKt___CollectionsKt.getOrNull(inputMedias, i16);
                    LocalMediaInfo localMediaInfo = (LocalMediaInfo) orNull2;
                    if (localMediaInfo != null) {
                        str = localMediaInfo.path;
                        if (arrayList != null) {
                            orNull = CollectionsKt___CollectionsKt.getOrNull(arrayList, i16);
                            LocalMediaInfo localMediaInfo2 = (LocalMediaInfo) orNull;
                            if (localMediaInfo2 != null) {
                                str2 = localMediaInfo2.path;
                                if (!Intrinsics.areEqual(str, str2)) {
                                    w53.b.f("WinkEditorViewModel", "[loadMediaDataFromDraft] index=" + i16 + ", inputPath=" + str + ", wrapperPath=" + str2);
                                    return false;
                                }
                                if (i16 == i3) {
                                    break;
                                }
                                i16++;
                            }
                        }
                        str2 = null;
                        if (!Intrinsics.areEqual(str, str2)) {
                        }
                    }
                }
                str = null;
                if (arrayList != null) {
                }
                str2 = null;
                if (!Intrinsics.areEqual(str, str2)) {
                }
            }
        }
        return true;
    }

    private final boolean C3() {
        HashMap<String, String> m3 = m3();
        if (m3 != null) {
            return Intrinsics.areEqual("1", m3.get(QCircleScheme.AttrQQPublish.HIDE_EDIT_FROM_PHOTO));
        }
        return false;
    }

    public static /* synthetic */ void C5(WinkEditorViewModel winkEditorViewModel, dr drVar, HashMap hashMap, long j3, boolean z16, boolean z17, int i3, Object obj) {
        if ((i3 & 16) != 0) {
            z17 = true;
        }
        winkEditorViewModel.B5(drVar, hashMap, j3, z16, z17);
    }

    private final boolean D3() {
        HashMap<String, String> m3 = m3();
        if (m3 != null) {
            return Intrinsics.areEqual("1", m3.get(QCircleScheme.AttrQQPublish.HIDE_EDIT_FROM_VIDEO));
        }
        return false;
    }

    private final void H3() {
        boolean z16;
        EditMode editMode;
        com.tencent.mobileqq.wink.editor.util.i iVar = com.tencent.mobileqq.wink.editor.util.i.f322640a;
        this.com.tencent.mobileqq.transfile.predownload.schedule.PreDownloadConstants.RPORT_KEY_BUSINESS_NAME java.lang.String = iVar.c(this.activityIntent);
        this.isEnableSwitchEditMode = iVar.i(this.activityIntent);
        this.isEnableMusic = iVar.h(this.activityIntent);
        boolean j3 = iVar.j(this.activityIntent);
        boolean d65 = uq3.c.d6();
        boolean isFormQCirclePicker = getIsFormQCirclePicker();
        if (!this.isFromTemplateLib && !this.isAutoTemplate) {
            z16 = true;
        } else {
            z16 = false;
        }
        if (this.isEnableSwitchEditMode) {
            w53.b.a(getTAG(), "JumpImageEditMode: " + uq3.c.d6() + ", isFormFeedPublish:" + this.isFormFeedPublish + ", isFromQCirclePicker:" + getIsFormQCirclePicker() + ", !isFromTemplateLib: " + (!this.isFromTemplateLib) + ", !isAutoTemplate: " + (true ^ this.isAutoTemplate) + ", isForceImageMode: " + j3 + " ");
            if (((d65 && this.isFormFeedPublish && isFormQCirclePicker && z16) || j3) && this.isAllImages && !this.isFromTemplateLib) {
                editMode = EditMode.Image;
            } else {
                editMode = EditMode.Video;
            }
        } else if (iVar.d(this.activityIntent) == 0) {
            editMode = EditMode.Video;
        } else {
            editMode = EditMode.Image;
        }
        this.editMode = editMode;
    }

    public static /* synthetic */ List I2(WinkEditorViewModel winkEditorViewModel, EditMode editMode, boolean z16, int i3, Object obj) {
        if ((i3 & 2) != 0) {
            z16 = false;
        }
        return winkEditorViewModel.H2(editMode, z16);
    }

    /* JADX WARN: Removed duplicated region for block: B:18:0x005b  */
    /* JADX WARN: Removed duplicated region for block: B:21:0x0064  */
    /* JADX WARN: Removed duplicated region for block: B:38:0x0042  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    private final void I3() {
        boolean z16;
        boolean z17;
        boolean z18;
        boolean z19;
        boolean z26;
        ArrayList<LocalMediaInfo> arrayList = this.inputMedia;
        if (arrayList != null) {
            boolean z27 = false;
            if (!this.isFromTemplateLib) {
                if (!arrayList.isEmpty()) {
                    Iterator<T> it = arrayList.iterator();
                    while (it.hasNext()) {
                        if (!e93.i.G((LocalMediaInfo) it.next())) {
                            z26 = false;
                            break;
                        }
                    }
                }
                z26 = true;
                if (z26) {
                    z16 = true;
                    this.isAllImages = z16;
                    if (!this.isFromTemplateLib && arrayList.size() == 1) {
                        if (!arrayList.isEmpty()) {
                            Iterator<T> it5 = arrayList.iterator();
                            while (it5.hasNext()) {
                                if (!e93.i.I((LocalMediaInfo) it5.next())) {
                                    z19 = false;
                                    break;
                                }
                            }
                        }
                        z19 = true;
                        if (z19) {
                            z17 = true;
                            this.isSingleVideo = z17;
                            if (!this.isFromTemplateLib) {
                                if (!arrayList.isEmpty()) {
                                    Iterator<T> it6 = arrayList.iterator();
                                    while (it6.hasNext()) {
                                        if (!e93.i.I((LocalMediaInfo) it6.next())) {
                                            z18 = false;
                                            break;
                                        }
                                    }
                                }
                                z18 = true;
                                if (z18) {
                                    z27 = true;
                                }
                            }
                            this.isAllVideos = z27;
                            QLog.d("WinkEditorViewModel", 1, "initIsAllImage, isSingleVideo:" + this.isSingleVideo + ", isFromTemplateLib:" + this.isFromTemplateLib + ", isAllImages:" + this.isAllImages + ", isAllVideos:" + z27);
                        }
                    }
                    z17 = false;
                    this.isSingleVideo = z17;
                    if (!this.isFromTemplateLib) {
                    }
                    this.isAllVideos = z27;
                    QLog.d("WinkEditorViewModel", 1, "initIsAllImage, isSingleVideo:" + this.isSingleVideo + ", isFromTemplateLib:" + this.isFromTemplateLib + ", isAllImages:" + this.isAllImages + ", isAllVideos:" + z27);
                }
            }
            z16 = false;
            this.isAllImages = z16;
            if (!this.isFromTemplateLib) {
                if (!arrayList.isEmpty()) {
                }
                z19 = true;
                if (z19) {
                }
            }
            z17 = false;
            this.isSingleVideo = z17;
            if (!this.isFromTemplateLib) {
            }
            this.isAllVideos = z27;
            QLog.d("WinkEditorViewModel", 1, "initIsAllImage, isSingleVideo:" + this.isSingleVideo + ", isFromTemplateLib:" + this.isFromTemplateLib + ", isAllImages:" + this.isAllImages + ", isAllVideos:" + z27);
        }
    }

    public static final void J3(WinkEditorViewModel this$0, List list) {
        Intrinsics.checkNotNullParameter(this$0, "this$0");
        this$0.menuRedDotLiveData.postValue(MenuType.VIDEO_TEMPLATE);
    }

    private final void K4(ArrayList<MenuItem> list) {
        boolean z16 = false;
        boolean z17 = false;
        for (MenuItem menuItem : list) {
            if (menuItem == MenuItem.ENHANCE) {
                z17 = true;
            }
            if (menuItem == MenuItem.EFFECT) {
                z16 = true;
            }
        }
        if (z16 && z17) {
            ArrayList arrayList = new ArrayList();
            for (MenuItem menuItem2 : list) {
                int i3 = b.f318645c[menuItem2.ordinal()];
                if (i3 != 1) {
                    if (i3 != 2) {
                        arrayList.add(menuItem2);
                    } else {
                        arrayList.add(MenuItem.ENHANCE);
                    }
                } else {
                    arrayList.add(MenuItem.EFFECT);
                }
            }
            list.clear();
            list.addAll(arrayList);
        }
    }

    private final boolean L4(Intent intent) {
        try {
            return z4(intent);
        } catch (Exception e16) {
            w53.b.c("WinkEditorViewModel", "loadMediaDataFromDraft exception:" + e16.getMessage());
            return false;
        }
    }

    private final void O1(ArrayList<MenuItem> menuItems) {
        menuItems.add(MenuItem.FILTER);
        menuItems.add(MenuItem.TEXT);
        menuItems.add(MenuItem.STICKER);
    }

    private final void P1(ArrayList<MenuItem> menuItems) {
        menuItems.add(MenuItem.BACKGROUND);
        menuItems.add(MenuItem.FILTER);
        menuItems.add(MenuItem.TEXT);
        menuItems.add(MenuItem.STICKER);
        menuItems.add(MenuItem.TTS);
    }

    private final boolean P3() {
        String str = this.com.tencent.mobileqq.transfile.predownload.schedule.PreDownloadConstants.RPORT_KEY_BUSINESS_NAME java.lang.String;
        if (Intrinsics.areEqual(str, "QZONE")) {
            return true;
        }
        return Intrinsics.areEqual(str, "qqstranger");
    }

    private final void Q1(ArrayList<MenuItem> menuItems) {
        if (a2()) {
            menuItems.add(MenuItem.VIDEO_FIRST_TEMPLATE);
        }
        menuItems.add(MenuItem.TEMPLATE_CLIP);
        menuItems.add(MenuItem.FILTER);
        if (a2()) {
            menuItems.add(MenuItem.TEMPLATE_TEXT);
            menuItems.add(MenuItem.ADD_TEXT);
        } else if (d2()) {
            menuItems.add(MenuItem.TEMPLATE_TEXT);
            menuItems.add(MenuItem.ADD_TEXT);
        } else {
            menuItems.add(MenuItem.TEXT);
        }
        menuItems.add(MenuItem.STICKER);
    }

    private final boolean S3() {
        if (Intrinsics.areEqual(this.com.tencent.mobileqq.transfile.predownload.schedule.PreDownloadConstants.RPORT_KEY_BUSINESS_NAME java.lang.String, "QZONE") && !this.isEnableSwitchEditMode && this.editMode == EditMode.Image) {
            return true;
        }
        return false;
    }

    public static final void X1(WinkEditorViewModel this$0) {
        Intrinsics.checkNotNullParameter(this$0, "this$0");
        try {
            WinkDraftUtil.Companion companion = WinkDraftUtil.INSTANCE;
            String account = ((IAccountRuntime) QRoute.api(IAccountRuntime.class)).getAccount();
            Intrinsics.checkNotNullExpressionValue(account, "api(IAccountRuntime::class.java).account");
            companion.f(Long.parseLong(account), this$0.missionId);
        } catch (Exception e16) {
            ms.a.c("WinkEditorViewModel", "deleteByMissionIds exception :" + e16.getMessage());
        }
    }

    private final MenuItem b3(String name) {
        switch (name.hashCode()) {
            case -2090050568:
                if (!name.equals(QQWinkConstants.TAB_SUBTITLE)) {
                    return null;
                }
                return MenuItem.SUBTITLE;
            case -1890252483:
                if (!name.equals("sticker")) {
                    return null;
                }
                return MenuItem.STICKER;
            case -1603157330:
                if (!name.equals(QQWinkConstants.TAB_ENHANCE)) {
                    return null;
                }
                return MenuItem.ENHANCE;
            case -1332194002:
                if (!name.equals("background")) {
                    return null;
                }
                return MenuItem.BACKGROUND;
            case -1321546630:
                if (!name.equals("template")) {
                    return null;
                }
                return MenuItem.VIDEO_TEMPLATE;
            case -1306084975:
                if (!name.equals(QQWinkConstants.TAB_EFFECT)) {
                    return null;
                }
                return MenuItem.EFFECT;
            case -1274492040:
                if (!name.equals("filter")) {
                    return null;
                }
                return MenuItem.FILTER;
            case -1175158880:
                if (!name.equals(QQWinkConstants.TAB_TO_IMAGE)) {
                    return null;
                }
                return MenuItem.TO_IMAGE;
            case -1163269440:
                if (!name.equals(QQWinkConstants.TAB_TO_VIDEO)) {
                    return null;
                }
                return MenuItem.TO_VIDEO;
            case -975980345:
                if (!name.equals(QQWinkConstants.TAB_TEMPLATE_TEXT) || !d2()) {
                    return null;
                }
                return MenuItem.TEMPLATE_TEXT;
            case 115187:
                if (!name.equals(QQWinkConstants.TAB_TTS)) {
                    return null;
                }
                return MenuItem.TTS;
            case 3062416:
                if (!name.equals(QQWinkConstants.TAB_CROP)) {
                    return null;
                }
                return MenuItem.CROP;
            case 519983946:
                if (!name.equals(QQWinkConstants.TAB_FIRST_TEMPLATE)) {
                    return null;
                }
                return MenuItem.VIDEO_FIRST_TEMPLATE;
            case 918617282:
                if (!name.equals(QQWinkConstants.TAB_CLIPPING)) {
                    return null;
                }
                if (this.isFromTemplateColl) {
                    return MenuItem.TEMPLATE_CLIP;
                }
                return MenuItem.CLIPPING;
            case 1564778320:
                if (!name.equals(QQWinkConstants.TAB_TEXT_STICKER)) {
                    return null;
                }
                if (d2()) {
                    return MenuItem.ADD_TEXT;
                }
                return MenuItem.TEXT;
            default:
                return null;
        }
    }

    private final ArrayList<MenuItem> c3() {
        ArrayList<MenuItem> arrayList = new ArrayList<>();
        List<String> c16 = com.tencent.mobileqq.wink.schema.d.f326305a.c(this.bottomTabString);
        if (c16 != null) {
            Iterator<T> it = c16.iterator();
            while (it.hasNext()) {
                MenuItem b36 = b3((String) it.next());
                if (b36 != null) {
                    arrayList.add(b36);
                }
            }
        }
        return arrayList;
    }

    private final ArrayList<WinkEditData> f2(boolean canChange) {
        boolean z16;
        WinkEditDataListResult h16;
        ArrayList<LocalMediaInfo> arrayList = this.inputMedia;
        if (arrayList != null && !arrayList.isEmpty()) {
            z16 = false;
        } else {
            z16 = true;
        }
        if (z16) {
            return new ArrayList<>();
        }
        int i3 = b.f318644b[this.editMode.ordinal()];
        if (i3 != 1) {
            if (i3 == 2) {
                if (canChange && R1()) {
                    w53.b.a("WinkEditorViewModel", "preload player change clipSource");
                    h16 = com.tencent.mobileqq.wink.picker.core.part.an.INSTANCE.g();
                } else {
                    ArrayList<LocalMediaInfo> arrayList2 = this.inputMedia;
                    Intrinsics.checkNotNull(arrayList2);
                    h16 = com.tencent.mobileqq.wink.editor.draft.c.h(arrayList2, this.isAllImages);
                }
                this.enableImageTransition = h16.getNeedTransition();
                return h16.c();
            }
            throw new NoWhenBranchMatchedException();
        }
        ArrayList<LocalMediaInfo> arrayList3 = this.inputMedia;
        Intrinsics.checkNotNull(arrayList3);
        return com.tencent.mobileqq.wink.editor.draft.c.c(arrayList3).c();
    }

    private final ArrayList<MenuItem> g2() {
        ArrayList<MenuItem> c36 = c3();
        if (!c36.isEmpty()) {
            return c36;
        }
        ArrayList<MenuItem> arrayList = new ArrayList<>();
        if (this.isOpeningEndingEditMode) {
            return arrayList;
        }
        if (this.isFromMagicStudio) {
            O1(arrayList);
        } else if (this.isFromTemplateColl) {
            Q1(arrayList);
        } else if (this.isFromQzoneText) {
            P1(arrayList);
        } else {
            if (this.isAllImages && !this.isAutoTemplate) {
                if (this.editMode == EditMode.Video) {
                    if (this.isEnableSwitchEditMode && !C3() && !this.isQCircleAutoTemplate) {
                        arrayList.add(MenuItem.TO_IMAGE);
                    }
                    arrayList.add(MenuItem.VIDEO_TEMPLATE);
                    if (com.tencent.mobileqq.wink.editor.util.h.f322638a.d()) {
                        arrayList.add(MenuItem.OPENING_ENDING);
                    }
                    arrayList.add(MenuItem.CLIPPING);
                    arrayList.add(MenuItem.FILTER);
                } else {
                    if (this.isEnableSwitchEditMode && !D3()) {
                        arrayList.add(MenuItem.TO_VIDEO);
                    }
                    if (t4()) {
                        arrayList.add(MenuItem.AI_TEMPLATE);
                    }
                    if (u4()) {
                        arrayList.add(MenuItem.VIDEO_TEMPLATE);
                    }
                    arrayList.add(MenuItem.FILTER);
                }
            } else {
                arrayList.add(MenuItem.VIDEO_TEMPLATE);
                if (com.tencent.mobileqq.wink.editor.util.h.f322638a.d()) {
                    arrayList.add(MenuItem.OPENING_ENDING);
                }
                arrayList.add(MenuItem.CLIPPING);
                arrayList.add(MenuItem.FILTER);
            }
            if (this.isQCircleAutoTemplate) {
                MenuItem menuItem = MenuItem.VIDEO_TEMPLATE;
                if (arrayList.contains(menuItem)) {
                    arrayList.remove(menuItem);
                }
                MenuItem menuItem2 = MenuItem.OPENING_ENDING;
                if (arrayList.contains(menuItem2)) {
                    arrayList.remove(menuItem2);
                }
            }
            arrayList.add(MenuItem.TEXT);
            EditMode editMode = this.editMode;
            EditMode editMode2 = EditMode.Video;
            if (editMode == editMode2) {
                arrayList.add(MenuItem.STICKER);
                arrayList.add(MenuItem.EFFECT);
            } else {
                arrayList.add(MenuItem.STICKER_OLD);
            }
            if (S3()) {
                arrayList.add(MenuItem.AI_ELIMINATION);
            }
            if (com.tencent.mobileqq.wink.editor.hdr.a.c()) {
                arrayList.add(MenuItem.ENHANCE);
            }
            arrayList.add(MenuItem.CROP);
            if (this.editMode == editMode2) {
                arrayList.add(MenuItem.SUBTITLE);
            } else {
                arrayList.add(MenuItem.MOSAIC);
            }
            K4(arrayList);
        }
        return arrayList;
    }

    private final void initVideoTemplatesObserver() {
        this.mVideoTemplatesObserver = new Observer() { // from class: com.tencent.mobileqq.wink.editor.cz
            @Override // androidx.lifecycle.Observer
            public final void onChanged(Object obj) {
                WinkEditorViewModel.J3(WinkEditorViewModel.this, (List) obj);
            }
        };
        MutableLiveData<List<MetaCategory>> h26 = WinkEditorResourceManager.a1().h2();
        Observer<List<MetaCategory>> observer = this.mVideoTemplatesObserver;
        Intrinsics.checkNotNull(observer);
        h26.observeForever(observer);
    }

    private final HashMap<String, String> m3() {
        return com.tencent.mobileqq.wink.schema.d.f326305a.e(this.activityIntent);
    }

    private final WinkStickerModel n2(dr drVar) {
        List<WinkEditData> n3;
        MetaMaterial material;
        if (drVar != null && (n3 = drVar.n()) != null) {
            Iterator<T> it = n3.iterator();
            while (it.hasNext()) {
                Map<String, WinkStickerModel> stickerModelMap = ((WinkEditData) it.next()).getStickerModelMap();
                if (stickerModelMap != null) {
                    for (Map.Entry<String, WinkStickerModel> entry : stickerModelMap.entrySet()) {
                        entry.getKey();
                        WinkStickerModel value = entry.getValue();
                        if ((drVar instanceof WinkVideoTavCut) && (material = value.getMaterial()) != null && com.tencent.mobileqq.wink.editor.sticker.m.T(material)) {
                            return value;
                        }
                    }
                }
            }
            return null;
        }
        return null;
    }

    private final String t2(Intent intent) {
        String stringExtra;
        if (intent != null && (stringExtra = intent.getStringExtra(QQWinkConstants.CAPTURE_MATERIAL_ID)) != null) {
            StringCompanionObject stringCompanionObject = StringCompanionObject.INSTANCE;
            String format = String.format("getCaptureMaterialId---materialId=%s", Arrays.copyOf(new Object[]{stringExtra}, 1));
            Intrinsics.checkNotNullExpressionValue(format, "format(format, *args)");
            QLog.i("CircleTakeSame", 1, format);
            return stringExtra;
        }
        return "";
    }

    private final String v2(Intent intent) {
        String stringExtra;
        if (intent == null || (stringExtra = intent.getStringExtra(QQWinkConstants.CAPTURE_MATERIAL_NAME)) == null) {
            return "";
        }
        return stringExtra;
    }

    public static /* synthetic */ void v5(WinkEditorViewModel winkEditorViewModel, MenuType menuType, Bundle bundle, int i3, Object obj) {
        if ((i3 & 2) != 0) {
            bundle = null;
        }
        winkEditorViewModel.u5(menuType, bundle);
    }

    private final void x5() {
        if (this.isOpeningEndingEditMode) {
            return;
        }
        ArrayList<MenuItem> g26 = g2();
        this.currentMenuItems = g26;
        this._bottomDashboardMenuLiveData.postValue(g26);
        if (this.isAutoTemplate) {
            Bundle bundle = new Bundle();
            bundle.putBoolean(QQWinkConstants.IS_AUTO_TEMPLATE, true);
            u5(MenuType.VIDEO_TEMPLATE, bundle);
            return;
        }
        l5();
    }

    private final void y4(Context context) {
        Bundle bundle;
        Bundle extras;
        Intent intent = this.activityIntent;
        if (intent != null && (extras = intent.getExtras()) != null) {
            extras.putBoolean("wink_share_result", false);
        }
        if (context != null) {
            WinkExodus m3 = WinkContext.INSTANCE.d().m();
            Intent intent2 = this.activityIntent;
            if (intent2 != null) {
                bundle = intent2.getExtras();
            } else {
                bundle = null;
            }
            m3.j(context, bundle);
        }
    }

    private final boolean z4(Intent intent) {
        boolean z16;
        int i3;
        boolean z17;
        EditMode editMode;
        boolean z18;
        Collection<WinkStickerModel> values;
        Collection<MetaMaterial> values2;
        Object elementAtOrNull;
        com.tencent.mobileqq.wink.editor.performance.c.f321449a.b(WinkEditorPefScene.LOAD_DRAFT);
        boolean z19 = false;
        this.mFrom = intent.getIntExtra(QQWinkConstants.EDITOR_ENTRANCE, 0);
        this.isPubFailed = intent.getStringExtra("xsj_is_publish_defeated_works");
        this.isQCircleAutoTemplate = intent.getBooleanExtra(QQWinkConstants.IS_QCIRCLE_AUTO_TEMPLATE, false);
        if (!intent.getBooleanExtra(QQWinkConstants.EDITOR_NEED_DRAFT, true)) {
            return false;
        }
        w53.b.c("WinkEditorViewModel", "loadMediaDataFromDraft mFrom:" + this.mFrom);
        String stringExtra = intent.getStringExtra(QQWinkConstants.EDITOR_TEXT_CONTENT);
        this.textQzoneText = stringExtra;
        if (stringExtra != null && stringExtra.length() != 0) {
            z16 = false;
        } else {
            z16 = true;
        }
        boolean z26 = !z16;
        this.isFromQzoneText = z26;
        int i16 = -1;
        if (z26) {
            this.backgroundMaterialList = intent.getStringArrayListExtra(QQWinkConstants.EDITOR_MATERIAL_PATH_ARRAY_LIST);
            int intExtra = intent.getIntExtra(QQWinkConstants.EDITOR_TEXT_TEMPLATE_PATH_INDEX, -1);
            if (intExtra == -1) {
                this.backgroundMaterialIndex = AECameraPrefsUtil.c().d(QQWinkConstants.EDITOR_TEXT_LAST_BACKGROUND_INDEX, 1, 0);
            } else {
                this.backgroundMaterialIndex = intExtra;
            }
        }
        w53.b.f("WinkEditorViewModel", "loadMediaDataFromDraft missionId:" + this.missionId);
        if (!TextUtils.isEmpty(this.missionId)) {
            WinkEditDataWrapper c16 = com.tencent.mobileqq.wink.editor.draft.a.c(this.missionId);
            if (!B4(intent.getParcelableArrayListExtra(QQWinkConstants.INPUT_MEDIA), c16)) {
                w53.b.f("WinkEditorViewModel", "[loadMediaDataFromDraft] reset wrapper");
                c16 = null;
            }
            if (c16 != null) {
                w53.b.f("WinkEditorViewModel", "loadMediaDataFromDraft winkEditDataWrapper");
                Integer from = c16.getFrom();
                if (from != null) {
                    i3 = from.intValue();
                } else {
                    i3 = -1;
                }
                this.mDraftFrom = i3;
                this.originEditData = com.tencent.mobileqq.wink.editor.draft.a.c(this.missionId);
                Integer from2 = c16.getFrom();
                if (from2 != null && from2.intValue() == 5) {
                    this.isFromTemplateLib = true;
                    WinkDatongCurrentParams.put(WinkDaTongReportConstant.ElementParamKey.XSJ_IS_FROM_TEMPLATE_PAGE, "1");
                }
                this.isFromTemplateLib = c16.isFromTemplateLib();
                this.isFromTemplateColl = c16.isFromTemplateColl();
                if (this.isFromTemplateLib && !c16.isFromTemplateColl()) {
                    z17 = true;
                } else {
                    z17 = false;
                }
                this.isQCircleAutoTemplate = z17;
                this.isFromFirstTemplate = c16.isFirstTemplate();
                this.isFromQzoneText = c16.isFromQzoneText();
                this.isAutoTemplate = c16.isAutoTemplate();
                this.isFromMemoryAlbum = c16.isFromMemoryAlbum();
                this.backgroundMaterialList = c16.getBackgroundMaterialList();
                this.backgroundMaterialIndex = c16.getBackgroundMaterialIndex();
                this.textQzoneText = c16.getTextQzoneText();
                this.templatePath = c16.getTemplateFilePath();
                this.inputMedia = c16.getOriginMediaInfos();
                this.isFromCapture = c16.isFromCapture();
                this.captureMaterialId = c16.getCaptureMaterialId();
                this.captureMaterialName = c16.getCaptureMaterialName();
                String selectMusicMid = c16.getSelectMusicMid();
                if (selectMusicMid == null) {
                    selectMusicMid = "";
                }
                this.draftMusicMid = selectMusicMid;
                this.useHD = c16.getUseHD();
                Integer editMode2 = c16.getEditMode();
                if (editMode2 != null && editMode2.intValue() == 0) {
                    editMode = EditMode.Video;
                } else {
                    editMode = EditMode.Image;
                }
                this.editMode = editMode;
                this.isEnableSwitchEditMode = c16.isEnableSwitchEditMode();
                w53.b.f("WinkEditorViewModel", "loadMediaDataFromDraft origin = " + this.com.tencent.mobileqq.transfile.predownload.schedule.PreDownloadConstants.RPORT_KEY_BUSINESS_NAME java.lang.String + ", draft = " + c16.getBusinessName());
                String str = this.com.tencent.mobileqq.transfile.predownload.schedule.PreDownloadConstants.RPORT_KEY_BUSINESS_NAME java.lang.String;
                if (str != null && str.length() != 0) {
                    z18 = false;
                } else {
                    z18 = true;
                }
                if (z18) {
                    this.com.tencent.mobileqq.transfile.predownload.schedule.PreDownloadConstants.RPORT_KEY_BUSINESS_NAME java.lang.String = c16.getBusinessName();
                }
                this.isEnableMusic = c16.isEnableMusic();
                this.enableImageTransition = c16.getEnableImageTransition();
                this.editDataMap.put(this.editMode, c16.getEditDatas());
                int i17 = -1;
                for (WinkEditData winkEditData : c16.getEditDatas()) {
                    com.tencent.videocut.render.utils.a.f384204a.l(winkEditData);
                    if (c16.isHDRExporting()) {
                        winkEditData.setOpenHDR(false);
                    }
                    WinkHDRCacheManager.INSTANCE.a().e(winkEditData);
                    if (winkEditData.getAssetData() != null) {
                        HashMap<String, String> hashMap = this.assetData;
                        HashMap<String, String> assetData = winkEditData.getAssetData();
                        Intrinsics.checkNotNull(assetData);
                        hashMap.putAll(assetData);
                        ms.a.f("WinkEditorViewModel", "loadMediaDataFromDraft " + winkEditData.getAssetData());
                    }
                    Map<String, MetaMaterial> templateMaterialMap = winkEditData.getTemplateMaterialMap();
                    if (templateMaterialMap != null && (values2 = templateMaterialMap.values()) != null) {
                        elementAtOrNull = CollectionsKt___CollectionsKt.elementAtOrNull(values2, 0);
                        MetaMaterial metaMaterial = (MetaMaterial) elementAtOrNull;
                        if (metaMaterial != null) {
                            WinkEditorResourceManager.a1().i0(metaMaterial);
                        }
                    }
                    Map<String, WinkStickerModel> stickerModelMap = winkEditData.getStickerModelMap();
                    if (stickerModelMap != null && (values = stickerModelMap.values()) != null) {
                        for (WinkStickerModel winkStickerModel : values) {
                            if (winkStickerModel.type == StickerModel.Type.MASK) {
                                i17 = Math.max(winkStickerModel.layerIndex, i17);
                            } else {
                                i16 = Math.max(winkStickerModel.layerIndex, i16);
                            }
                        }
                    }
                }
                if (i16 >= 0) {
                    StickerLayerIndexManager.f321548a.e(i16);
                }
                if (i17 >= 0) {
                    StickerLayerIndexManager.f321548a.f(i17);
                }
                Map<String, WinkEditUIData> uiDataMap = c16.getUiDataMap();
                if (uiDataMap != null) {
                    this._uiDraftChanged.postValue(uiDataMap);
                }
                ms.a.f("WinkEditorViewModel", "loadMediaDataFromDraft isHDRExporting = " + c16.isHDRExporting());
                z19 = true;
            } else {
                ArrayList<String> stringArrayListExtra = intent.getStringArrayListExtra(QQWinkConstants.PUBLISH_DRAFT_ORIGINAL_PATHS);
                w53.b.g("WinkEditorViewModel", "loadMediaDataFromDraft, originPathList: " + stringArrayListExtra);
                if (stringArrayListExtra != null) {
                    ArrayList<LocalMediaInfo> b16 = ba3.a.b(stringArrayListExtra);
                    this.inputMedia = b16;
                    if (b16 == null || b16.isEmpty()) {
                        z19 = true;
                    }
                    z19 = !z19;
                }
            }
            I3();
            if (a2()) {
                intent.putParcelableArrayListExtra(QQWinkConstants.INPUT_MEDIA, this.inputMedia);
                this.templateMediaHolderInfo = c16.getHolderInfo();
            }
        }
        if (this.mFrom == 8) {
            this.bottomTabString = intent.getStringExtra(QQWinkConstants.EDITOR_EDITOR_TABS);
        }
        com.tencent.mobileqq.wink.editor.performance.c.f321449a.c(WinkEditorPefScene.LOAD_DRAFT);
        return z19;
    }

    @NotNull
    public final MutableLiveData<IPlayer.PlayerStatus> A2() {
        return this.currentPlayerStateLiveData;
    }

    public final boolean A4() {
        if (!this.isFromMagicStudio) {
            w53.b.a("WinkVideoTavCut", " do not from magic need painting flush  ");
            return true;
        }
        com.tencent.mobileqq.wink.utils.ar.f326685a.c("SP_OPTIMIZATION_MAGIC_STUDIO_EDITOR", true);
        if (QzoneConfig.isMagicStudionEditorCheck(((IAccountRuntime) QRoute.api(IAccountRuntime.class)).getAccount())) {
            w53.b.f("WinkVideoTavCut", " wns from magic do not need painting flush");
            return false;
        }
        w53.b.f("WinkVideoTavCut", " from magic  not need painting flush");
        return true;
    }

    public final void A5(boolean r26) {
        this._updateEnhanceResLiveData.postValue(Boolean.valueOf(r26));
    }

    @NotNull
    public final MutableLiveData<Long> B2() {
        return this.currentPlayerTimeLiveData;
    }

    public final void B5(@NotNull dr curTavCut, @NotNull HashMap<String, HDRModel> inputMap, long r342, boolean useHDR, boolean needPlay) {
        Intrinsics.checkNotNullParameter(curTavCut, "curTavCut");
        Intrinsics.checkNotNullParameter(inputMap, "inputMap");
        w53.b.a("WinkEditorViewModel", "updateHDR inputMap :" + inputMap);
        curTavCut.k(inputMap, r342, useHDR, needPlay);
        EditMode editMode = this.editMode;
        if (editMode == EditMode.Image) {
            MutableLiveData<dr.WinkTavCutParams> mutableLiveData = this._tavCutParamsLiveData;
            List I2 = I2(this, editMode, false, 2, null);
            String str = this.templatePath;
            boolean z16 = this.isFromTemplateColl;
            mutableLiveData.postValue(new dr.WinkTavCutParams(false, editMode, I2, str, Boolean.valueOf(z16), this.playerWidth, this.playerHeight, null, null, false, 0, 0L, false, this.isFromQzoneText, this.textQzoneText, WinkTavCutScene.Editor, false, false, 0, 0, false, this.watermarkConfig, 2039680, null));
        }
    }

    /* renamed from: C2, reason: from getter */
    public final int getBackgroundMaterialIndex() {
        return this.backgroundMaterialIndex;
    }

    public final void C4(@Nullable Configuration newConfig) {
        this._onConfigurationChanged.postValue(newConfig);
    }

    @Nullable
    public final MetaMaterial D2() {
        w53.b.a("WinkEditorViewModel", "getCustomStickerMaterial " + O1 + " viewMode:" + this);
        return O1;
    }

    public final void D4(@Nullable Context context) {
        if (V3() || i4() || k4() || b4() || X3()) {
            ms.a.f("WinkEditorViewModel", "[onGoBack] from:" + this.mFrom);
            W1();
        }
        WinkEditDataWrapper winkEditDataWrapper = this.originEditData;
        if (winkEditDataWrapper == null) {
            com.tencent.mobileqq.wink.editor.draft.a.a(this.missionId);
        } else {
            com.tencent.mobileqq.wink.editor.draft.a.h(winkEditDataWrapper, this.missionId);
        }
        if (!this.isOpeningEndingEditMode) {
            ThumbnailProviderManager.f319211a.s();
        }
        y4(context);
    }

    public final void D5(@NotNull dr curTavCut) {
        TTSAudioInfo tTSAudioInfo;
        List<TextItem> list;
        boolean z16;
        Intrinsics.checkNotNullParameter(curTavCut, "curTavCut");
        Bundle bundle = new Bundle();
        WinkStickerModel n26 = n2(curTavCut);
        TTSAudioInfo tTSAudioInfo2 = null;
        if (n26 != null) {
            tTSAudioInfo = n26.getTtsAudioInfo();
        } else {
            tTSAudioInfo = null;
        }
        if (tTSAudioInfo == null) {
            ArrayList arrayList = new ArrayList();
            if (n26 != null) {
                list = n26.textItems;
            } else {
                list = null;
            }
            String str = "";
            if (list != null) {
                for (TextItem textItem : list) {
                    String str2 = textItem.text;
                    if (str2 != null && str2.length() != 0) {
                        z16 = false;
                    } else {
                        z16 = true;
                    }
                    if (!z16) {
                        str = textItem.text;
                    }
                }
            }
            if (str != null) {
                arrayList.add(str);
            }
            if (n26 != null) {
                Object[] array = arrayList.toArray(new String[0]);
                Intrinsics.checkNotNull(array, "null cannot be cast to non-null type kotlin.Array<T of kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray>");
                n26.setTtsAudioInfo(new TTSAudioInfo((String[]) array, 1));
            }
            if (n26 != null) {
                n26.setHasChooseTTS(true);
            }
        }
        if (n26 != null) {
            tTSAudioInfo2 = n26.getTtsAudioInfo();
        }
        bundle.putSerializable(QQWinkConstants.PICK_TEMPLATE_TTS_MODEL, tTSAudioInfo2);
        u5(MenuType.TTS, bundle);
    }

    @NotNull
    public final String E2() {
        String str;
        boolean z16;
        HashMap<String, String> m3 = m3();
        if (m3 != null) {
            str = m3.get(QCircleScheme.AttrQQPublish.EDITOR_DIRECT_PUBLISH_TYPE);
        } else {
            str = null;
        }
        if (str != null && str.length() != 0) {
            z16 = false;
        } else {
            z16 = true;
        }
        if (z16) {
            if (this.isDailySend) {
                return "3";
            }
            return "0";
        }
        return str;
    }

    public final boolean E3() {
        if (this.curMenuType == null) {
            return true;
        }
        return !N1.contains(r0);
    }

    public final void E4(@NotNull Runnable action) {
        Intrinsics.checkNotNullParameter(action, "action");
        this._openGuideEnhance.postValue(new t73.a<>(action));
    }

    public final void E5(@NotNull TTSAudioInfo ttsAudioInfo) {
        Intrinsics.checkNotNullParameter(ttsAudioInfo, "ttsAudioInfo");
        this.ttsAudioInfo = ttsAudioInfo;
    }

    @NotNull
    public final LiveData<MenuType> F2() {
        return this.dismissPartLiveData;
    }

    /* JADX WARN: Removed duplicated region for block: B:103:0x016d  */
    /* JADX WARN: Removed duplicated region for block: B:49:0x011a  */
    /* JADX WARN: Removed duplicated region for block: B:57:0x016a  */
    /* JADX WARN: Removed duplicated region for block: B:65:0x0182  */
    /* JADX WARN: Removed duplicated region for block: B:73:0x0198  */
    /* JADX WARN: Removed duplicated region for block: B:76:0x01a5  */
    /* JADX WARN: Removed duplicated region for block: B:81:0x01c7  */
    /* JADX WARN: Removed duplicated region for block: B:84:0x01cf  */
    /* JADX WARN: Removed duplicated region for block: B:87:0x01d8  */
    /* JADX WARN: Removed duplicated region for block: B:92:0x01e7  */
    /* JADX WARN: Removed duplicated region for block: B:98:0x01d1  */
    /* JADX WARN: Removed duplicated region for block: B:99:0x01ca  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public final void F3(@Nullable Intent intent, @Nullable Bundle r102) {
        WatermarkConfig watermarkConfig;
        boolean z16;
        boolean z17;
        boolean z18;
        boolean z19;
        boolean z26;
        Serializable serializable;
        HashMap hashMap;
        String str;
        boolean z27;
        boolean z28;
        Serializable serializableExtra;
        ArrayList arrayList;
        boolean z29;
        boolean z36;
        Serializable serializableExtra2;
        MediaPickerScene mediaPickerScene;
        boolean z37;
        String str2;
        boolean z38;
        boolean z39;
        MaterialType materialType;
        boolean z46;
        Map<String, Serializable> map;
        if (intent == null) {
            return;
        }
        this.activityIntent = intent;
        Bundle extras = intent.getExtras();
        if (extras != null) {
            watermarkConfig = (WatermarkConfig) extras.getParcelable(QQWinkConstants.WATERMARK_CONFIG);
        } else {
            watermarkConfig = null;
        }
        this.watermarkConfig = watermarkConfig;
        boolean L4 = L4(intent);
        boolean z47 = true;
        if (r102 != null && r102.containsKey("key_wink_is_load_from_draft")) {
            z16 = true;
        } else {
            z16 = false;
        }
        if (z16) {
            z17 = r102.getBoolean("key_wink_is_load_from_draft");
        } else {
            z17 = L4;
        }
        this.isLoadFromDraft = z17;
        w53.b.a("WinkEditorViewModel", "isLoadFromDraft: " + z17 + " , restoreFromDraftSucceed: " + L4);
        this.isFromQzoneAlbum = intent.getBooleanExtra(QQWinkConstants.EDITOR_TEMPLATE_RECOMMEND_MENU, false);
        this.isFromQzoneAlumShowRecommendTemplate = intent.getBooleanExtra(QQWinkConstants.EDITOR_RECOMMEND_TEMPLATE_SHOW, false);
        if (!this.isLoadFromDraft) {
            this.isFromCapture = intent.getBooleanExtra(QQWinkConstants.IS_FROM_CAPTURE, false);
            ArrayList<LocalMediaInfo> parcelableArrayListExtra = intent.getParcelableArrayListExtra(QQWinkConstants.INPUT_MEDIA);
            this.inputMedia = parcelableArrayListExtra;
            if (parcelableArrayListExtra != null && !parcelableArrayListExtra.isEmpty()) {
                z26 = false;
            } else {
                z26 = true;
            }
            if (z26) {
                ms.a.a("WinkEditorViewModel", "inputMedia is empty");
                return;
            }
            MetaMaterial metaMaterial = (MetaMaterial) intent.getSerializableExtra(QQWinkConstants.PICK_TEMPLATE_MEDIA_MODEL);
            this.templateMaterial = metaMaterial;
            if (metaMaterial != null && (map = metaMaterial.additionalObjectFields) != null) {
                serializable = map.get(QQWinkConstants.PICK_TEMPLATE_TTS_MODEL);
            } else {
                serializable = null;
            }
            this.ttsAudioInfo = (TTSAudioInfo) serializable;
            Serializable serializableExtra3 = intent.getSerializableExtra(QQWinkConstants.LOCAL_MEDIA_INFO_EXT_DATA);
            if (serializableExtra3 instanceof HashMap) {
                hashMap = (HashMap) serializableExtra3;
            } else {
                hashMap = null;
            }
            if (hashMap != null) {
                ArrayList<LocalMediaInfo> arrayList2 = this.inputMedia;
                Intrinsics.checkNotNull(arrayList2);
                for (LocalMediaInfo localMediaInfo : arrayList2) {
                    localMediaInfo.extData = (HashMap) hashMap.get(localMediaInfo.path);
                }
            }
            this.isAutoTemplate = intent.getBooleanExtra(QQWinkConstants.IS_AUTO_TEMPLATE, false);
            HashMap<String, String> m3 = m3();
            if (m3 != null) {
                str = m3.get(QCircleScheme.AttrQQPublish.EDITOR_TOOLBAR_ITEM);
            } else {
                str = null;
            }
            this.bottomTabString = str;
            if (str != null) {
                if (str.length() > 0) {
                    z46 = true;
                } else {
                    z46 = false;
                }
                if (!z46) {
                    z27 = true;
                    if (z27) {
                        this.bottomTabString = intent.getStringExtra(QQWinkConstants.EDITOR_EDITOR_TABS);
                    }
                    z28 = this.isAutoTemplate;
                    this.isReportAutoTemplate = z28;
                    if (z28 && intent.getBooleanExtra(QQWinkConstants.RECOMMEND_VIDEO_TEMPLATE_PRELOAD, false)) {
                        com.tencent.mobileqq.wink.edit.manager.h.d().p(false);
                    }
                    String stringExtra = intent.getStringExtra("local_template_path");
                    String str3 = "1";
                    this.isFromFirstTemplate = Intrinsics.areEqual(intent.getStringExtra(WinkSchemeConstant.SchemeKey.KEY_SCHEMA_FIRST_TEMPLATE), "1");
                    this.isFormFeedPublish = intent.getBooleanExtra("key_is_from_feed_publish", false);
                    this.isFormQCirclePicker = intent.getBooleanExtra(QQWinkConstants.PICKER_IS_FROM_QCIRCLE_PICKER, false);
                    serializableExtra = intent.getSerializableExtra("template_holder_slot");
                    if (!(serializableExtra instanceof ArrayList)) {
                        arrayList = (ArrayList) serializableExtra;
                    } else {
                        arrayList = null;
                    }
                    this.templateMediaHolderInfo = arrayList;
                    if (this.templateMaterial != null && TextUtils.isEmpty(stringExtra)) {
                        z29 = false;
                    } else {
                        z29 = true;
                    }
                    this.isFromTemplateLib = z29;
                    if (z29) {
                        MetaMaterial metaMaterial2 = this.templateMaterial;
                        if (metaMaterial2 != null) {
                            materialType = c.T(metaMaterial2);
                        } else {
                            materialType = null;
                        }
                        if (materialType != MaterialType.AUTO_TEMPLATE) {
                            z36 = true;
                            this.isFromTemplateColl = z36;
                            if (!z36) {
                                str3 = "0";
                            }
                            WinkDatongCurrentParams.put(WinkDaTongReportConstant.ElementParamKey.XSJ_IS_FROM_TEMPLATE_PAGE, str3);
                            if (this.isFromTemplateLib && this.mFrom != 3) {
                                this.mFrom = 5;
                            }
                            I3();
                            H3();
                            this.textQzoneText = intent.getStringExtra(QQWinkConstants.EDITOR_TEXT_CONTENT);
                            serializableExtra2 = intent.getSerializableExtra(QQWinkConstants.MEDIA_PICKER_SCENE);
                            if (serializableExtra2 instanceof MediaPickerScene) {
                                mediaPickerScene = (MediaPickerScene) serializableExtra2;
                            } else {
                                mediaPickerScene = null;
                            }
                            if (mediaPickerScene == MediaPickerScene.TEMPLATE_LIBRARY_MEMORY_ALBUM) {
                                z37 = true;
                            } else {
                                z37 = false;
                            }
                            this.isFromMemoryAlbum = z37;
                            str2 = this.textQzoneText;
                            if (str2 == null && str2.length() != 0) {
                                z38 = false;
                            } else {
                                z38 = true;
                            }
                            z39 = !z38;
                            this.isFromQzoneText = z39;
                            if (z39) {
                                this.backgroundMaterialList = intent.getStringArrayListExtra(QQWinkConstants.EDITOR_MATERIAL_PATH_ARRAY_LIST);
                                int intExtra = intent.getIntExtra(QQWinkConstants.EDITOR_TEXT_TEMPLATE_PATH_INDEX, -1);
                                if (intExtra == -1) {
                                    this.backgroundMaterialIndex = AECameraPrefsUtil.c().d(QQWinkConstants.EDITOR_TEXT_LAST_BACKGROUND_INDEX, 1, 0);
                                } else {
                                    this.backgroundMaterialIndex = intExtra;
                                }
                            }
                            this.captureMaterialId = t2(intent);
                            this.captureMaterialName = v2(intent);
                        }
                    }
                    z36 = false;
                    this.isFromTemplateColl = z36;
                    if (!z36) {
                    }
                    WinkDatongCurrentParams.put(WinkDaTongReportConstant.ElementParamKey.XSJ_IS_FROM_TEMPLATE_PAGE, str3);
                    if (this.isFromTemplateLib) {
                        this.mFrom = 5;
                    }
                    I3();
                    H3();
                    this.textQzoneText = intent.getStringExtra(QQWinkConstants.EDITOR_TEXT_CONTENT);
                    serializableExtra2 = intent.getSerializableExtra(QQWinkConstants.MEDIA_PICKER_SCENE);
                    if (serializableExtra2 instanceof MediaPickerScene) {
                    }
                    if (mediaPickerScene == MediaPickerScene.TEMPLATE_LIBRARY_MEMORY_ALBUM) {
                    }
                    this.isFromMemoryAlbum = z37;
                    str2 = this.textQzoneText;
                    if (str2 == null) {
                    }
                    z38 = true;
                    z39 = !z38;
                    this.isFromQzoneText = z39;
                    if (z39) {
                    }
                    this.captureMaterialId = t2(intent);
                    this.captureMaterialName = v2(intent);
                }
            }
            z27 = false;
            if (z27) {
            }
            z28 = this.isAutoTemplate;
            this.isReportAutoTemplate = z28;
            if (z28) {
                com.tencent.mobileqq.wink.edit.manager.h.d().p(false);
            }
            String stringExtra2 = intent.getStringExtra("local_template_path");
            String str32 = "1";
            this.isFromFirstTemplate = Intrinsics.areEqual(intent.getStringExtra(WinkSchemeConstant.SchemeKey.KEY_SCHEMA_FIRST_TEMPLATE), "1");
            this.isFormFeedPublish = intent.getBooleanExtra("key_is_from_feed_publish", false);
            this.isFormQCirclePicker = intent.getBooleanExtra(QQWinkConstants.PICKER_IS_FROM_QCIRCLE_PICKER, false);
            serializableExtra = intent.getSerializableExtra("template_holder_slot");
            if (!(serializableExtra instanceof ArrayList)) {
            }
            this.templateMediaHolderInfo = arrayList;
            if (this.templateMaterial != null) {
            }
            z29 = true;
            this.isFromTemplateLib = z29;
            if (z29) {
            }
            z36 = false;
            this.isFromTemplateColl = z36;
            if (!z36) {
            }
            WinkDatongCurrentParams.put(WinkDaTongReportConstant.ElementParamKey.XSJ_IS_FROM_TEMPLATE_PAGE, str32);
            if (this.isFromTemplateLib) {
            }
            I3();
            H3();
            this.textQzoneText = intent.getStringExtra(QQWinkConstants.EDITOR_TEXT_CONTENT);
            serializableExtra2 = intent.getSerializableExtra(QQWinkConstants.MEDIA_PICKER_SCENE);
            if (serializableExtra2 instanceof MediaPickerScene) {
            }
            if (mediaPickerScene == MediaPickerScene.TEMPLATE_LIBRARY_MEMORY_ALBUM) {
            }
            this.isFromMemoryAlbum = z37;
            str2 = this.textQzoneText;
            if (str2 == null) {
            }
            z38 = true;
            z39 = !z38;
            this.isFromQzoneText = z39;
            if (z39) {
            }
            this.captureMaterialId = t2(intent);
            this.captureMaterialName = v2(intent);
        }
        com.tencent.mobileqq.wink.editor.util.g.f322634a.a(this, this.com.tencent.mobileqq.transfile.predownload.schedule.PreDownloadConstants.RPORT_KEY_BUSINESS_NAME java.lang.String, this.isLoadFromDraft, intent);
        String stringExtra3 = intent.getStringExtra(QQWinkTempConstants.FROM_MAGIC_STUDIO);
        String str4 = "";
        if (stringExtra3 == null) {
            stringExtra3 = "";
        }
        if (stringExtra3.length() > 0) {
            z18 = true;
        } else {
            z18 = false;
        }
        this.isFromMagicStudio = z18;
        String stringExtra4 = intent.getStringExtra(QQWinkTempConstants.MAGIC_STUDIO_COVER_INDEX);
        if (stringExtra4 != null) {
            this.coverIndex = Integer.parseInt(stringExtra4);
        }
        this.magicStudioStyleName = intent.getStringExtra(QQWinkTempConstants.MAGIC_STUDIO_STYLE_NAME);
        String stringExtra5 = intent.getStringExtra(QQWinkTempConstants.MAIGC_STUDIO_REPORT_SESSION_ID);
        if (stringExtra5 != null) {
            str4 = stringExtra5;
        }
        this.magicStudioSessionID = str4;
        this.isOpeningEndingEditMode = intent.getBooleanExtra(QQWinkConstants.IS_OPENING_ENDING_EDIT_MODE, false);
        String stringExtra6 = intent.getStringExtra("local_template_path");
        if (!TextUtils.isEmpty(stringExtra6)) {
            this.templatePath = stringExtra6;
        }
        if (this.isFromQzoneText) {
            if (Intrinsics.areEqual(intent.getStringExtra(QQWinkConstants.ENTRY_BUSINESS_PART_NAME), QQWinkConstants.SUB_ENTRY_BUSINESS_QZONE_SHUOSHUO)) {
                this.backgroundMaterialIndex = AECameraPrefsUtil.c().d(QQWinkConstants.EDITOR_TEXT_LAST_BACKGROUND_INDEX, 1, 0);
            } else {
                ArrayList<String> arrayList3 = this.backgroundMaterialList;
                if (arrayList3 != null && !arrayList3.isEmpty()) {
                    z19 = false;
                } else {
                    z19 = true;
                }
                if (!z19) {
                    int i3 = this.backgroundMaterialIndex;
                    ArrayList<String> arrayList4 = this.backgroundMaterialList;
                    Intrinsics.checkNotNull(arrayList4);
                    this.backgroundMaterialIndex = i3 % arrayList4.size();
                }
            }
            ArrayList<String> arrayList5 = this.backgroundMaterialList;
            Intrinsics.checkNotNull(arrayList5);
            this.templatePath = ((Object) arrayList5.get(this.backgroundMaterialIndex)) + "/template.json";
        }
        A3(intent);
        MutableLiveData<Boolean> mutableLiveData = this._hasSmartFilterLiveData;
        if (this.isFromTemplateColl || this.isFromQzoneText) {
            z47 = false;
        }
        mutableLiveData.postValue(Boolean.valueOf(z47));
        x5();
        List list = this.inputMedia;
        if (list == null) {
            list = CollectionsKt__CollectionsKt.emptyList();
        }
        com.tencent.mobileqq.wink.editor.smartclip.viewmodel.a.j(list, this.isAutoTemplate);
        initVideoTemplatesObserver();
        if (a2()) {
            v5(this, MenuType.VIDEO_FIRST_TEMPLATE, null, 2, null);
        }
        if (b2()) {
            v5(this, MenuType.VIDEO_QZONE_ALBUM_RECOMMEND, null, 2, null);
        }
    }

    public final void F4(@NotNull MenuType newMenuType) {
        Intrinsics.checkNotNullParameter(newMenuType, "newMenuType");
        QLog.i(getTAG(), 2, "onMenuClicked: " + newMenuType);
        if (newMenuType == MenuType.VIDEO_TEMPLATE) {
            WinkMaterialRedDotManager winkMaterialRedDotManager = WinkMaterialRedDotManager.f326249a;
            WinkMaterialRedDotManager.e(winkMaterialRedDotManager, winkMaterialRedDotManager.a(newMenuType), null, 2, null);
            this.menuRedDotLiveData.postValue(newMenuType);
        }
    }

    @NotNull
    /* renamed from: G2, reason: from getter */
    public final String getDraftMusicMid() {
        return this.draftMusicMid;
    }

    @Nullable
    public final String G3(@Nullable Intent intent) {
        String c16 = com.tencent.mobileqq.wink.editor.util.i.f322640a.c(intent);
        this.com.tencent.mobileqq.transfile.predownload.schedule.PreDownloadConstants.RPORT_KEY_BUSINESS_NAME java.lang.String = c16;
        return c16;
    }

    public final void G4(@NotNull List<? extends WinkStickerModel> deletedStickerModels) {
        Intrinsics.checkNotNullParameter(deletedStickerModels, "deletedStickerModels");
        this._stickerDeletedLiveData.postValue(deletedStickerModels);
    }

    @NotNull
    public final List<WinkEditData> H2(@NotNull EditMode editMode, boolean canChange) {
        Intrinsics.checkNotNullParameter(editMode, "editMode");
        if (this.editDataMap.containsKey(editMode)) {
            List<WinkEditData> list = this.editDataMap.get(editMode);
            Intrinsics.checkNotNull(list);
            return list;
        }
        ArrayList<WinkEditData> f26 = f2(canChange);
        if (f26.isEmpty()) {
            ms.a.a("WinkEditorViewModel", "[getEditDataList] gen empty edit data");
        }
        this.editDataMap.put(editMode, f26);
        return f26;
    }

    @NotNull
    public final dr.WinkTavCutParams H4(int playerWidth, int playerHeight) {
        this.playerWidth = playerWidth;
        this.playerHeight = playerHeight;
        EditMode editMode = this.editMode;
        List<WinkEditData> H2 = H2(editMode, true);
        String str = this.templatePath;
        boolean z16 = this.isFromTemplateColl;
        boolean z17 = this.isFromQzoneText;
        String str2 = this.textQzoneText;
        HashMap<String, String> hashMap = this.assetData;
        Boolean isOpenFFmpegDecode = u53.i.f438428a;
        Integer softDecodeThreadCnt = u53.i.f438429b;
        WinkTavCutScene winkTavCutScene = WinkTavCutScene.Editor;
        boolean A4 = A4();
        WatermarkConfig watermarkConfig = this.watermarkConfig;
        Boolean valueOf = Boolean.valueOf(z16);
        Intrinsics.checkNotNullExpressionValue(isOpenFFmpegDecode, "isOpenFFmpegDecode");
        boolean booleanValue = isOpenFFmpegDecode.booleanValue();
        Intrinsics.checkNotNullExpressionValue(softDecodeThreadCnt, "softDecodeThreadCnt");
        return new dr.WinkTavCutParams(true, editMode, H2, str, valueOf, playerWidth, playerHeight, null, hashMap, booleanValue, softDecodeThreadCnt.intValue(), 0L, true, z17, str2, winkTavCutScene, false, false, 0, 0, A4, watermarkConfig, 985216, null);
    }

    public final void I4() {
        MutableLiveData<List<MenuItem>> mutableLiveData = this._bottomDashboardMenuLiveData;
        mutableLiveData.postValue(mutableLiveData.getValue());
    }

    @NotNull
    /* renamed from: J2, reason: from getter */
    public final EditMode getEditMode() {
        return this.editMode;
    }

    public final void J4(@NotNull BasePartFragment hostFragment) {
        Intrinsics.checkNotNullParameter(hostFragment, "hostFragment");
        if (this.isReportAutoTemplate) {
            h73.a.INSTANCE.a(hostFragment);
            this.isReportAutoTemplate = false;
        }
    }

    public final int K2() {
        if (this.editMode == EditMode.Video) {
            return 0;
        }
        return 1;
    }

    /* renamed from: K3, reason: from getter */
    public final boolean getIsAigcOpeningEndingTemplate() {
        return this.isAigcOpeningEndingTemplate;
    }

    /* renamed from: L2, reason: from getter */
    public final boolean getEnableImageTransition() {
        return this.enableImageTransition;
    }

    /* renamed from: L3, reason: from getter */
    public final boolean getIsAllImages() {
        return this.isAllImages;
    }

    @NotNull
    public final LiveData<t73.a<Boolean>> M2() {
        return this.enhanceEvent;
    }

    /* renamed from: M3, reason: from getter */
    public final boolean getIsAllVideos() {
        return this.isAllVideos;
    }

    public final void M4(@Nullable String value) {
        if (value == null) {
            this.assetData.remove(LightConstants.EventKey.EVENT_SCRIPT_PARAMS);
        } else {
            this.assetData.put(LightConstants.EventKey.EVENT_SCRIPT_PARAMS, value);
        }
    }

    /* renamed from: N2, reason: from getter */
    public final boolean getEnhanceOnOffState() {
        return this.enhanceOnOffState;
    }

    /* renamed from: N3, reason: from getter */
    public final boolean getIsAutoTemplate() {
        return this.isAutoTemplate;
    }

    @NotNull
    public final WinkEditDataWrapper N4(@NotNull dr curTavCut, @NotNull MusicSourceViewModel musicSourceViewModel, @NotNull MusicVolumeControlViewModel musicVolumeViewModel, @Nullable InteractiveModel interactiveModel, @Nullable Map<String, WinkEditUIData> partUIDataMap, @Nullable Intent intent) {
        float f16;
        float f17;
        MusicVolumeControlViewModel.VolumeType volumeType;
        String str;
        Map map;
        List emptyList;
        List list;
        int i3;
        Map<String, String> a16;
        Map mutableMap;
        Intrinsics.checkNotNullParameter(curTavCut, "curTavCut");
        Intrinsics.checkNotNullParameter(musicSourceViewModel, "musicSourceViewModel");
        Intrinsics.checkNotNullParameter(musicVolumeViewModel, "musicVolumeViewModel");
        String templatePath = curTavCut.getTemplatePath();
        if (this.isFromQzoneText && !TextUtils.isEmpty(this.backgroundTemplatePath)) {
            templatePath = this.backgroundTemplatePath;
        }
        String str2 = templatePath;
        WinkEditorMusicInfo currentMusic = musicSourceViewModel.getCurrentMusic();
        Long valueOf = currentMusic != null ? Long.valueOf(currentMusic.o()) : null;
        WinkEditorMusicInfo currentMusic2 = musicSourceViewModel.getCurrentMusic();
        String q16 = currentMusic2 != null ? currentMusic2.q() : null;
        WinkEditorMusicInfo currentMusic3 = musicSourceViewModel.getCurrentMusic();
        String r16 = currentMusic3 != null ? currentMusic3.r() : null;
        WinkEditorMusicInfo currentMusic4 = musicSourceViewModel.getCurrentMusic();
        Integer valueOf2 = currentMusic4 != null ? Integer.valueOf(currentMusic4.n()) : null;
        WinkEditorMusicInfo currentMusic5 = musicSourceViewModel.getCurrentMusic();
        String p16 = currentMusic5 != null ? currentMusic5.p() : null;
        DraftMusic draftMusic = musicSourceViewModel.getDraftMusic();
        if (draftMusic != null) {
            valueOf = draftMusic.getSongId();
            q16 = draftMusic.getSongName();
            p16 = draftMusic.getSelectMusicMid();
        }
        Long l3 = valueOf;
        String str3 = q16;
        String str4 = p16;
        Float value = musicVolumeViewModel.h2().getValue();
        if (value == null) {
            value = Float.valueOf(0.0f);
        }
        float floatValue = value.floatValue();
        Float value2 = musicVolumeViewModel.T1().getValue();
        if (value2 == null) {
            value2 = Float.valueOf(0.0f);
        }
        float floatValue2 = value2.floatValue();
        MusicVolumeControlViewModel.VolumeType f26 = musicVolumeViewModel.f2();
        com.tencent.mobileqq.wink.editor.music.viewmodel.c draftMusicVolume = musicVolumeViewModel.getDraftMusicVolume();
        if (draftMusicVolume != null) {
            float original = draftMusicVolume.getOriginal();
            MusicVolumeControlViewModel.VolumeType volumeType2 = draftMusicVolume.getVolumeType();
            f17 = draftMusicVolume.getBgm();
            f16 = original;
            volumeType = volumeType2;
        } else {
            f16 = floatValue;
            f17 = floatValue2;
            volumeType = f26;
        }
        String str5 = this.missionId;
        int K2 = K2();
        ArrayList<LocalMediaInfo> arrayList = this.inputMedia;
        int O2 = O2();
        long durationUs = curTavCut.getDurationUs();
        boolean z16 = this.isFromCapture;
        WinkEditorMusicInfo currentMusic6 = musicSourceViewModel.getCurrentMusic();
        if (currentMusic6 == null || (str = currentMusic6.p()) == null) {
            str = "";
        }
        Integer m3 = musicSourceViewModel.m3(str);
        int i16 = this.useHD;
        boolean z17 = com.tencent.mobileqq.wink.editor.smartclip.viewmodel.a.manualTurnOnSmartClip;
        boolean z18 = this.isFromQzoneText;
        ArrayList<String> arrayList2 = this.backgroundMaterialList;
        if (arrayList2 == null) {
            arrayList2 = new ArrayList<>();
        }
        ArrayList<String> arrayList3 = arrayList2;
        int i17 = this.backgroundMaterialIndex;
        String str6 = this.textQzoneText;
        boolean z19 = this.isFromTemplateColl;
        String str7 = this.com.tencent.mobileqq.transfile.predownload.schedule.PreDownloadConstants.RPORT_KEY_BUSINESS_NAME java.lang.String;
        if (str7 == null) {
            str7 = "QCIRCLE";
        }
        String str8 = str7;
        boolean z26 = this.isEnableSwitchEditMode;
        boolean z27 = this.isEnableMusic;
        boolean a26 = a2();
        List<TemplateLibraryHolderInfo> list2 = this.templateMediaHolderInfo;
        String str9 = this.captureMaterialId;
        String str10 = this.captureMaterialName;
        boolean z28 = this.enableImageTransition;
        boolean z29 = this.isHDRExporting;
        z93.a a17 = Wink.INSTANCE.a();
        if (a17 == null || (a16 = a17.a(intent, this)) == null) {
            map = null;
        } else {
            mutableMap = MapsKt__MapsKt.toMutableMap(a16);
            map = mutableMap;
        }
        WinkEditDataWrapper winkEditDataWrapper = new WinkEditDataWrapper(str5, Integer.valueOf(K2), null, arrayList, str2, Integer.valueOf(O2), null, durationUs, z16, str4, m3, false, i16, f16, f17, volumeType, z17, partUIDataMap, str8, z26, 0L, l3, str3, z27, 0L, a26, list2, z18, str6, z19, arrayList3, i17, str9, z28, z29, map, this.isAutoTemplate, this.isFromMemoryAlbum, false, str10, r16, valueOf2, this.watermarkConfig, this.isFromTemplateLib, 17827908, 64, null);
        for (WinkEditData winkEditData : curTavCut.n()) {
            LinkedHashMap linkedHashMap = new LinkedHashMap();
            ArrayList arrayList4 = new ArrayList();
            Map<String, WinkStickerModel> stickerModelMap = winkEditData.getStickerModelMap();
            if (stickerModelMap == null || (list = stickerModelMap.values()) == null) {
                emptyList = CollectionsKt__CollectionsKt.emptyList();
                list = emptyList;
            }
            arrayList4.addAll(list);
            int size = arrayList4.size();
            for (int i18 = 0; i18 < size; i18++) {
                WinkStickerModel winkStickerModel = (WinkStickerModel) arrayList4.get(i18);
                String str11 = winkStickerModel.id;
                if (curTavCut instanceof WinkVideoTavCut) {
                    int j16 = ((WinkVideoTavCut) curTavCut).j1(winkStickerModel.getEntityName());
                    w53.b.a("WinkEditorViewModel", "editData.stickerModelMap entityId:" + j16 + ", entityName:" + winkStickerModel.getEntityName());
                    i3 = j16;
                } else {
                    i3 = 0;
                }
                linkedHashMap.put(str11, new WinkStickerModelExtra(winkStickerModel.getInitStickerScale(), winkStickerModel.getDownScaleRecord(), winkStickerModel.getOriginPointInView(), winkStickerModel.getSizeInView(), winkStickerModel.getCenterInView(), winkStickerModel.getLeftTopInView(), winkStickerModel.getRightBottomInView(), winkStickerModel.getMaterial(), winkStickerModel.getLastDownScaleX(), winkStickerModel.getLastDownScaleY(), winkStickerModel.getLastDownRotate(), winkStickerModel.getNormalizedLeftTopInView(), winkStickerModel.getNormalizedRightBottomInView(), winkStickerModel.isTextSticker(), winkStickerModel.getClickBoundsLeftTopInView(), winkStickerModel.getClickBoundsRightBottomInView(), winkStickerModel.getIsTraceSticker(), winkStickerModel.getStickerTrackerResult(), winkStickerModel.getEntityName(), i3, winkStickerModel.getIsTimeRangeChangedByUser(), winkStickerModel.getHasChooseTTS(), winkStickerModel.getTtsAudioInfo()));
            }
            winkEditData.setStickerExtraMap(linkedHashMap);
            com.tencent.mobileqq.wink.model.b bVar = com.tencent.mobileqq.wink.model.b.f324006a;
            if (bVar.f()) {
                winkEditData.setChallengeData(interactiveModel);
            } else {
                winkEditData.setChallengeData(null);
            }
            winkEditData.setManualDeletedChallengeTag(bVar.c());
            winkEditDataWrapper.getEditDatas().add(winkEditData);
        }
        com.tencent.mobileqq.wink.editor.draft.a.h(winkEditDataWrapper, this.missionId);
        return winkEditDataWrapper;
    }

    public final int O2() {
        if (this.isFromTemplateLib && this.mFrom != 3) {
            return 5;
        }
        return this.mFrom;
    }

    /* renamed from: O3, reason: from getter */
    public final boolean getIsBubbleShowed() {
        return this.isBubbleShowed;
    }

    public final void O4() {
        WinkEditDataWrapper winkEditDataWrapper = this.originEditData;
        if (winkEditDataWrapper != null) {
            com.tencent.mobileqq.wink.editor.draft.a.h(winkEditDataWrapper, this.missionId);
        }
    }

    @NotNull
    public final LiveData<ArrayList<LocalMediaInfo>> P2() {
        return this.firstTemplateClipSourceChangeLiveData;
    }

    public final void P4(@NotNull String key, @NotNull String value) {
        JSONObject jSONObject;
        Intrinsics.checkNotNullParameter(key, "key");
        Intrinsics.checkNotNullParameter(value, "value");
        String str = this.assetData.get(LightConstants.EventKey.EVENT_SCRIPT_PARAMS);
        try {
        } catch (Throwable th5) {
            w53.b.d("WinkEditorFragment", "saveScriptParamsToAssetData json parse fail", th5);
            jSONObject = new JSONObject();
        }
        if (str != null) {
            jSONObject = new JSONObject(str);
            jSONObject.put(key, value);
            HashMap<String, String> hashMap = this.assetData;
            String jSONObject2 = jSONObject.toString();
            Intrinsics.checkNotNullExpressionValue(jSONObject2, "jsonObj.toString()");
            hashMap.put(LightConstants.EventKey.EVENT_SCRIPT_PARAMS, jSONObject2);
            return;
        }
        throw new RuntimeException("invalid scriptParams");
    }

    @NotNull
    public final LiveData<Boolean> Q2() {
        return this.hasSmartFilterLiveData;
    }

    /* renamed from: Q3, reason: from getter */
    public final boolean getIsDisableOther() {
        return this.isDisableOther;
    }

    public final void Q4(boolean z16) {
        this.isAigcOpeningEndingTemplate = z16;
    }

    public final boolean R1() {
        if (!this.isAutoTemplate) {
            an.Companion companion = com.tencent.mobileqq.wink.picker.core.part.an.INSTANCE;
            if (companion.d() != null && V3() && companion.a()) {
                return true;
            }
        }
        return false;
    }

    @Nullable
    public final ArrayList<LocalMediaInfo> R2() {
        return this.inputMedia;
    }

    /* renamed from: R3, reason: from getter */
    public final boolean getIsDraftDeletedWhenBack() {
        return this.isDraftDeletedWhenBack;
    }

    public final void R4(boolean z16) {
        this.isAutoTemplate = z16;
    }

    public final void S1() {
        boolean z16 = true;
        this.backgroundMaterialIndex++;
        ArrayList<String> arrayList = this.backgroundMaterialList;
        if (arrayList != null && !arrayList.isEmpty()) {
            z16 = false;
        }
        if (z16) {
            return;
        }
        int i3 = this.backgroundMaterialIndex;
        ArrayList<String> arrayList2 = this.backgroundMaterialList;
        Intrinsics.checkNotNull(arrayList2);
        this.backgroundMaterialIndex = i3 % arrayList2.size();
        ArrayList<String> arrayList3 = this.backgroundMaterialList;
        Intrinsics.checkNotNull(arrayList3);
        String str = arrayList3.get(this.backgroundMaterialIndex);
        Intrinsics.checkNotNullExpressionValue(str, "backgroundMaterialList!!\u2026(backgroundMaterialIndex)");
        this._changeBackgroundEvent.postValue(new t73.a<>(str));
        AECameraPrefsUtil.c().i(QQWinkConstants.EDITOR_TEXT_LAST_BACKGROUND_INDEX, this.backgroundMaterialIndex, 0);
    }

    @NotNull
    public final Intent S2() {
        Intent intent = new Intent();
        intent.setAction(CommonConstant.ACTION.HWID_SCHEME_URL);
        intent.setPackage(MobileQQ.PACKAGE_NAME);
        intent.setData(Uri.parse(QCircleWinkOutputRouter.JUMP_TO_FOLDER_SCHEMA));
        return intent;
    }

    public final void S4(@NotNull String str) {
        Intrinsics.checkNotNullParameter(str, "<set-?>");
        this.backgroundTemplatePath = str;
    }

    public final void T1(boolean isUp) {
        this._stickerLayoutChanged.postValue(Boolean.valueOf(isUp));
    }

    @Nullable
    public final String T2() {
        return this.assetData.get(LightConstants.EventKey.EVENT_SCRIPT_PARAMS);
    }

    /* renamed from: T3, reason: from getter */
    public final boolean getIsEnableMusic() {
        return this.isEnableMusic;
    }

    public final void T4(@Nullable MenuType menuType) {
        this.curMenuType = menuType;
    }

    public final void U1(boolean isChildFragmentShow) {
        this._childFragmentHidden.postValue(Boolean.valueOf(isChildFragmentShow));
    }

    /* renamed from: U2, reason: from getter */
    public final int getMDraftFrom() {
        return this.mDraftFrom;
    }

    /* renamed from: U3, reason: from getter */
    public final boolean getIsEnableSwitchEditMode() {
        return this.isEnableSwitchEditMode;
    }

    public final void U4(@Nullable MetaMaterial r36) {
        w53.b.a("WinkEditorViewModel", "setCustomStickerMaterial " + r36 + " viewMode:" + this);
        O1 = r36;
    }

    /* renamed from: V2, reason: from getter */
    public final int getMFrom() {
        return this.mFrom;
    }

    public final boolean V3() {
        if (this.mFrom == 0) {
            return true;
        }
        return false;
    }

    public final void V4(boolean z16) {
        this.isDailySend = z16;
    }

    public final void W1() {
        this.isDraftDeletedWhenBack = true;
        ThreadManager.getFileThreadHandler().post(new Runnable() { // from class: com.tencent.mobileqq.wink.editor.cy
            @Override // java.lang.Runnable
            public final void run() {
                WinkEditorViewModel.X1(WinkEditorViewModel.this);
            }
        });
    }

    @NotNull
    /* renamed from: W2, reason: from getter */
    public final String getMagicStudioSessionID() {
        return this.magicStudioSessionID;
    }

    public final boolean W3() {
        if (this.mFrom == 8) {
            return true;
        }
        return false;
    }

    public final void W4(boolean z16) {
        this.isDisableOther = z16;
    }

    public final boolean X3() {
        if (this.mFrom == 2) {
            return true;
        }
        return false;
    }

    public final void X4(boolean z16) {
        this.isDraftDeletedWhenBack = z16;
    }

    @NotNull
    public final LiveData<Long> Y2() {
        return this.mediaDurationLiveData;
    }

    /* renamed from: Y3, reason: from getter */
    public final boolean getIsFromCapture() {
        return this.isFromCapture;
    }

    public final void Y4(@NotNull EditMode editMode) {
        Intrinsics.checkNotNullParameter(editMode, "<set-?>");
        this.editMode = editMode;
    }

    public final void Z1(@NotNull MenuType menuType) {
        Intrinsics.checkNotNullParameter(menuType, "menuType");
        this._dismissPartLiveData.postValue(menuType);
    }

    public final boolean Z3() {
        if (this.mFrom == 3) {
            return true;
        }
        return false;
    }

    public final void Z4(boolean z16) {
        this.enableImageTransition = z16;
    }

    public final boolean a2() {
        ms.a.c("WinkEditorViewModel", "isFromFirstTemplate: " + this.isFromFirstTemplate);
        return this.isFromFirstTemplate;
    }

    @NotNull
    public final LiveData<String> a3() {
        return this.mediaTooLongLiveData;
    }

    /* renamed from: a4, reason: from getter */
    public final boolean getIsFromFirstTemplate() {
        return this.isFromFirstTemplate;
    }

    public final void a5(boolean z16) {
        this.isEnableMusic = z16;
    }

    public final boolean b2() {
        if (this.isFromQzoneAlbum && this.isFromQzoneAlumShowRecommendTemplate && com.tencent.mobileqq.wink.edit.manager.h.d().f318436e != null && com.tencent.mobileqq.wink.edit.manager.h.d().f318436e.size() > 0 && this.currentMenuItems.contains(MenuItem.VIDEO_TEMPLATE)) {
            return true;
        }
        return false;
    }

    public final boolean b4() {
        if (this.mFrom == 4) {
            return true;
        }
        return false;
    }

    public final void b5(boolean z16) {
        this.isEnableSwitchEditMode = z16;
    }

    public final boolean c2() {
        boolean z16;
        String str = this.templatePath;
        if (str != null) {
            Intrinsics.checkNotNull(str, "null cannot be cast to non-null type kotlin.String");
        } else {
            MetaMaterial metaMaterial = this.templateMaterial;
            if (metaMaterial != null) {
                str = WinkEditorResourceManager.a1().i2(metaMaterial);
                Intrinsics.checkNotNullExpressionValue(str, "getInstance().getVideoTemplatePath(it)");
            } else {
                str = "";
            }
        }
        List<ClipPlaceHolder> b16 = com.tencent.mobileqq.wink.utils.n.f326718a.b(str);
        if (b16 != null && !b16.isEmpty()) {
            z16 = false;
        } else {
            z16 = true;
        }
        return !z16;
    }

    public final boolean c4() {
        if (this.mFrom == 11) {
            return true;
        }
        return false;
    }

    public final void c5(boolean z16) {
        this.enhanceOnOffState = z16;
    }

    public final boolean d2() {
        String str = this.templatePath;
        if (str != null) {
            Intrinsics.checkNotNull(str, "null cannot be cast to non-null type kotlin.String");
        } else {
            MetaMaterial metaMaterial = this.templateMaterial;
            if (metaMaterial != null) {
                str = WinkEditorResourceManager.a1().i2(metaMaterial);
                Intrinsics.checkNotNullExpressionValue(str, "getInstance().getVideoTemplatePath(it)");
            } else {
                str = "";
            }
        }
        return !WinkVideoTavCut.INSTANCE.h(str).isEmpty();
    }

    @NotNull
    public final MutableLiveData<MenuType> d3() {
        return this.menuRedDotLiveData;
    }

    /* renamed from: d4, reason: from getter */
    public final boolean getIsFromMagicStudio() {
        return this.isFromMagicStudio;
    }

    public final void d5(boolean z16) {
        this.isHDRExporting = z16;
    }

    public final void e2(@NotNull ArrayList<LocalMediaInfo> localMediaInfo) {
        Intrinsics.checkNotNullParameter(localMediaInfo, "localMediaInfo");
        this._firstTemplateClipSourceChangeLiveData.postValue(localMediaInfo);
    }

    @NotNull
    public final LiveData<MenuType> e3() {
        return this.menuSwitch;
    }

    /* renamed from: e4, reason: from getter */
    public final boolean getIsFromMemoryAlbum() {
        return this.isFromMemoryAlbum;
    }

    public final void e5(@Nullable ArrayList<LocalMediaInfo> arrayList) {
        this.inputMedia = arrayList;
    }

    @NotNull
    public final LiveData<MenuSwitchAction> f3() {
        return this.menuSwitchActionLiveData;
    }

    /* renamed from: f4, reason: from getter */
    public final boolean getIsFormQCirclePicker() {
        return this.isFormQCirclePicker;
    }

    public final void f5(int i3) {
        this.mFrom = i3;
    }

    @NotNull
    /* renamed from: g3, reason: from getter */
    public final String getMissionId() {
        return this.missionId;
    }

    public final boolean g4() {
        if (this.mFrom == 6) {
            return true;
        }
        return false;
    }

    public final void g5(boolean z16) {
        this.isOpeningEndingEditMode = z16;
    }

    @Override // com.tencent.biz.richframework.part.BaseViewModel
    @NotNull
    /* renamed from: getLogTag */
    public String getTAG() {
        return "WinkEditorViewModel";
    }

    @Nullable
    /* renamed from: h2, reason: from getter */
    public final Intent getActivityIntent() {
        return this.activityIntent;
    }

    @NotNull
    public final LiveData<Configuration> h3() {
        return this.onConfigurationChanged;
    }

    /* renamed from: h4, reason: from getter */
    public final boolean getIsFromQzoneText() {
        return this.isFromQzoneText;
    }

    public final void h5(boolean z16) {
        this.isSchemaTemplate = z16;
    }

    @NotNull
    public final HashMap<String, String> i2() {
        return this.assetData;
    }

    @NotNull
    public final LiveData<t73.a<Runnable>> i3() {
        return this.openGuideEnhance;
    }

    public final boolean i4() {
        if (this.mFrom == 1) {
            return true;
        }
        return false;
    }

    public final void i5(@Nullable List<TemplateLibraryHolderInfo> list) {
        this.templateMediaHolderInfo = list;
    }

    public final int j2() {
        return this.backgroundMaterialIndex;
    }

    @Nullable
    /* renamed from: j3, reason: from getter */
    public final WinkEditDataWrapper getOriginEditData() {
        return this.originEditData;
    }

    /* renamed from: j4, reason: from getter */
    public final boolean getIsFromTemplateColl() {
        return this.isFromTemplateColl;
    }

    public final void j5(@Nullable String str) {
        this.textQzoneText = str;
    }

    @Nullable
    public final ArrayList<String> k2() {
        return this.backgroundMaterialList;
    }

    public final boolean k3() {
        if (!Z3() && !X3() && !b4() && !g4() && !W3()) {
            return false;
        }
        return true;
    }

    public final boolean k4() {
        if (this.mFrom == 5 && this.isFromTemplateLib) {
            return true;
        }
        return false;
    }

    public final void k5(boolean z16) {
        this.isUserImageReplaced = z16;
    }

    @NotNull
    /* renamed from: l2, reason: from getter */
    public final String getBackgroundTemplatePath() {
        return this.backgroundTemplatePath;
    }

    @NotNull
    public final LiveData<String> l3() {
        return this.qzonePhotoTemplateLiveData;
    }

    /* renamed from: l4, reason: from getter */
    public final boolean getIsFromTemplateLib() {
        return this.isFromTemplateLib;
    }

    public final void l5() {
        if (!this.isOpeningEndingEditMode) {
            v5(this, MenuType.BOTTOM_DASHBOARD, null, 2, null);
        }
    }

    @Nullable
    public final String m2(@Nullable dr curTavCut) {
        List<WinkEditData> n3;
        MetaMaterial material;
        if (curTavCut != null && (n3 = curTavCut.n()) != null) {
            Iterator<T> it = n3.iterator();
            while (it.hasNext()) {
                Map<String, WinkStickerModel> stickerModelMap = ((WinkEditData) it.next()).getStickerModelMap();
                if (stickerModelMap != null) {
                    for (Map.Entry<String, WinkStickerModel> entry : stickerModelMap.entrySet()) {
                        String key = entry.getKey();
                        WinkStickerModel value = entry.getValue();
                        if ((curTavCut instanceof WinkVideoTavCut) && (material = value.getMaterial()) != null && com.tencent.mobileqq.wink.editor.sticker.m.T(material)) {
                            return key;
                        }
                    }
                }
            }
            return null;
        }
        return null;
    }

    /* renamed from: m4, reason: from getter */
    public final boolean getIsFromZShow() {
        return this.isFromZShow;
    }

    public final void m5(boolean r26) {
        this._bottomDashboardShowHideLiveData.postValue(Boolean.valueOf(r26));
    }

    @NotNull
    public final LiveData<List<WinkStickerModel>> n3() {
        return this.stickerDeletedLiveData;
    }

    /* renamed from: n4, reason: from getter */
    public final boolean getIsHDRExporting() {
        return this.isHDRExporting;
    }

    public final void n5(long j3) {
        if (j3 > WinkConfig.f317649a.b() && !com.tencent.mobileqq.wink.editor.smartclip.viewmodel.a.manualTurnOnSmartClip) {
            this._mediaTooLongLiveData.postValue("winkClip");
        }
    }

    @NotNull
    public final LiveData<List<MenuItem>> o2() {
        return this.bottomDashboardMenuLiveData;
    }

    @NotNull
    public final LiveData<Boolean> o3() {
        return this.stickerLayoutChanged;
    }

    /* renamed from: o4, reason: from getter */
    public final boolean getIsLoadFromDraft() {
        return this.isLoadFromDraft;
    }

    public final void o5() {
        this._qzonePhotoTemplateLiveData.postValue("winkQzonePhotoTemplate");
    }

    @Override // androidx.lifecycle.ViewModel
    public void onCleared() {
        super.onCleared();
        Observer<List<MetaCategory>> observer = this.mVideoTemplatesObserver;
        if (observer != null) {
            WinkEditorResourceManager.a1().h2().removeObserver(observer);
        }
    }

    @NotNull
    public final LiveData<MenuType> p2() {
        return this.bottomDashboardMenuSwitchLiveData;
    }

    @NotNull
    public final LiveData<dr.WinkTavCutParams> p3() {
        return this.tavCutParamsLiveData;
    }

    public final boolean p4(@NotNull WinkBubbleInfo bubbleInfo) {
        Intrinsics.checkNotNullParameter(bubbleInfo, "bubbleInfo");
        if (bubbleInfo.getShowLevel() != 3 && (bubbleInfo.getShowLevel() < this.bubbleShowLevel || a63.a.INSTANCE.e(bubbleInfo) || this.isBubbleShowed)) {
            return true;
        }
        return false;
    }

    public final void p5() {
        this._mediaTooLongLiveData.postValue("winkSmartClip");
    }

    @NotNull
    public final LiveData<Boolean> q2() {
        return this.bottomDashboardShowHideLiveData;
    }

    @Nullable
    /* renamed from: q3, reason: from getter */
    public final MetaMaterial getTemplateMaterial() {
        return this.templateMaterial;
    }

    /* renamed from: q4, reason: from getter */
    public final boolean getIsOpeningEndingEditMode() {
        return this.isOpeningEndingEditMode;
    }

    public final void q5() {
        a63.d.f25611a.f(new Function1<WinkBubbleInfo, Unit>() { // from class: com.tencent.mobileqq.wink.editor.WinkEditorViewModel$showTianShuBubble$1
            /* JADX INFO: Access modifiers changed from: package-private */
            {
                super(1);
            }

            @Override // kotlin.jvm.functions.Function1
            public /* bridge */ /* synthetic */ Unit invoke(WinkBubbleInfo winkBubbleInfo) {
                invoke2(winkBubbleInfo);
                return Unit.INSTANCE;
            }

            /* renamed from: invoke, reason: avoid collision after fix types in other method */
            public final void invoke2(@NotNull WinkBubbleInfo it) {
                MutableLiveData mutableLiveData;
                Intrinsics.checkNotNullParameter(it, "it");
                mutableLiveData = WinkEditorViewModel.this._tianShuBubbleLiveData;
                mutableLiveData.postValue(it);
            }
        });
    }

    @Nullable
    /* renamed from: r2, reason: from getter */
    public final String getCom.tencent.mobileqq.transfile.predownload.schedule.PreDownloadConstants.RPORT_KEY_BUSINESS_NAME java.lang.String() {
        return this.com.tencent.mobileqq.transfile.predownload.schedule.PreDownloadConstants.RPORT_KEY_BUSINESS_NAME java.lang.String;
    }

    @Nullable
    public final List<TemplateLibraryHolderInfo> r3() {
        return this.templateMediaHolderInfo;
    }

    /* renamed from: r4, reason: from getter */
    public final boolean getIsQCircleAutoTemplate() {
        return this.isQCircleAutoTemplate;
    }

    public final void r5() {
        this.isBubbleShowed = true;
    }

    @Nullable
    /* renamed from: s2, reason: from getter */
    public final String getCaptureMaterialId() {
        return this.captureMaterialId;
    }

    @Nullable
    /* renamed from: s3, reason: from getter */
    public final String getTemplatePath() {
        return this.templatePath;
    }

    public final boolean s4() {
        if (!Intrinsics.areEqual("QCIRCLE", this.com.tencent.mobileqq.transfile.predownload.schedule.PreDownloadConstants.RPORT_KEY_BUSINESS_NAME java.lang.String) && !Intrinsics.areEqual(QQWinkConstants.ENTRY_BUSINESS_QCIRCLE_OLD, this.com.tencent.mobileqq.transfile.predownload.schedule.PreDownloadConstants.RPORT_KEY_BUSINESS_NAME java.lang.String)) {
            return false;
        }
        return true;
    }

    public final void s5(@NotNull MenuType menuType) {
        Intrinsics.checkNotNullParameter(menuType, "menuType");
        this._bottomDashboardMenuSwitchLiveData.postValue(menuType);
    }

    @Nullable
    /* renamed from: t3, reason: from getter */
    public final String getTextQzoneText() {
        return this.textQzoneText;
    }

    public final boolean t4() {
        if (Intrinsics.areEqual(this.com.tencent.mobileqq.transfile.predownload.schedule.PreDownloadConstants.RPORT_KEY_BUSINESS_NAME java.lang.String, "QZONE") && com.tencent.mobileqq.wink.editor.util.h.f322638a.f() && !this.isEnableSwitchEditMode && this.editMode == EditMode.Image && QzoneConfig.isPicTemplateSwitch(((IAccountRuntime) QRoute.api(IAccountRuntime.class)).getAccount())) {
            return true;
        }
        return false;
    }

    public final void t5(boolean onOrOff) {
        w53.b.a("WinkEditorViewModel", "switchEnhance = " + onOrOff);
        this._enhanceEvent.postValue(new t73.a<>(Boolean.valueOf(onOrOff)));
    }

    @Nullable
    /* renamed from: u2, reason: from getter */
    public final String getCaptureMaterialName() {
        return this.captureMaterialName;
    }

    @NotNull
    public final LiveData<WinkBubbleInfo> u3() {
        return this.tianShuBubbleLiveData;
    }

    public final boolean u4() {
        if (P3() && !this.isEnableSwitchEditMode && this.editMode == EditMode.Image && QzoneConfig.isPicTemplateSwitch(((IAccountRuntime) QRoute.api(IAccountRuntime.class)).getAccount())) {
            return true;
        }
        return false;
    }

    public final void u5(@NotNull MenuType newMenuType, @Nullable Bundle args) {
        boolean z16;
        Intrinsics.checkNotNullParameter(newMenuType, "newMenuType");
        w53.b.f(getTAG(), "switchMenu newMenuType:" + newMenuType + ", currentMenuType:" + this.curMenuType);
        if (this.curMenuType == newMenuType && newMenuType != MenuType.TO_IMAGE && newMenuType != MenuType.TO_VIDEO) {
            return;
        }
        if (newMenuType != MenuType.BACKGROUND) {
            this.curMenuType = newMenuType;
        }
        if (this.curMenuType == MenuType.BOTTOM_DASHBOARD) {
            z16 = true;
        } else {
            z16 = false;
        }
        m5(z16);
        int i3 = b.f318643a[newMenuType.ordinal()];
        if (i3 != 1) {
            if (i3 != 2) {
                if (i3 != 3) {
                    this._menuSwitchActionLiveData.postValue(new MenuSwitchAction(newMenuType, args));
                } else if (this.isFromZShow) {
                    Bundle bundle = new Bundle();
                    if (args != null) {
                        bundle.putAll(args);
                    }
                    bundle.putSerializable(QQWinkConstants.PICK_TEMPLATE_TTS_MODEL, this.ttsAudioInfo);
                    this._menuSwitchActionLiveData.postValue(new MenuSwitchAction(newMenuType, bundle));
                } else {
                    this._menuSwitchActionLiveData.postValue(new MenuSwitchAction(newMenuType, args));
                }
            } else {
                this.editMode = EditMode.Video;
                x5();
                MutableLiveData<dr.WinkTavCutParams> mutableLiveData = this._tavCutParamsLiveData;
                EditMode editMode = this.editMode;
                List I2 = I2(this, editMode, false, 2, null);
                boolean z17 = this.isFromTemplateColl;
                boolean z18 = this.isFromQzoneText;
                String str = this.textQzoneText;
                int i16 = this.playerWidth;
                int i17 = this.playerHeight;
                Boolean isOpenFFmpegDecode = u53.i.f438428a;
                Integer softDecodeThreadCnt = u53.i.f438429b;
                WinkTavCutScene winkTavCutScene = WinkTavCutScene.Editor;
                WatermarkConfig watermarkConfig = this.watermarkConfig;
                Boolean valueOf = Boolean.valueOf(z17);
                Intrinsics.checkNotNullExpressionValue(isOpenFFmpegDecode, "isOpenFFmpegDecode");
                boolean booleanValue = isOpenFFmpegDecode.booleanValue();
                Intrinsics.checkNotNullExpressionValue(softDecodeThreadCnt, "softDecodeThreadCnt");
                mutableLiveData.postValue(new dr.WinkTavCutParams(false, editMode, I2, null, valueOf, i16, i17, null, null, booleanValue, softDecodeThreadCnt.intValue(), 0L, false, z18, str, winkTavCutScene, false, false, 0, 0, false, watermarkConfig, 2038152, null));
            }
        } else {
            this.editMode = EditMode.Image;
            x5();
            MutableLiveData<dr.WinkTavCutParams> mutableLiveData2 = this._tavCutParamsLiveData;
            EditMode editMode2 = this.editMode;
            List I22 = I2(this, editMode2, false, 2, null);
            boolean z19 = this.isFromTemplateColl;
            mutableLiveData2.postValue(new dr.WinkTavCutParams(false, editMode2, I22, null, Boolean.valueOf(z19), this.playerWidth, this.playerHeight, null, null, false, 0, 0L, false, this.isFromQzoneText, this.textQzoneText, WinkTavCutScene.Editor, false, false, 0, 0, false, this.watermarkConfig, 2039688, null));
        }
        this._menuSwitch.postValue(newMenuType);
    }

    @Nullable
    /* renamed from: v3, reason: from getter */
    public final TTSAudioInfo getTtsAudioInfo() {
        return this.ttsAudioInfo;
    }

    /* renamed from: v4, reason: from getter */
    public final boolean getIsSchemaTemplate() {
        return this.isSchemaTemplate;
    }

    @NotNull
    public final LiveData<t73.a<String>> w2() {
        return this.changeBackgroundEvent;
    }

    @NotNull
    public final LiveData<Map<String, WinkEditUIData>> w3() {
        return this.uiDraftChanged;
    }

    /* renamed from: w4, reason: from getter */
    public final boolean getIsSingleVideo() {
        return this.isSingleVideo;
    }

    public final void w5(int showLevel) {
        if (showLevel > this.bubbleShowLevel) {
            this.bubbleShowLevel = showLevel;
            ms.a.f("WinkEditorViewModel", "updateBubbleShowLevel:" + showLevel);
        }
    }

    @NotNull
    public final LiveData<Boolean> x2() {
        return this.childFragmentHidden;
    }

    @NotNull
    public final LiveData<Boolean> x3() {
        return this.updateEnhanceResLiveData;
    }

    /* renamed from: x4, reason: from getter */
    public final boolean getIsUserImageReplaced() {
        return this.isUserImageReplaced;
    }

    /* renamed from: y2, reason: from getter */
    public final int getCoverIndex() {
        return this.coverIndex;
    }

    /* renamed from: y3, reason: from getter */
    public final int getUseHD() {
        return this.useHD;
    }

    public final void y5() {
        this._bottomDashboardMenuLiveData.postValue(g2());
    }

    @Nullable
    /* renamed from: z2, reason: from getter */
    public final MenuType getCurMenuType() {
        return this.curMenuType;
    }

    @Nullable
    /* renamed from: z3, reason: from getter */
    public final WatermarkConfig getWatermarkConfig() {
        return this.watermarkConfig;
    }

    public final void z5(long durationUs) {
        Long value = this._mediaDurationLiveData.getValue();
        if (value != null && durationUs == value.longValue()) {
            return;
        }
        this._mediaDurationLiveData.postValue(Long.valueOf(durationUs));
    }
}
