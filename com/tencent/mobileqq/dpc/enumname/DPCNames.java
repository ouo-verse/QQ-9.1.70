package com.tencent.mobileqq.dpc.enumname;

import com.tencent.mobileqq.qcircle.api.constant.QCircleScheme;
import com.tencent.mobileqq.qfix.redirect.IPatchRedirector;
import com.tencent.mobileqq.qfix.redirect.PatchRedirectCenter;
import com.tencent.xweb.WebViewFeature;

/* JADX WARN: Failed to restore enum class, 'enum' modifier and super class removed */
/* loaded from: classes10.dex */
public final class DPCNames {
    private static final /* synthetic */ DPCNames[] $VALUES;
    static IPatchRedirector $redirector_;
    public static final DPCNames AIOOpenLoadMsgConfig;
    public static final DPCNames ARCfg;
    public static final DPCNames ARMap_switch_config;
    public static final DPCNames AVPanCfg;
    public static final DPCNames AcceptType;
    public static final DPCNames BlessPTVEnable;
    public static final DPCNames FTSSwitch;
    public static final DPCNames HotVCfg;
    public static final DPCNames HttpTimeoutParam;
    public static final DPCNames IsEnableVideoExtraction;
    public static final DPCNames KDCfg;
    public static final DPCNames KKFixerConfig;
    public static final DPCNames MsgLengthByBubble;
    public static final DPCNames MultiMsgConfig;
    public static final DPCNames OneyWayDateMsgNotifyCfg;
    public static final DPCNames OneyWayLBSFriendMsgNotifyCfg;
    public static final DPCNames PicPredownloadConfig;
    public static final DPCNames PicPredownloadFlow;
    public static final DPCNames PreUploadVideoConfig;
    public static final DPCNames ProgressVideoDownloadSwitch;
    public static final DPCNames PtvConfig;
    public static final DPCNames RemoveSessionConfig;
    public static final DPCNames RichProReqCfg;
    public static final DPCNames SV658Cfg;
    public static final DPCNames SVideoCfg;
    public static final DPCNames SenseWhereConfig;
    public static final DPCNames ShortVideoHDConfig;
    public static final DPCNames ShortVideoPlayInAIO;
    public static final DPCNames ShortVideoPredownloadValidity;
    public static final DPCNames SilkCfg;
    public static final DPCNames SqlSampleCfg;
    public static final DPCNames StoryCfg;
    public static final DPCNames StreamCfg;
    public static final DPCNames UICfg;
    public static final DPCNames VideoWebsiteList;
    public static final DPCNames WebViewConfig;
    public static final DPCNames WebViewFeature;
    public static final DPCNames aio_config;
    public static final DPCNames aio_eggs;
    public static final DPCNames aio_fastimage;
    public static final DPCNames aio_gifplay;
    public static final DPCNames aio_hongbao;
    public static final DPCNames aio_hotchat_hongbao;
    public static final DPCNames aio_input;
    public static final DPCNames aio_pic_thumb_size;
    public static final DPCNames aio_realtime_bg;
    public static final DPCNames apollo_info;
    public static final DPCNames arMapCfg;
    public static final DPCNames batteryCfg;
    public static final DPCNames chat_font;
    public static final DPCNames chat_multi_forward_switch;
    public static final DPCNames comic_plugin_profile;
    public static final DPCNames crash_control;
    public static final DPCNames disable_dex2oat;
    public static final DPCNames disable_preload_nearby_process;
    public static final DPCNames disable_qzone_kill;
    public static final DPCNames discussion_icon_max_count_4_icon;
    public static final DPCNames dynamic_avatar;
    public static final DPCNames fontCfg;
    public static final DPCNames gameCfg;
    public static final DPCNames gif_decode;
    public static final DPCNames h5magic_support;
    public static final DPCNames hbCfg;
    public static final DPCNames hbCfg2;
    public static final DPCNames headCfg;
    public static final DPCNames headDpcCfg;
    public static final DPCNames health_ban;
    public static final DPCNames homeworkCfg;
    public static final DPCNames hook_switch;
    public static final DPCNames isInversionWhenFaceDetect;
    public static final DPCNames lock_screen;
    public static final DPCNames lock_screen_enterAIO;
    public static final DPCNames ltcfg;
    public static final DPCNames lvcc;
    public static final DPCNames magicface_support;
    public static final DPCNames memory_strategy;
    public static final DPCNames msg_signal_acc;
    public static final DPCNames nearby_react_native_config;
    public static final DPCNames new_memory_strategy;
    public static final DPCNames ocrCfg;
    public static final DPCNames olympic_act_config;
    public static final DPCNames openapi_switch;
    public static final DPCNames pg_switch;
    public static final DPCNames picCompressArgConfig;
    public static final DPCNames pic_presend;
    public static final DPCNames precover;
    public static final DPCNames qavAsyncQuitCfg;
    public static final DPCNames qavDpc;
    public static final DPCNames qavPadOrientationRotateFlag;
    public static final DPCNames qavUseOpenSLESInterface;
    public static final DPCNames qavUseSurface;
    public static final DPCNames qflutterCfg;
    public static final DPCNames qq_audio_play;
    public static final DPCNames qq_audio_record;
    public static final DPCNames qq_process_gm;
    public static final DPCNames qq_thread_config;
    public static final DPCNames qr_process_config;
    public static final DPCNames qrcodeCfg;
    public static final DPCNames search_input_type;
    public static final DPCNames sqlite_monitor_threshold;
    public static final DPCNames struct_msg_global_search;
    public static final DPCNames tbs_switch;
    public static final DPCNames textSelectHandleUseable;
    public static final DPCNames theme_profile;
    public static final DPCNames threadmanager_highWay_swith;
    public static final DPCNames tool_process_profile;
    public static final DPCNames troubleShootCfg;
    public static final DPCNames unified_monitor_params;
    public static final DPCNames use720PCameraPreviewSize;
    public static final DPCNames useRGB2I420ShaderCfg;
    public static final DPCNames vip_individuation;

    static {
        IPatchRedirector redirector = PatchRedirectCenter.getRedirector(37140);
        $redirector_ = redirector;
        if (redirector != null && redirector.hasPatch((short) 2)) {
            redirector.redirect((short) 2);
            return;
        }
        DPCNames dPCNames = new DPCNames("ShortVideoHDConfig", 0);
        ShortVideoHDConfig = dPCNames;
        DPCNames dPCNames2 = new DPCNames("AIOOpenLoadMsgConfig", 1);
        AIOOpenLoadMsgConfig = dPCNames2;
        DPCNames dPCNames3 = new DPCNames("msg_signal_acc", 2);
        msg_signal_acc = dPCNames3;
        DPCNames dPCNames4 = new DPCNames("lock_screen_enterAIO", 3);
        lock_screen_enterAIO = dPCNames4;
        DPCNames dPCNames5 = new DPCNames("aio_fastimage", 4);
        aio_fastimage = dPCNames5;
        DPCNames dPCNames6 = new DPCNames("HttpTimeoutParam", 5);
        HttpTimeoutParam = dPCNames6;
        DPCNames dPCNames7 = new DPCNames("KKFixerConfig", 6);
        KKFixerConfig = dPCNames7;
        DPCNames dPCNames8 = new DPCNames("disable_qzone_kill", 7);
        disable_qzone_kill = dPCNames8;
        DPCNames dPCNames9 = new DPCNames("MsgLengthByBubble", 8);
        MsgLengthByBubble = dPCNames9;
        DPCNames dPCNames10 = new DPCNames("openapi_switch", 9);
        openapi_switch = dPCNames10;
        DPCNames dPCNames11 = new DPCNames("textSelectHandleUseable", 10);
        textSelectHandleUseable = dPCNames11;
        DPCNames dPCNames12 = new DPCNames("struct_msg_global_search", 11);
        struct_msg_global_search = dPCNames12;
        DPCNames dPCNames13 = new DPCNames("health_ban", 12);
        health_ban = dPCNames13;
        DPCNames dPCNames14 = new DPCNames("IsEnableVideoExtraction", 13);
        IsEnableVideoExtraction = dPCNames14;
        DPCNames dPCNames15 = new DPCNames("VideoWebsiteList", 14);
        VideoWebsiteList = dPCNames15;
        DPCNames dPCNames16 = new DPCNames("search_input_type", 15);
        search_input_type = dPCNames16;
        DPCNames dPCNames17 = new DPCNames("disable_preload_nearby_process", 16);
        disable_preload_nearby_process = dPCNames17;
        DPCNames dPCNames18 = new DPCNames("SenseWhereConfig", 17);
        SenseWhereConfig = dPCNames18;
        DPCNames dPCNames19 = new DPCNames("picCompressArgConfig", 18);
        picCompressArgConfig = dPCNames19;
        DPCNames dPCNames20 = new DPCNames("RemoveSessionConfig", 19);
        RemoveSessionConfig = dPCNames20;
        DPCNames dPCNames21 = new DPCNames("FTSSwitch", 20);
        FTSSwitch = dPCNames21;
        DPCNames dPCNames22 = new DPCNames("vip_individuation", 21);
        vip_individuation = dPCNames22;
        DPCNames dPCNames23 = new DPCNames("aio_realtime_bg", 22);
        aio_realtime_bg = dPCNames23;
        DPCNames dPCNames24 = new DPCNames("magicface_support", 23);
        magicface_support = dPCNames24;
        DPCNames dPCNames25 = new DPCNames("h5magic_support", 24);
        h5magic_support = dPCNames25;
        DPCNames dPCNames26 = new DPCNames("chat_font", 25);
        chat_font = dPCNames26;
        DPCNames dPCNames27 = new DPCNames("theme_profile", 26);
        theme_profile = dPCNames27;
        DPCNames dPCNames28 = new DPCNames("discussion_icon_max_count_4_icon", 27);
        discussion_icon_max_count_4_icon = dPCNames28;
        DPCNames dPCNames29 = new DPCNames("chat_multi_forward_switch", 28);
        chat_multi_forward_switch = dPCNames29;
        DPCNames dPCNames30 = new DPCNames("qq_process_gm", 29);
        qq_process_gm = dPCNames30;
        DPCNames dPCNames31 = new DPCNames("qq_audio_record", 30);
        qq_audio_record = dPCNames31;
        DPCNames dPCNames32 = new DPCNames("memory_strategy", 31);
        memory_strategy = dPCNames32;
        DPCNames dPCNames33 = new DPCNames("lock_screen", 32);
        lock_screen = dPCNames33;
        DPCNames dPCNames34 = new DPCNames("aio_input", 33);
        aio_input = dPCNames34;
        DPCNames dPCNames35 = new DPCNames("aio_gifplay", 34);
        aio_gifplay = dPCNames35;
        DPCNames dPCNames36 = new DPCNames("new_memory_strategy", 35);
        new_memory_strategy = dPCNames36;
        DPCNames dPCNames37 = new DPCNames("qq_audio_play", 36);
        qq_audio_play = dPCNames37;
        DPCNames dPCNames38 = new DPCNames("aio_eggs", 37);
        aio_eggs = dPCNames38;
        DPCNames dPCNames39 = new DPCNames("aio_hongbao", 38);
        aio_hongbao = dPCNames39;
        DPCNames dPCNames40 = new DPCNames("aio_hotchat_hongbao", 39);
        aio_hotchat_hongbao = dPCNames40;
        DPCNames dPCNames41 = new DPCNames("pg_switch", 40);
        pg_switch = dPCNames41;
        DPCNames dPCNames42 = new DPCNames("tbs_switch", 41);
        tbs_switch = dPCNames42;
        DPCNames dPCNames43 = new DPCNames("pic_presend", 42);
        pic_presend = dPCNames43;
        DPCNames dPCNames44 = new DPCNames("aio_pic_thumb_size", 43);
        aio_pic_thumb_size = dPCNames44;
        DPCNames dPCNames45 = new DPCNames("unified_monitor_params", 44);
        unified_monitor_params = dPCNames45;
        DPCNames dPCNames46 = new DPCNames("OneyWayDateMsgNotifyCfg", 45);
        OneyWayDateMsgNotifyCfg = dPCNames46;
        DPCNames dPCNames47 = new DPCNames("OneyWayLBSFriendMsgNotifyCfg", 46);
        OneyWayLBSFriendMsgNotifyCfg = dPCNames47;
        DPCNames dPCNames48 = new DPCNames("SilkCfg", 47);
        SilkCfg = dPCNames48;
        DPCNames dPCNames49 = new DPCNames("StreamCfg", 48);
        StreamCfg = dPCNames49;
        DPCNames dPCNames50 = new DPCNames("SqlSampleCfg", 49);
        SqlSampleCfg = dPCNames50;
        DPCNames dPCNames51 = new DPCNames("crash_control", 50);
        crash_control = dPCNames51;
        DPCNames dPCNames52 = new DPCNames("hook_switch", 51);
        hook_switch = dPCNames52;
        DPCNames dPCNames53 = new DPCNames("threadmanager_highWay_swith", 52);
        threadmanager_highWay_swith = dPCNames53;
        DPCNames dPCNames54 = new DPCNames("gif_decode", 53);
        gif_decode = dPCNames54;
        DPCNames dPCNames55 = new DPCNames("RichProReqCfg", 54);
        RichProReqCfg = dPCNames55;
        DPCNames dPCNames56 = new DPCNames("PicPredownloadFlow", 55);
        PicPredownloadFlow = dPCNames56;
        DPCNames dPCNames57 = new DPCNames("PicPredownloadConfig", 56);
        PicPredownloadConfig = dPCNames57;
        DPCNames dPCNames58 = new DPCNames("ShortVideoPredownloadValidity", 57);
        ShortVideoPredownloadValidity = dPCNames58;
        DPCNames dPCNames59 = new DPCNames("SV658Cfg", 58);
        SV658Cfg = dPCNames59;
        DPCNames dPCNames60 = new DPCNames("PtvConfig", 59);
        PtvConfig = dPCNames60;
        DPCNames dPCNames61 = new DPCNames("ShortVideoPlayInAIO", 60);
        ShortVideoPlayInAIO = dPCNames61;
        DPCNames dPCNames62 = new DPCNames("AcceptType", 61);
        AcceptType = dPCNames62;
        DPCNames dPCNames63 = new DPCNames(WebViewFeature.TAG, 62);
        WebViewFeature = dPCNames63;
        DPCNames dPCNames64 = new DPCNames("qr_process_config", 63);
        qr_process_config = dPCNames64;
        DPCNames dPCNames65 = new DPCNames("sqlite_monitor_threshold", 64);
        sqlite_monitor_threshold = dPCNames65;
        DPCNames dPCNames66 = new DPCNames("PreUploadVideoConfig", 65);
        PreUploadVideoConfig = dPCNames66;
        DPCNames dPCNames67 = new DPCNames("BlessPTVEnable", 66);
        BlessPTVEnable = dPCNames67;
        DPCNames dPCNames68 = new DPCNames("apollo_info", 67);
        apollo_info = dPCNames68;
        DPCNames dPCNames69 = new DPCNames("WebViewConfig", 68);
        WebViewConfig = dPCNames69;
        DPCNames dPCNames70 = new DPCNames("ProgressVideoDownloadSwitch", 69);
        ProgressVideoDownloadSwitch = dPCNames70;
        DPCNames dPCNames71 = new DPCNames("aio_config", 70);
        aio_config = dPCNames71;
        DPCNames dPCNames72 = new DPCNames("MultiMsgConfig", 71);
        MultiMsgConfig = dPCNames72;
        DPCNames dPCNames73 = new DPCNames("nearby_react_native_config", 72);
        nearby_react_native_config = dPCNames73;
        DPCNames dPCNames74 = new DPCNames("qq_thread_config", 73);
        qq_thread_config = dPCNames74;
        DPCNames dPCNames75 = new DPCNames("tool_process_profile", 74);
        tool_process_profile = dPCNames75;
        DPCNames dPCNames76 = new DPCNames("comic_plugin_profile", 75);
        comic_plugin_profile = dPCNames76;
        DPCNames dPCNames77 = new DPCNames("olympic_act_config", 76);
        olympic_act_config = dPCNames77;
        DPCNames dPCNames78 = new DPCNames("precover", 77);
        precover = dPCNames78;
        DPCNames dPCNames79 = new DPCNames(QCircleScheme.AttrQQPublish.OPENPERSONALCOVERFEEDPAGE_AVATAR_FROM, 78);
        dynamic_avatar = dPCNames79;
        DPCNames dPCNames80 = new DPCNames("lvcc", 79);
        lvcc = dPCNames80;
        DPCNames dPCNames81 = new DPCNames("UICfg", 80);
        UICfg = dPCNames81;
        DPCNames dPCNames82 = new DPCNames("hbCfg", 81);
        hbCfg = dPCNames82;
        DPCNames dPCNames83 = new DPCNames("hbCfg2", 82);
        hbCfg2 = dPCNames83;
        DPCNames dPCNames84 = new DPCNames("ARMap_switch_config", 83);
        ARMap_switch_config = dPCNames84;
        DPCNames dPCNames85 = new DPCNames("arMapCfg", 84);
        arMapCfg = dPCNames85;
        DPCNames dPCNames86 = new DPCNames("gameCfg", 85);
        gameCfg = dPCNames86;
        DPCNames dPCNames87 = new DPCNames("qrcodeCfg", 86);
        qrcodeCfg = dPCNames87;
        DPCNames dPCNames88 = new DPCNames("headCfg", 87);
        headCfg = dPCNames88;
        DPCNames dPCNames89 = new DPCNames("SVideoCfg", 88);
        SVideoCfg = dPCNames89;
        DPCNames dPCNames90 = new DPCNames("batteryCfg", 89);
        batteryCfg = dPCNames90;
        DPCNames dPCNames91 = new DPCNames("ocrCfg", 90);
        ocrCfg = dPCNames91;
        DPCNames dPCNames92 = new DPCNames("ARCfg", 91);
        ARCfg = dPCNames92;
        DPCNames dPCNames93 = new DPCNames("HotVCfg", 92);
        HotVCfg = dPCNames93;
        DPCNames dPCNames94 = new DPCNames("StoryCfg", 93);
        StoryCfg = dPCNames94;
        DPCNames dPCNames95 = new DPCNames("qavDpc", 94);
        qavDpc = dPCNames95;
        DPCNames dPCNames96 = new DPCNames("KDCfg", 95);
        KDCfg = dPCNames96;
        DPCNames dPCNames97 = new DPCNames("fontCfg", 96);
        fontCfg = dPCNames97;
        DPCNames dPCNames98 = new DPCNames("disable_dex2oat", 97);
        disable_dex2oat = dPCNames98;
        DPCNames dPCNames99 = new DPCNames("AVPanCfg", 98);
        AVPanCfg = dPCNames99;
        DPCNames dPCNames100 = new DPCNames("ltcfg", 99);
        ltcfg = dPCNames100;
        DPCNames dPCNames101 = new DPCNames("qflutterCfg", 100);
        qflutterCfg = dPCNames101;
        DPCNames dPCNames102 = new DPCNames("homeworkCfg", 101);
        homeworkCfg = dPCNames102;
        DPCNames dPCNames103 = new DPCNames("headDpcCfg", 102);
        headDpcCfg = dPCNames103;
        DPCNames dPCNames104 = new DPCNames("useRGB2I420ShaderCfg", 103);
        useRGB2I420ShaderCfg = dPCNames104;
        DPCNames dPCNames105 = new DPCNames("qavAsyncQuitCfg", 104);
        qavAsyncQuitCfg = dPCNames105;
        DPCNames dPCNames106 = new DPCNames("use720PCameraPreviewSize", 105);
        use720PCameraPreviewSize = dPCNames106;
        DPCNames dPCNames107 = new DPCNames("qavUseSurface", 106);
        qavUseSurface = dPCNames107;
        DPCNames dPCNames108 = new DPCNames("qavPadOrientationRotateFlag", 107);
        qavPadOrientationRotateFlag = dPCNames108;
        DPCNames dPCNames109 = new DPCNames("isInversionWhenFaceDetect", 108);
        isInversionWhenFaceDetect = dPCNames109;
        DPCNames dPCNames110 = new DPCNames("troubleShootCfg", 109);
        troubleShootCfg = dPCNames110;
        DPCNames dPCNames111 = new DPCNames("qavUseOpenSLESInterface", 110);
        qavUseOpenSLESInterface = dPCNames111;
        $VALUES = new DPCNames[]{dPCNames, dPCNames2, dPCNames3, dPCNames4, dPCNames5, dPCNames6, dPCNames7, dPCNames8, dPCNames9, dPCNames10, dPCNames11, dPCNames12, dPCNames13, dPCNames14, dPCNames15, dPCNames16, dPCNames17, dPCNames18, dPCNames19, dPCNames20, dPCNames21, dPCNames22, dPCNames23, dPCNames24, dPCNames25, dPCNames26, dPCNames27, dPCNames28, dPCNames29, dPCNames30, dPCNames31, dPCNames32, dPCNames33, dPCNames34, dPCNames35, dPCNames36, dPCNames37, dPCNames38, dPCNames39, dPCNames40, dPCNames41, dPCNames42, dPCNames43, dPCNames44, dPCNames45, dPCNames46, dPCNames47, dPCNames48, dPCNames49, dPCNames50, dPCNames51, dPCNames52, dPCNames53, dPCNames54, dPCNames55, dPCNames56, dPCNames57, dPCNames58, dPCNames59, dPCNames60, dPCNames61, dPCNames62, dPCNames63, dPCNames64, dPCNames65, dPCNames66, dPCNames67, dPCNames68, dPCNames69, dPCNames70, dPCNames71, dPCNames72, dPCNames73, dPCNames74, dPCNames75, dPCNames76, dPCNames77, dPCNames78, dPCNames79, dPCNames80, dPCNames81, dPCNames82, dPCNames83, dPCNames84, dPCNames85, dPCNames86, dPCNames87, dPCNames88, dPCNames89, dPCNames90, dPCNames91, dPCNames92, dPCNames93, dPCNames94, dPCNames95, dPCNames96, dPCNames97, dPCNames98, dPCNames99, dPCNames100, dPCNames101, dPCNames102, dPCNames103, dPCNames104, dPCNames105, dPCNames106, dPCNames107, dPCNames108, dPCNames109, dPCNames110, dPCNames111};
    }

    DPCNames(String str, int i3) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 1)) {
            iPatchRedirector.redirect((short) 1, (Object) this, (Object) str, i3);
        }
    }

    public static DPCNames valueOf(String str) {
        return (DPCNames) Enum.valueOf(DPCNames.class, str);
    }

    public static DPCNames[] values() {
        return (DPCNames[]) $VALUES.clone();
    }
}
