package com.tencent.ams.fusion.widget.double11shake;

import android.graphics.Bitmap;
import android.graphics.drawable.Drawable;
import com.tencent.ams.fusion.widget.animatorview.animator.Animator;
import com.tencent.ams.fusion.widget.animatorview.animator.KeepAnimator;
import com.tencent.ams.fusion.widget.animatorview.animator.RotationAnimator;
import com.tencent.ams.fusion.widget.animatorview.animator.ScaleAnimator;
import com.tencent.ams.fusion.widget.animatorview.animator.SequentialAnimator;
import com.tencent.ams.fusion.widget.animatorview.layer.AnimatorLayer;
import com.tencent.ams.fusion.widget.animatorview.layer.BitmapLayer;
import com.tencent.ams.fusion.widget.animatorview.layer.DrawableLayer;
import com.tencent.ams.fusion.widget.utils.Utils;
import com.tencent.mobileqq.qfix.redirect.IPatchRedirector;

/* compiled from: P */
/* loaded from: classes3.dex */
public class DoubleElevenShakeAnimationHelper {
    static IPatchRedirector $redirector_ = null;
    private static final float ICON_ROTATION_MARGIN_BOTTOM_DP = 16.0f;
    private static final float ICON_ROTATION_MARGIN_RIGHT_DP = 5.0f;
    private static final float ICON_SHAKE_CENTER_BOTTOM_PADDING = 4.5f;
    private static final int SHAKE_ANIMATOR_REPEAT_INTERVAL_TIME = 400;
    public static final String SHAKE_ICON_BASE64 = "";

    /* compiled from: P */
    /* loaded from: classes3.dex */
    public static class IconParams {
        static IPatchRedirector $redirector_;
        private float iconHeight;
        private float iconWidth;
        private float iconX;
        private float iconY;
        private float iconZoomFactor;

        public IconParams(float f16, float f17, float f18, float f19, float f26) {
            IPatchRedirector iPatchRedirector = $redirector_;
            if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 1)) {
                iPatchRedirector.redirect((short) 1, this, Float.valueOf(f16), Float.valueOf(f17), Float.valueOf(f18), Float.valueOf(f19), Float.valueOf(f26));
                return;
            }
            this.iconX = f16;
            this.iconY = f17;
            this.iconWidth = f18;
            this.iconHeight = f19;
            this.iconZoomFactor = f26;
        }
    }

    public DoubleElevenShakeAnimationHelper() {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 1)) {
            iPatchRedirector.redirect((short) 1, (Object) this);
        }
    }

    private static RotationAnimator createStep1Animator(AnimatorLayer animatorLayer, IconParams iconParams) {
        return createStepAnimator(animatorLayer, iconParams, 0.0f, 15.0f, 200L, 0.37f, -0.16f, 0.54f, 1.0f);
    }

    private static RotationAnimator createStep2Animator(AnimatorLayer animatorLayer, IconParams iconParams) {
        return createStepAnimator(animatorLayer, iconParams, 15.0f, -15.0f, 160L, 0.33f, 0.0f, 0.67f, 1.0f);
    }

    private static RotationAnimator createStep3Animator(AnimatorLayer animatorLayer, IconParams iconParams) {
        return createStepAnimator(animatorLayer, iconParams, -15.0f, 15.0f, 200L, 0.33f, 0.0f, 0.67f, 1.0f);
    }

    private static RotationAnimator createStep4Animator(AnimatorLayer animatorLayer, IconParams iconParams) {
        return createStepAnimator(animatorLayer, iconParams, 15.0f, -15.0f, 160L, 0.33f, 0.0f, 0.67f, 1.0f);
    }

    private static RotationAnimator createStep5Animator(AnimatorLayer animatorLayer, IconParams iconParams) {
        return createStepAnimator(animatorLayer, iconParams, -15.0f, 15.0f, 200L, 0.33f, 0.0f, 0.67f, 1.0f);
    }

    private static RotationAnimator createStep6Animator(AnimatorLayer animatorLayer, IconParams iconParams) {
        return createStepAnimator(animatorLayer, iconParams, 15.0f, 0.0f, 160L, 0.33f, 0.0f, 0.67f, 1.0f);
    }

    private static RotationAnimator createStepAnimator(AnimatorLayer animatorLayer, IconParams iconParams, float f16, float f17, long j3, float f18, float f19, float f26, float f27) {
        RotationAnimator rotationAnimator = new RotationAnimator(animatorLayer);
        rotationAnimator.setRotationDegrees(f16, f17).setDuration(j3).setRepeatCount(1);
        rotationAnimator.setPathInterpolator(f18, f19, f26, f27);
        return rotationAnimator;
    }

    private static Animator createTypeBreathingAnimator(AnimatorLayer animatorLayer, IconParams iconParams, Animator.AnimatorListener animatorListener) {
        SequentialAnimator sequentialAnimator = new SequentialAnimator(animatorLayer);
        sequentialAnimator.setAnimatorListener(animatorListener);
        ScaleAnimator scaleAnimator = new ScaleAnimator(animatorLayer, 0.83f, 1.0f, 0.83f, 1.0f);
        scaleAnimator.setPathInterpolator(0.33f, 0.0f, 0.67f, 1.0f);
        scaleAnimator.setDuration(380L);
        ScaleAnimator scaleAnimator2 = new ScaleAnimator(animatorLayer, 1.0f, 0.83f, 1.0f, 0.83f);
        scaleAnimator2.setPathInterpolator(0.33f, 0.0f, 0.67f, 1.0f);
        scaleAnimator2.setDuration(420L);
        sequentialAnimator.addAnimator(scaleAnimator);
        sequentialAnimator.addAnimator(scaleAnimator2);
        sequentialAnimator.setRepeatCount(0);
        sequentialAnimator.setRepeatInterval(80L);
        sequentialAnimator.setRepeatMode(1);
        return sequentialAnimator;
    }

    private static Animator createTypeShakeAnimator(AnimatorLayer animatorLayer, IconParams iconParams, Animator.AnimatorListener animatorListener) {
        SequentialAnimator sequentialAnimator = new SequentialAnimator(animatorLayer);
        sequentialAnimator.setAnimatorListener(animatorListener);
        sequentialAnimator.addAnimator(createStep1Animator(animatorLayer, iconParams));
        sequentialAnimator.addAnimator(createStep2Animator(animatorLayer, iconParams));
        sequentialAnimator.addAnimator(createStep3Animator(animatorLayer, iconParams));
        sequentialAnimator.addAnimator(createStep4Animator(animatorLayer, iconParams));
        sequentialAnimator.addAnimator(createStep5Animator(animatorLayer, iconParams));
        sequentialAnimator.addAnimator(createStep6Animator(animatorLayer, iconParams));
        sequentialAnimator.setRepeatCount(0);
        sequentialAnimator.setRepeatInterval(400L);
        sequentialAnimator.setRepeatMode(1);
        return sequentialAnimator;
    }

    public static AnimatorLayer getShakeIconAnimatorLayer(Bitmap bitmap, int i3, IconParams iconParams, Animator.AnimatorListener animatorListener) {
        if (bitmap == null || iconParams == null) {
            return null;
        }
        AnimatorLayer height = new BitmapLayer(bitmap).setX(iconParams.iconX).setY(iconParams.iconY).setWidth((int) iconParams.iconWidth).setHeight((int) iconParams.iconHeight);
        if (i3 == 3) {
            height.setAnimator(createTypeShakeAnimator(height, iconParams, animatorListener));
            float f16 = iconParams.iconX + (iconParams.iconWidth / 2.0f);
            float dp2px = (iconParams.iconY + iconParams.iconHeight) - Utils.dp2px(iconParams.iconZoomFactor * ICON_SHAKE_CENTER_BOTTOM_PADDING);
            height.setPx(f16);
            height.setPy(dp2px);
        } else if (i3 == 2) {
            height.setAnimator(createTypeBreathingAnimator(height, iconParams, animatorListener));
        } else {
            height.setAnimator(new KeepAnimator(height));
        }
        return height;
    }

    public static AnimatorLayer getShakeIconAnimatorLayer(Drawable drawable, int i3, IconParams iconParams, Animator.AnimatorListener animatorListener) {
        if (drawable == null || iconParams == null) {
            return null;
        }
        AnimatorLayer height = new DrawableLayer(drawable).setX(iconParams.iconX).setY(iconParams.iconY).setWidth((int) iconParams.iconWidth).setHeight((int) iconParams.iconHeight);
        if (i3 == 3) {
            height.setAnimator(createTypeShakeAnimator(height, iconParams, animatorListener));
        } else if (i3 == 2) {
            height.setAnimator(createTypeBreathingAnimator(height, iconParams, animatorListener));
        } else {
            height.setAnimator(new KeepAnimator(height));
        }
        return height;
    }
}
