package com.tencent.ams.adcore.mma.util;

import android.content.Context;
import android.text.TextUtils;
import android.util.Base64;
import com.qq.e.comm.plugin.k.ac;
import com.qq.e.comm.plugin.stat.StatTracer;
import com.qq.e.comm.plugin.stat.b;
import com.qq.e.comm.util.GDTLogger;
import com.tencent.ams.adcore.mma.api.Global;
import com.tencent.ams.adcore.mma.bean.Company;
import com.tencent.ams.adcore.mma.bean.SDK;
import com.tencent.ams.adcore.utility.SLog;
import com.tencent.mobileqq.qfix.redirect.IPatchRedirector;
import com.tencent.mobileqq.qfix.redirect.PatchRedirectCenter;
import com.tencent.mobileqq.tianshu.data.BusinessInfoCheckUpdateItem;
import java.io.BufferedReader;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.List;

/* compiled from: P */
/* loaded from: classes3.dex */
public class SdkConfigUpdateUtil {
    static IPatchRedirector $redirector_ = null;
    private static final String TAG = "SdkConfigUpdateUtil";
    private static SDK sdk;

    static {
        IPatchRedirector redirector = PatchRedirectCenter.getRedirector(55801);
        $redirector_ = redirector;
        if (redirector != null && redirector.hasPatch((short) 2)) {
            redirector.redirect((short) 2);
        } else {
            sdk = null;
        }
    }

    public SdkConfigUpdateUtil() {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 1)) {
            iPatchRedirector.redirect((short) 1, (Object) this);
        }
    }

    public static SDK dealUpdateConfig(Context context, String str) {
        List<Company> list;
        SDK sdk2 = null;
        if (TextUtils.isEmpty(str)) {
            return null;
        }
        String configFromNetWork = getConfigFromNetWork(str);
        if (configFromNetWork != null) {
            try {
                sdk2 = XmlUtil.doParser(new ByteArrayInputStream(configFromNetWork.getBytes("UTF-8")));
                if (sdk2 != null && (list = sdk2.companies) != null && list.size() > 0) {
                    SharedPreferencedUtil.putLong(context, SharedPreferencedUtil.SP_NAME_OTHER, SharedPreferencedUtil.SP_OTHER_KEY_UPDATE_TIME, System.currentTimeMillis());
                    SharedPreferencedUtil.putString(context, SharedPreferencedUtil.SP_NAME_CONFIG, SharedPreferencedUtil.SP_CONFIG_KEY_FILE, configFromNetWork);
                    SLog.d("mma_\u7f51\u7edc\u66f4\u65b0sdkconfig.xml\u6210\u529f");
                }
            } catch (UnsupportedEncodingException e16) {
                SLog.e(TAG, "mma_\u7f51\u7edc\u66f4\u65b0sdkconfig.xml\u5931\u8d25", e16);
            }
        }
        return sdk2;
    }

    /* JADX WARN: Code restructure failed: missing block: B:14:?, code lost:
    
        throw null;
     */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    private static String getConfigFromNetWork(String str) {
        if (str == null) {
            return null;
        }
        try {
            HttpURLConnection httpURLConnection = (HttpURLConnection) new URL(str).openConnection();
            httpURLConnection.setInstanceFollowRedirects(true);
            httpURLConnection.setConnectTimeout(10000);
            InputStream inputStream = ac.a(httpURLConnection).getInputStream();
            BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream));
            StringBuffer stringBuffer = new StringBuffer();
            while (true) {
                String readLine = bufferedReader.readLine();
                if (readLine != null) {
                    stringBuffer.append(readLine);
                } else {
                    inputStream.close();
                    return stringBuffer.toString();
                }
            }
        } catch (MalformedURLException | IOException unused) {
            return null;
        } catch (Exception unused2) {
            throw null;
        }
    }

    public static SDK getNewestSDK(Context context, String str) {
        SDK dealUpdateConfig;
        List<Company> list;
        if (judgeUpdateAccordingDate(context) && (dealUpdateConfig = dealUpdateConfig(context, str)) != null && (list = dealUpdateConfig.companies) != null && list.size() > 0) {
            return dealUpdateConfig;
        }
        return null;
    }

    public static SDK getSDKFromPreferences(Context context) {
        try {
            String string = SharedPreferencedUtil.getString(context, SharedPreferencedUtil.SP_NAME_CONFIG, SharedPreferencedUtil.SP_CONFIG_KEY_FILE);
            if (string == null) {
                return null;
            }
            return XmlUtil.doParser(new ByteArrayInputStream(string.getBytes()));
        } catch (Exception unused) {
            return null;
        }
    }

    public static SDK getSdk() {
        return sdk;
    }

    public static void initCachedSdk(Context context) {
        List<Company> list;
        List<Company> list2;
        SDK sDKFromPreferences = getSDKFromPreferences(context);
        if (sDKFromPreferences == null || (list2 = sDKFromPreferences.companies) == null || list2.size() == 0) {
            byte[] decode = Base64.decode("", 0);
            if (GDTLogger.isEnableConsoleLog()) {
                try {
                    SLog.d("ad_mma_sdkconfig.xml : " + new String(decode, "UTF-8"));
                } catch (UnsupportedEncodingException e16) {
                    e16.printStackTrace();
                }
            }
            sDKFromPreferences = XmlUtil.doParser(new ByteArrayInputStream(decode));
            if (sDKFromPreferences == null || (list = sDKFromPreferences.companies) == null || list.size() <= 0) {
                StatTracer.trackEvent(BusinessInfoCheckUpdateItem.UIAPPID_LEBA_NEARBY_TROOPS_RECOMD, 0, (b) null);
            }
        }
        setSdk(sDKFromPreferences);
        sdk = sDKFromPreferences;
    }

    private static boolean judgeUpdateAccordingDate(Context context) {
        boolean z16;
        boolean z17;
        long currentTimeMillis = System.currentTimeMillis();
        long j3 = SharedPreferencedUtil.getLong(context, SharedPreferencedUtil.SP_NAME_OTHER, SharedPreferencedUtil.SP_OTHER_KEY_UPDATE_TIME);
        SLog.d("mma_config lastUpdateTimeStamp:" + j3);
        boolean z18 = true;
        if (CommonUtil.isWifiConnected(context) && currentTimeMillis - j3 >= 7200000) {
            z16 = true;
        } else {
            z16 = false;
        }
        if (CommonUtil.isMobileConnected(context) && currentTimeMillis - j3 >= 21600000) {
            z17 = true;
        } else {
            z17 = false;
        }
        if (!z16 && !z17) {
            z18 = false;
        }
        SLog.d("mma_config File need Update\uff1a" + z18);
        return z18;
    }

    private static void setSdk(SDK sdk2) {
        SLog.d("mma_setSdk");
        if (sdk2 != null) {
            try {
                String str = sdk2.offlineCache.length;
                if (str != null && !"".equals(str)) {
                    Global.OFFLINECACHE_LENGTH = Integer.parseInt(sdk2.offlineCache.length);
                }
                String str2 = sdk2.offlineCache.queueExpirationSecs;
                if (str2 != null && !"".equals(str2)) {
                    Global.OFFLINECACHE_QUEUEEXPIRATIONSECS = Integer.parseInt(sdk2.offlineCache.queueExpirationSecs);
                }
                String str3 = sdk2.offlineCache.timeout;
                if (str3 != null && !"".equals(str3)) {
                    Global.OFFLINECACHE_TIMEOUT = Integer.parseInt(sdk2.offlineCache.timeout);
                }
            } catch (Exception e16) {
                SLog.e(TAG, "\u8bbe\u7f6eSDK\u5931\u8d25:", e16);
            }
        }
    }

    public static void updateSdk(Context context, String str) {
        SDK newestSDK = getNewestSDK(context, str);
        if (newestSDK != null) {
            sdk = newestSDK;
            setSdk(newestSDK);
        }
    }
}
