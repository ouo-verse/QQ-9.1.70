package com.tencent.qqmini.sdk.core.generated;

import com.tencent.mobileqq.mini.appbrand.jsapi.PluginConst;
import com.tencent.qqmini.minigame.manager.GameInfoManager;
import com.tencent.qqmini.minigame.plugins.AudioRecorderJsPlugin;
import com.tencent.qqmini.minigame.plugins.AudioVolumeJsPlugin;
import com.tencent.qqmini.minigame.plugins.BlockAdPlugin;
import com.tencent.qqmini.minigame.plugins.CustomButtonPlugin;
import com.tencent.qqmini.minigame.plugins.GameDataJsPlugin;
import com.tencent.qqmini.minigame.plugins.GameFileJsPlugin;
import com.tencent.qqmini.minigame.plugins.GameGroupJsPlugin;
import com.tencent.qqmini.minigame.plugins.GameInfoJsPlugin;
import com.tencent.qqmini.minigame.plugins.GameNavigationJsPlugin;
import com.tencent.qqmini.minigame.plugins.GameSystemInfoPlugin;
import com.tencent.qqmini.minigame.plugins.ImmersiveJsPlugin;
import com.tencent.qqmini.minigame.plugins.LifecycleJsPlugin;
import com.tencent.qqmini.minigame.plugins.MemoryJsPlugin;
import com.tencent.qqmini.minigame.plugins.OrientationJsPlugin;
import com.tencent.qqmini.minigame.plugins.ProfileJsPlugin;
import com.tencent.qqmini.minigame.plugins.RaffleJsPlugin;
import com.tencent.qqmini.minigame.plugins.UpdateManagerJsPlugin;
import com.tencent.qqmini.minigame.plugins.VideoJsPlugin;
import com.tencent.qqmini.minigame.plugins.WebRtcJSPlugin;
import com.tencent.qqmini.minigame.plugins.YunGameJSPlugin;
import com.tencent.qqmini.minigame.plugins.a;
import com.tencent.qqmini.minigame.plugins.b;
import com.tencent.qqmini.minigame.plugins.c;
import com.tencent.qqmini.minigame.plugins.d;
import com.tencent.qqmini.sdk.utils.MiniSDKConst;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/* loaded from: classes23.dex */
public final class GameJsPluginScope {
    public static final Map EVENT_HANDLERS;
    public static final List PRELOAD_PLUGINS;

    static {
        ArrayList arrayList = new ArrayList();
        PRELOAD_PLUGINS = arrayList;
        HashMap hashMap = new HashMap();
        EVENT_HANDLERS = hashMap;
        arrayList.add(ProfileJsPlugin.class);
        arrayList.add(LifecycleJsPlugin.class);
        arrayList.add(OrientationJsPlugin.class);
        arrayList.add(UpdateManagerJsPlugin.class);
        hashMap.put("subscribePublicAccount", d.class);
        hashMap.put("getSystemInfo", GameSystemInfoPlugin.class);
        hashMap.put("getSystemInfoSync", GameSystemInfoPlugin.class);
        hashMap.put("downloadWithCache", GameFileJsPlugin.class);
        hashMap.put("loadSubpackageFile", GameFileJsPlugin.class);
        hashMap.put(BlockAdPlugin.API_AD_CREATE_BLOCK_AD, BlockAdPlugin.class);
        hashMap.put(BlockAdPlugin.API_AD_OPERATE_BLOCK_AD, BlockAdPlugin.class);
        hashMap.put(BlockAdPlugin.API_AD_UPDATE_BLOCK_AD, BlockAdPlugin.class);
        hashMap.put(ImmersiveJsPlugin.API_SET_STATUS_BAR_STYLE, ImmersiveJsPlugin.class);
        hashMap.put("setMenuStyle", ImmersiveJsPlugin.class);
        hashMap.put("initYunGame", YunGameJSPlugin.class);
        hashMap.put("startYunGame", YunGameJSPlugin.class);
        hashMap.put("stopYunGame", YunGameJSPlugin.class);
        hashMap.put("restartYunGame", YunGameJSPlugin.class);
        hashMap.put("setResolution", YunGameJSPlugin.class);
        hashMap.put("sendYunGameMessage", YunGameJSPlugin.class);
        hashMap.put("setKeepAlive", YunGameJSPlugin.class);
        hashMap.put("getRecorderManager", AudioRecorderJsPlugin.class);
        hashMap.put("operateRecorder", AudioRecorderJsPlugin.class);
        hashMap.put("openFeedbackPage", a.class);
        hashMap.put(UpdateManagerJsPlugin.NATIVE_EVENT_NAME_GET_UPDATE_MANAGER, UpdateManagerJsPlugin.class);
        hashMap.put(UpdateManagerJsPlugin.NATIVE_EVENT_NAME_ON_UPDATE_CHECK_RESULT, UpdateManagerJsPlugin.class);
        hashMap.put(UpdateManagerJsPlugin.NATIVE_EVENT_NAME_ON_UPDATE_DOWNLOAD_RESULT, UpdateManagerJsPlugin.class);
        hashMap.put("updateApp", UpdateManagerJsPlugin.class);
        hashMap.put("notifyGameCanPlay", c.class);
        hashMap.put("startLoadingCheck", c.class);
        hashMap.put("onGameFixRegister", c.class);
        hashMap.put("onPrivacyShow", c.class);
        hashMap.put("onPrivacyClickAgree", c.class);
        hashMap.put("onPrivacyClickReject", c.class);
        hashMap.put("onPrivacyHasAgreed", c.class);
        hashMap.put("onCreatedRole", c.class);
        hashMap.put("reportEvent", c.class);
        hashMap.put("doGameBoxTask", b.class);
        hashMap.put("createGameBoxTask", b.class);
        hashMap.put("onAppEnterForeground", LifecycleJsPlugin.class);
        hashMap.put("onAppEnterBackground", LifecycleJsPlugin.class);
        hashMap.put(GameInfoManager.GAME_STOP, LifecycleJsPlugin.class);
        hashMap.put("getWindowInfo", GameInfoJsPlugin.class);
        hashMap.put("getAppBaseInfo", GameInfoJsPlugin.class);
        hashMap.put("getDeviceInfo", GameInfoJsPlugin.class);
        hashMap.put("registerProfile", ProfileJsPlugin.class);
        hashMap.put("timePerformanceResult", ProfileJsPlugin.class);
        hashMap.put("operateCustomButton", CustomButtonPlugin.class);
        hashMap.put("insertVideoPlayer", VideoJsPlugin.class);
        hashMap.put("updateVideoPlayer", VideoJsPlugin.class);
        hashMap.put("operateVideoPlayer", VideoJsPlugin.class);
        hashMap.put("removeVideoPlayer", VideoJsPlugin.class);
        hashMap.put(MiniSDKConst.ON_APP_LOW_MEMORY, MemoryJsPlugin.class);
        hashMap.put("onAudioVolumeChange", AudioVolumeJsPlugin.class);
        hashMap.put("getLaunchOptionsSync", GameDataJsPlugin.class);
        hashMap.put("recordOffLineResourceState", GameDataJsPlugin.class);
        hashMap.put("navigateToMiniProgramConfig", GameDataJsPlugin.class);
        hashMap.put(PluginConst.DataJsPluginConst.API_GET_USERINFO_OPENDATA, GameDataJsPlugin.class);
        hashMap.put("initWebRTCEnv", WebRtcJSPlugin.class);
        hashMap.put(com.tencent.luggage.wxa.jh.d.NAME, WebRtcJSPlugin.class);
        hashMap.put("operateWebRTC", WebRtcJSPlugin.class);
        hashMap.put("receiveRTCGameMessage", WebRtcJSPlugin.class);
        hashMap.put("joinGroupByTags", GameGroupJsPlugin.class);
        hashMap.put("restartMiniProgram", GameNavigationJsPlugin.class);
        hashMap.put(RaffleJsPlugin.EVENT_START_RAFFLE, RaffleJsPlugin.class);
        hashMap.put(RaffleJsPlugin.EVENT_ON_SHARE_SUC_NOTICE, RaffleJsPlugin.class);
    }
}
