package com.tencent.qqnt.kernel.api.impl;

import com.heytap.databaseengine.model.UserInfo;
import com.tencent.hippy.qq.api.TabPreloadItem;
import com.tencent.mobileqq.activity.QQBrowserActivity;
import com.tencent.mobileqq.emoticonview.ipc.proxy.EmojiManagerServiceProxy;
import com.tencent.mobileqq.icgame.api.room.PreloadTRTCPlayerParams;
import com.tencent.mobileqq.mini.out.nativePlugins.SmsPlugin;
import com.tencent.mobileqq.mini.servlet.MiniAppGetGameTaskTicketServlet;
import com.tencent.mobileqq.msf.core.NetConnInfoCenter;
import com.tencent.mobileqq.qcircle.api.constant.QCircleScheme;
import com.tencent.mobileqq.qfix.redirect.IPatchRedirector;
import com.tencent.mobileqq.qfix.redirect.PatchRedirectCenter;
import com.tencent.mobileqq.qqpermission.QQPermissionConstants;
import com.tencent.mobileqq.qroute.QRoute;
import com.tencent.mobileqq.shortvideo.gesture.DownloadInfo;
import com.tencent.qphone.base.util.QLog;
import com.tencent.qqnt.kernel.api.AIOSendMsgResultData;
import com.tencent.qqnt.kernel.api.IKernelService;
import com.tencent.qqnt.kernel.api.IKernelSetter;
import com.tencent.qqnt.kernel.api.impl.MsgService;
import com.tencent.qqnt.kernel.internel.KLog;
import com.tencent.qqnt.kernel.nativeinterface.AddLocalRecordMsgParams;
import com.tencent.qqnt.kernel.nativeinterface.AttaReportData;
import com.tencent.qqnt.kernel.nativeinterface.BackGroundInfo;
import com.tencent.qqnt.kernel.nativeinterface.ContactMsgBoxInfo;
import com.tencent.qqnt.kernel.nativeinterface.CustomWithdrawConfig;
import com.tencent.qqnt.kernel.nativeinterface.DataMigrationMsgInfo;
import com.tencent.qqnt.kernel.nativeinterface.DataMigrationResourceInfo;
import com.tencent.qqnt.kernel.nativeinterface.DelMarketEmojiTabReq;
import com.tencent.qqnt.kernel.nativeinterface.DevInfo;
import com.tencent.qqnt.kernel.nativeinterface.DownloadRelateEmojiResultInfo;
import com.tencent.qqnt.kernel.nativeinterface.EmojiHotPicGetHotWordsReqBody;
import com.tencent.qqnt.kernel.nativeinterface.EmojiHotPicGetJumpInfoReqBody;
import com.tencent.qqnt.kernel.nativeinterface.EmojiHotPicSearchReqBody;
import com.tencent.qqnt.kernel.nativeinterface.EmojiNotifyInfo;
import com.tencent.qqnt.kernel.nativeinterface.EmojiResourceInfo;
import com.tencent.qqnt.kernel.nativeinterface.EnterOrExitAioInfo;
import com.tencent.qqnt.kernel.nativeinterface.FeedBackDataForMsg;
import com.tencent.qqnt.kernel.nativeinterface.FeedBackMsgInfo;
import com.tencent.qqnt.kernel.nativeinterface.FetchBottomEmojiTableListReq;
import com.tencent.qqnt.kernel.nativeinterface.FileTransNotifyInfo;
import com.tencent.qqnt.kernel.nativeinterface.GetArgMsgConfigReqInfo;
import com.tencent.qqnt.kernel.nativeinterface.GetArkToMarkdownMsgTemplateReqInfo;
import com.tencent.qqnt.kernel.nativeinterface.GetMsgsAndStatusRecord;
import com.tencent.qqnt.kernel.nativeinterface.GroupAnonymousInfo;
import com.tencent.qqnt.kernel.nativeinterface.GroupFileListResult;
import com.tencent.qqnt.kernel.nativeinterface.GroupItem;
import com.tencent.qqnt.kernel.nativeinterface.HitRelatedEmojiWordsResult;
import com.tencent.qqnt.kernel.nativeinterface.IAddJsonGrayTipMsgCallback;
import com.tencent.qqnt.kernel.nativeinterface.ICanImportCallback;
import com.tencent.qqnt.kernel.nativeinterface.IClearMsgRecordsCallback;
import com.tencent.qqnt.kernel.nativeinterface.IClickInlineKeyboardButtonCallback;
import com.tencent.qqnt.kernel.nativeinterface.IDataImportTableNamesCallback;
import com.tencent.qqnt.kernel.nativeinterface.IDataMigrationGetAvailableContactListCallback;
import com.tencent.qqnt.kernel.nativeinterface.IDataMigrationGetMsgListCalback;
import com.tencent.qqnt.kernel.nativeinterface.IDelMarketEmojiTableCallback;
import com.tencent.qqnt.kernel.nativeinterface.IEmojiGetHotPicHotWordsResultCallback;
import com.tencent.qqnt.kernel.nativeinterface.IEmojiGetHotPicSearchResultCallback;
import com.tencent.qqnt.kernel.nativeinterface.IEmojiHotPicGetJumpInfoResultCallback;
import com.tencent.qqnt.kernel.nativeinterface.IFetchBottomEmojiTableListCallback;
import com.tencent.qqnt.kernel.nativeinterface.IForwardOperateCallback;
import com.tencent.qqnt.kernel.nativeinterface.IGetAioFirstViewLatestMsgCallback;
import com.tencent.qqnt.kernel.nativeinterface.IGetArkMsgConfigCallback;
import com.tencent.qqnt.kernel.nativeinterface.IGetArkToMarkdownMsgTemplateCallback;
import com.tencent.qqnt.kernel.nativeinterface.IGetDraftOperateCallback;
import com.tencent.qqnt.kernel.nativeinterface.IGetHotPicInfoListCallback;
import com.tencent.qqnt.kernel.nativeinterface.IGetMarketEmoticonEncryptKeysCallback;
import com.tencent.qqnt.kernel.nativeinterface.IGetMiscDataCallback;
import com.tencent.qqnt.kernel.nativeinterface.IGetMsgAbstractsCallback;
import com.tencent.qqnt.kernel.nativeinterface.IGetMsgEmojiLikesListCallback;
import com.tencent.qqnt.kernel.nativeinterface.IGetMsgSeqCallback;
import com.tencent.qqnt.kernel.nativeinterface.IGetMsgWithStatusCallback;
import com.tencent.qqnt.kernel.nativeinterface.IGetMsgsBoxesCallback;
import com.tencent.qqnt.kernel.nativeinterface.IGetMultiMsgCallback;
import com.tencent.qqnt.kernel.nativeinterface.IGetRecentUseEmojiListCallback;
import com.tencent.qqnt.kernel.nativeinterface.IGetTempChatInfoCallback;
import com.tencent.qqnt.kernel.nativeinterface.IJoinDragonGroupCallback;
import com.tencent.qqnt.kernel.nativeinterface.IKernelMsgImportToolListener;
import com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener;
import com.tencent.qqnt.kernel.nativeinterface.IKernelMsgService;
import com.tencent.qqnt.kernel.nativeinterface.IModifyBottomEmojiTableSwitchStatusCallback;
import com.tencent.qqnt.kernel.nativeinterface.IMoveBottomEmojiTableCallback;
import com.tencent.qqnt.kernel.nativeinterface.IMsgOperateCallback;
import com.tencent.qqnt.kernel.nativeinterface.IMsgsRspOperateCallback;
import com.tencent.qqnt.kernel.nativeinterface.IOperateCallback;
import com.tencent.qqnt.kernel.nativeinterface.IOperateHiddenSessionCallback;
import com.tencent.qqnt.kernel.nativeinterface.IQueryCalendarCallback;
import com.tencent.qqnt.kernel.nativeinterface.IQueryFirstRoamMsgCallback;
import com.tencent.qqnt.kernel.nativeinterface.IQueryMsgsAndAbstractsWithFilterCallback;
import com.tencent.qqnt.kernel.nativeinterface.IRenameAnonymousChatNickCallback;
import com.tencent.qqnt.kernel.nativeinterface.IReplyMsgWithSourceMsgInfoCallback;
import com.tencent.qqnt.kernel.nativeinterface.ISetMsgEmojiLikesCallback;
import com.tencent.qqnt.kernel.nativeinterface.ISetMsgEmojiLikesForRoleCallback;
import com.tencent.qqnt.kernel.nativeinterface.ISwitchAnonymousChatCallback;
import com.tencent.qqnt.kernel.nativeinterface.ITaskFinishCallback;
import com.tencent.qqnt.kernel.nativeinterface.ITempChatSigListener;
import com.tencent.qqnt.kernel.nativeinterface.ImportOldDbMsgNotifyInfo;
import com.tencent.qqnt.kernel.nativeinterface.InlineKeyboardClickInfo;
import com.tencent.qqnt.kernel.nativeinterface.InputStatusInfo;
import com.tencent.qqnt.kernel.nativeinterface.JoinDragonGroupEmojiReq;
import com.tencent.qqnt.kernel.nativeinterface.JsonGrayMsgInfo;
import com.tencent.qqnt.kernel.nativeinterface.KickedInfo;
import com.tencent.qqnt.kernel.nativeinterface.LocalAVRecordElement;
import com.tencent.qqnt.kernel.nativeinterface.MiscData;
import com.tencent.qqnt.kernel.nativeinterface.MiscKeyInfo;
import com.tencent.qqnt.kernel.nativeinterface.ModifyBottomEmojiTableSwitchStatusReq;
import com.tencent.qqnt.kernel.nativeinterface.MoveBottomEmojiTableReq;
import com.tencent.qqnt.kernel.nativeinterface.MsgAttributeInfo;
import com.tencent.qqnt.kernel.nativeinterface.MsgElement;
import com.tencent.qqnt.kernel.nativeinterface.MsgRecord;
import com.tencent.qqnt.kernel.nativeinterface.MsgSetting;
import com.tencent.qqnt.kernel.nativeinterface.MsgTypeFilter;
import com.tencent.qqnt.kernel.nativeinterface.MsgsReq;
import com.tencent.qqnt.kernel.nativeinterface.MsgsRsp;
import com.tencent.qqnt.kernel.nativeinterface.MultiMsgInfo;
import com.tencent.qqnt.kernel.nativeinterface.PublicAccountInfo;
import com.tencent.qqnt.kernel.nativeinterface.QueryMsgsParams;
import com.tencent.qqnt.kernel.nativeinterface.QueryUserSecQualityRsp;
import com.tencent.qqnt.kernel.nativeinterface.RecentHiddenSesionInfo;
import com.tencent.qqnt.kernel.nativeinterface.RecvdOrder;
import com.tencent.qqnt.kernel.nativeinterface.RelatedWordEmojiInfo;
import com.tencent.qqnt.kernel.nativeinterface.RichMediaElementGetReq;
import com.tencent.qqnt.kernel.nativeinterface.RichMediaFilePathInfo;
import com.tencent.qqnt.kernel.nativeinterface.SearchGroupFileResult;
import com.tencent.qqnt.kernel.nativeinterface.SourceMsgInfoForReplyMsg;
import com.tencent.qqnt.kernel.nativeinterface.TargetFileInfo;
import com.tencent.qqnt.kernel.nativeinterface.TempChatInfo;
import com.tencent.qqnt.kernel.nativeinterface.TempChatPrepareInfo;
import com.tencent.qqnt.kernel.nativeinterface.TofuActionButton;
import com.tencent.qqnt.kernel.nativeinterface.TofuRecordElement;
import com.tencent.qqnt.kernel.nativeinterface.UnreadCntInfo;
import com.tencent.qqnt.kernelpublic.nativeinterface.Contact;
import com.tencent.qqnt.kernelpublic.nativeinterface.JsonGrayElement;
import com.tencent.qqnt.kernelpublic.nativeinterface.LocalGrayTipElement;
import com.tencent.rmonitor.custom.ICustomDataEditor;
import com.tencent.thumbplayer.report.reportv1.TPReportKeys;
import cooperation.qqcircle.report.QCircleLpReportDc010001;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import kotlin.Metadata;
import kotlin.Unit;
import kotlin.jvm.functions.Function0;
import kotlin.jvm.functions.Function1;
import kotlin.jvm.internal.DefaultConstructorMarker;
import kotlin.jvm.internal.Intrinsics;
import kotlin.jvm.internal.Ref;
import mqq.app.AppRuntime;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

/* compiled from: P */
@Metadata(d1 = {"\u0000\u0082\u0006\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0010\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0010\t\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0010\u000e\n\u0002\b\u0002\n\u0002\u0010\b\n\u0002\b\u0002\n\u0002\u0010\u000b\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0010\u0012\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0007\n\u0002\u0018\u0002\n\u0002\b\u0004\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0004\n\u0002\u0018\u0002\n\u0002\b\u0006\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0006\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\n\n\u0002\u0018\u0002\n\u0002\b\b\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u000e\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0006\n\u0002\u0018\u0002\n\u0002\b\u0006\n\u0002\u0018\u0002\n\u0002\b\u0004\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0002\b\u0004\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0006\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0002\b\u0007\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0004\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0006\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0002\b\u0006\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0006\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\r\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0004\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0004\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0006\n\u0002\u0010!\n\u0002\b\u0003\n\u0002\u0010%\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0006\u0018\u0000 \u009b\u00032\u000e\u0012\u0004\u0012\u00020\u0002\u0012\u0004\u0012\u00020\u00030\u00012\u00020\u0004:\u0002\u009c\u0003B\u001e\u0012\t\u0010\u0096\u0003\u001a\u0004\u0018\u00010\u0003\u0012\b\u0010\u0098\u0003\u001a\u00030\u0097\u0003\u00a2\u0006\u0006\b\u0099\u0003\u0010\u009a\u0003J\b\u0010\u0006\u001a\u00020\u0005H\u0002J\u0012\u0010\t\u001a\u00020\u00052\b\u0010\b\u001a\u0004\u0018\u00010\u0007H\u0002J\u0010\u0010\f\u001a\u00020\u00052\u0006\u0010\u000b\u001a\u00020\nH\u0016J\u0010\u0010\r\u001a\u00020\u00052\u0006\u0010\u000b\u001a\u00020\u0002H\u0016J\u0010\u0010\u000e\u001a\u00020\u00052\u0006\u0010\u000b\u001a\u00020\u0002H\u0016J\u000e\u0010\u000f\u001a\u00020\u00022\u0006\u0010\u000b\u001a\u00020\u0002J\u0010\u0010\u0011\u001a\u00020\u00052\u0006\u0010\u000b\u001a\u00020\u0010H\u0016J\u0010\u0010\u0013\u001a\u00020\u00052\u0006\u0010\u000b\u001a\u00020\u0012H\u0016J\u0012\u0010\u0016\u001a\u00020\u00052\b\u0010\u0015\u001a\u0004\u0018\u00010\u0014H\u0016J(\u0010\u001b\u001a\u00020\u00052\u0006\u0010\u0018\u001a\u00020\u00172\u0006\u0010\b\u001a\u00020\u00072\u0006\u0010\u001a\u001a\u00020\u00192\u0006\u0010\u0015\u001a\u00020\u0014H\u0016J(\u0010\u001c\u001a\u00020\u00052\u0006\u0010\u0018\u001a\u00020\u00172\u0006\u0010\b\u001a\u00020\u00072\u0006\u0010\u001a\u001a\u00020\u00192\u0006\u0010\u0015\u001a\u00020\u0014H\u0016J8\u0010'\u001a\u00020\u00052\u0006\u0010\u001e\u001a\u00020\u001d2\u0006\u0010\u001f\u001a\u00020\u001d2\u0006\u0010!\u001a\u00020 2\u0006\u0010\"\u001a\u00020 2\u0006\u0010$\u001a\u00020#2\u0006\u0010&\u001a\u00020%H\u0016J\u0018\u0010+\u001a\u00020\u00052\u0006\u0010)\u001a\u00020(2\u0006\u0010&\u001a\u00020*H\u0016J\u0018\u0010.\u001a\u00020\u00052\u0006\u0010)\u001a\u00020,2\u0006\u0010&\u001a\u00020-H\u0016J\u001c\u00101\u001a\u00020\u00052\b\u0010)\u001a\u0004\u0018\u00010/2\b\u0010&\u001a\u0004\u0018\u000100H\u0016J\u0018\u00105\u001a\u00020\u00052\u0006\u00103\u001a\u0002022\u0006\u0010&\u001a\u000204H\u0016J\u001a\u00108\u001a\u00020\u00052\u0006\u00107\u001a\u0002062\b\u0010\u0015\u001a\u0004\u0018\u00010\u0014H\u0016J\u0012\u00109\u001a\u00020\u00052\b\u0010\u0015\u001a\u0004\u0018\u00010\u0014H\u0016J\u001a\u0010<\u001a\u00020\u00052\u0006\u0010;\u001a\u00020:2\b\u0010\u0015\u001a\u0004\u0018\u00010\u0014H\u0016J\u001a\u0010?\u001a\u00020\u00052\u0006\u0010>\u001a\u00020=2\b\u0010\u0015\u001a\u0004\u0018\u00010\u0014H\u0016J$\u0010A\u001a\u00020\u00052\b\u0010\b\u001a\u0004\u0018\u00010\u00072\u0006\u0010@\u001a\u00020#2\b\u0010\u0015\u001a\u0004\u0018\u00010\u0014H\u0016J\u0012\u0010B\u001a\u00020\u00052\b\u0010\u0015\u001a\u0004\u0018\u00010\u0014H\u0016J\u001a\u0010E\u001a\u00020\u00052\u0006\u0010D\u001a\u00020C2\b\u0010\u0015\u001a\u0004\u0018\u00010\u0014H\u0016J:\u0010I\u001a\u00020\u00052\u0006\u0010\u0018\u001a\u00020\u00172\u0006\u0010\b\u001a\u00020\u00072\u0016\u0010H\u001a\u0012\u0012\u0004\u0012\u00020\u00190Fj\b\u0012\u0004\u0012\u00020\u0019`G2\b\u0010\u0015\u001a\u0004\u0018\u00010\u0014H\u0016J^\u0010N\u001a\u00020\u00052\u0006\u0010\u0018\u001a\u00020\u00172\u0006\u0010\b\u001a\u00020\u00072\u0016\u0010H\u001a\u0012\u0012\u0004\u0012\u00020\u00190Fj\b\u0012\u0004\u0012\u00020\u0019`G2\"\u0010M\u001a\u001e\u0012\u0004\u0012\u00020 \u0012\u0004\u0012\u00020K0Jj\u000e\u0012\u0004\u0012\u00020 \u0012\u0004\u0012\u00020K`L2\b\u0010\u0015\u001a\u0004\u0018\u00010\u0014H\u0016J0\u0010O\u001a\u00020\u00052\u0006\u0010\u0018\u001a\u00020\u00172\u0006\u0010\b\u001a\u00020\u00072\u0016\u0010H\u001a\u0012\u0012\u0004\u0012\u00020\u00190Fj\b\u0012\u0004\u0012\u00020\u0019`GH\u0016J \u0010S\u001a\u00020\u00052\u0006\u0010\b\u001a\u00020\u00072\u0006\u0010Q\u001a\u00020P2\u0006\u0010R\u001a\u00020\u0014H\u0016Jd\u0010Y\u001a\u00020\u00052\u0016\u0010T\u001a\u0012\u0012\u0004\u0012\u00020\u00170Fj\b\u0012\u0004\u0012\u00020\u0017`G2\u0006\u0010U\u001a\u00020\u00072\u0016\u0010V\u001a\u0012\u0012\u0004\u0012\u00020\u00070Fj\b\u0012\u0004\u0012\u00020\u0007`G2\u001a\u0010W\u001a\u0016\u0012\u0004\u0012\u00020\u0019\u0018\u00010Fj\n\u0012\u0004\u0012\u00020\u0019\u0018\u0001`G2\u0006\u0010&\u001a\u00020XH\u0016J|\u0010\\\u001a\u00020\u00052\u0016\u0010Z\u001a\u0012\u0012\u0004\u0012\u00020\u00170Fj\b\u0012\u0004\u0012\u00020\u0017`G2\u0016\u0010[\u001a\u0012\u0012\u0004\u0012\u00020\u00170Fj\b\u0012\u0004\u0012\u00020\u0017`G2\u0006\u0010U\u001a\u00020\u00072\u0016\u0010V\u001a\u0012\u0012\u0004\u0012\u00020\u00070Fj\b\u0012\u0004\u0012\u00020\u0007`G2\u001a\u0010W\u001a\u0016\u0012\u0004\u0012\u00020\u0019\u0018\u00010Fj\n\u0012\u0004\u0012\u00020\u0019\u0018\u0001`G2\u0006\u0010&\u001a\u00020XH\u0016J \u0010`\u001a\u00020\u00052\u0006\u0010^\u001a\u00020]2\u0006\u0010_\u001a\u00020\u00072\u0006\u0010&\u001a\u00020\u0014H\u0016JT\u0010c\u001a\u00020\u00052\u0016\u0010b\u001a\u0012\u0012\u0004\u0012\u00020a0Fj\b\u0012\u0004\u0012\u00020a`G2\u0006\u0010U\u001a\u00020\u00072\u0006\u0010V\u001a\u00020\u00072\u001a\u0010W\u001a\u0016\u0012\u0004\u0012\u00020\u0019\u0018\u00010Fj\n\u0012\u0004\u0012\u00020\u0019\u0018\u0001`G2\u0006\u0010&\u001a\u00020\u0014H\u0016J(\u0010g\u001a\u00020\u00052\u0006\u0010\b\u001a\u00020\u00072\u0006\u0010d\u001a\u00020\u00172\u0006\u0010e\u001a\u00020\u00172\u0006\u0010&\u001a\u00020fH\u0016J\u0019\u0010i\u001a\u0004\u0018\u00010\u00172\u0006\u0010h\u001a\u00020 H\u0016\u00a2\u0006\u0004\bi\u0010jJ\b\u0010k\u001a\u00020\u0005H\u0016J \u0010n\u001a\u00020\u00052\u0006\u0010\b\u001a\u00020\u00072\u0006\u0010l\u001a\u00020 2\u0006\u0010&\u001a\u00020mH\u0016J(\u0010p\u001a\u00020\u00052\u0016\u0010o\u001a\u0012\u0012\u0004\u0012\u00020\u00070Fj\b\u0012\u0004\u0012\u00020\u0007`G2\u0006\u0010&\u001a\u00020mH\u0016J \u0010r\u001a\u00020\u00052\u0006\u0010\b\u001a\u00020\u00072\u0006\u0010l\u001a\u00020 2\u0006\u0010&\u001a\u00020qH\u0016J0\u0010t\u001a\u00020\u00052\u0006\u0010\b\u001a\u00020\u00072\u0006\u0010\u0018\u001a\u00020\u00172\u0006\u0010l\u001a\u00020 2\u0006\u0010s\u001a\u00020#2\u0006\u0010&\u001a\u00020mH\u0016J8\u0010v\u001a\u00020\u00052\u0006\u0010\b\u001a\u00020\u00072\u0006\u0010\u0018\u001a\u00020\u00172\u0006\u0010l\u001a\u00020 2\u0006\u0010s\u001a\u00020#2\u0006\u0010u\u001a\u00020#2\u0006\u0010&\u001a\u00020mH\u0016J0\u0010w\u001a\u00020\u00052\u0006\u0010\b\u001a\u00020\u00072\u0006\u0010\u0018\u001a\u00020\u00172\u0006\u0010l\u001a\u00020 2\u0006\u0010s\u001a\u00020#2\u0006\u0010&\u001a\u00020mH\u0016J\u001c\u0010{\u001a\u00020\u00052\b\u0010y\u001a\u0004\u0018\u00010x2\b\u0010&\u001a\u0004\u0018\u00010zH\u0016J4\u0010}\u001a\u00020\u00052\b\u0010\b\u001a\u0004\u0018\u00010\u00072\u0006\u0010|\u001a\u00020\u00172\u0006\u0010l\u001a\u00020 2\u0006\u0010s\u001a\u00020#2\b\u0010&\u001a\u0004\u0018\u00010mH\u0016JD\u0010\u007f\u001a\u00020\u00052\b\u0010\b\u001a\u0004\u0018\u00010\u00072\u0006\u0010|\u001a\u00020\u00172\u0006\u0010l\u001a\u00020 2\u0006\u0010s\u001a\u00020#2\u0006\u0010u\u001a\u00020#2\u0006\u0010~\u001a\u00020#2\b\u0010&\u001a\u0004\u0018\u00010mH\u0016J\u001d\u0010\u0082\u0001\u001a\u00020\u00052\u0007\u00103\u001a\u00030\u0080\u00012\t\u0010&\u001a\u0005\u0018\u00010\u0081\u0001H\u0016J%\u0010\u0083\u0001\u001a\u00020\u00052\u0007\u00103\u001a\u00030\u0080\u00012\u0006\u0010u\u001a\u00020#2\t\u0010&\u001a\u0005\u0018\u00010\u0081\u0001H\u0016J\u001f\u0010\u0086\u0001\u001a\u00020\u00052\n\u0010\u0085\u0001\u001a\u0005\u0018\u00010\u0084\u00012\b\u0010&\u001a\u0004\u0018\u00010\u0014H\u0016J'\u0010\u0089\u0001\u001a\u00020\u00052\u0006\u0010h\u001a\u00020 2\t\u0010\u0087\u0001\u001a\u0004\u0018\u00010\u001d2\t\u0010&\u001a\u0005\u0018\u00010\u0088\u0001H\u0016J=\u0010\u008a\u0001\u001a\u00020\u00052\b\u0010\b\u001a\u0004\u0018\u00010\u00072\u001e\u0010T\u001a\u001a\u0012\u0006\u0012\u0004\u0018\u00010\u0017\u0018\u00010Fj\f\u0012\u0006\u0012\u0004\u0018\u00010\u0017\u0018\u0001`G2\b\u0010&\u001a\u0004\u0018\u00010mH\u0016J.\u0010\u008c\u0001\u001a\u00020\u00052\b\u0010\b\u001a\u0004\u0018\u00010\u00072\u0006\u0010\u0018\u001a\u00020\u00172\u0007\u0010\u008b\u0001\u001a\u00020\u00172\b\u0010&\u001a\u0004\u0018\u00010mH\u0016J*\u0010\u008e\u0001\u001a\u00020\u00052\u0006\u0010\b\u001a\u00020\u00072\u0006\u0010d\u001a\u00020\u00172\u0007\u0010\u008d\u0001\u001a\u00020\u00172\u0006\u0010&\u001a\u00020mH\u0016J%\u0010\u008f\u0001\u001a\u00020\u00052\b\u0010\b\u001a\u0004\u0018\u00010\u00072\u0006\u0010|\u001a\u00020\u00172\b\u0010&\u001a\u0004\u0018\u00010mH\u0016J/\u0010\u0092\u0001\u001a\u00020\u00052\b\u0010\b\u001a\u0004\u0018\u00010\u00072\u0007\u0010\u0090\u0001\u001a\u00020\u00172\u0007\u0010\u0091\u0001\u001a\u00020\u00172\b\u0010&\u001a\u0004\u0018\u00010mH\u0016JT\u0010\u0095\u0001\u001a\u00020\u00052\b\u0010\b\u001a\u0004\u0018\u00010\u00072\u0006\u0010\u0018\u001a\u00020\u00172\u0006\u0010l\u001a\u00020 2\u0006\u0010s\u001a\u00020#2\u001d\u0010\u0094\u0001\u001a\u0018\u0012\u0005\u0012\u00030\u0093\u0001\u0018\u00010Fj\u000b\u0012\u0005\u0012\u00030\u0093\u0001\u0018\u0001`G2\b\u0010&\u001a\u0004\u0018\u00010mH\u0016J\"\u0010\u0096\u0001\u001a\u00020\u00052\u0006\u0010\u0018\u001a\u00020\u00172\u0007\u0010\u0087\u0001\u001a\u00020\u001d2\u0006\u0010h\u001a\u00020 H\u0016J#\u0010\u0097\u0001\u001a\u00020\u00052\u0006\u0010\b\u001a\u00020\u00072\u0006\u0010\u0018\u001a\u00020\u00172\b\u0010\u0015\u001a\u0004\u0018\u00010\u0014H\u0016J#\u0010\u0098\u0001\u001a\u00020\u00052\u0006\u0010\b\u001a\u00020\u00072\u0006\u0010\u0018\u001a\u00020\u00172\b\u0010&\u001a\u0004\u0018\u00010\u0014H\u0016J#\u0010\u0099\u0001\u001a\u00020\u00052\u0006\u0010\b\u001a\u00020\u00072\u0006\u0010\u0018\u001a\u00020\u00172\b\u0010&\u001a\u0004\u0018\u00010\u0014H\u0016J#\u0010\u009a\u0001\u001a\u00020\u00052\u0006\u0010\b\u001a\u00020\u00072\u0006\u0010\u0018\u001a\u00020\u00172\b\u0010&\u001a\u0004\u0018\u00010\u0014H\u0016J%\u0010\u009b\u0001\u001a\u00020\u00052\b\u0010\b\u001a\u0004\u0018\u00010\u00072\u0006\u0010\u0018\u001a\u00020\u00172\b\u0010&\u001a\u0004\u0018\u00010\u0014H\u0016J\u001c\u0010\u009f\u0001\u001a\u00020\u00052\b\u0010\u009d\u0001\u001a\u00030\u009c\u00012\u0007\u0010&\u001a\u00030\u009e\u0001H\u0016J+\u0010\u00a2\u0001\u001a\u00020\u00052\u0006\u0010\b\u001a\u00020\u00072\u0006\u0010\u0018\u001a\u00020\u00172\b\u0010\u00a1\u0001\u001a\u00030\u00a0\u00012\u0006\u0010&\u001a\u00020\u0014H\u0016J5\u0010\u00a3\u0001\u001a\u00020\u00052\b\u0010\b\u001a\u0004\u0018\u00010\u00072\u0016\u0010T\u001a\u0012\u0012\u0004\u0012\u00020\u00170Fj\b\u0012\u0004\u0012\u00020\u0017`G2\b\u0010\u000b\u001a\u0004\u0018\u00010mH\u0016J7\u0010\u00a4\u0001\u001a\u00020\u00052\u0006\u0010\b\u001a\u00020\u00072\u001a\u0010T\u001a\u0016\u0012\u0004\u0012\u00020\u0017\u0018\u00010Fj\n\u0012\u0004\u0012\u00020\u0017\u0018\u0001`G2\b\u0010&\u001a\u0004\u0018\u00010\u0014H\u0016J5\u0010\u00a7\u0001\u001a\u00020\u00052\u0006\u0010\b\u001a\u00020\u00072\u0006\u0010d\u001a\u00020\u00172\u0007\u0010\u00a5\u0001\u001a\u00020\u00172\u0007\u0010\u00a6\u0001\u001a\u00020=2\b\u0010&\u001a\u0004\u0018\u00010\u0014H\u0016J,\u0010\u00a9\u0001\u001a\u00020\u00052\u0006\u0010\b\u001a\u00020\u00072\u0006\u0010\u0018\u001a\u00020\u00172\u0007\u0010\u00a8\u0001\u001a\u00020=2\b\u0010&\u001a\u0004\u0018\u00010\u0014H\u0016J\u0011\u0010\u00aa\u0001\u001a\u00020\u00052\u0006\u0010\b\u001a\u00020\u0007H\u0016J\u0014\u0010\u00ab\u0001\u001a\u0004\u0018\u00010\u0017H\u0016\u00a2\u0006\u0006\b\u00ab\u0001\u0010\u00ac\u0001J\u0012\u0010\u00ae\u0001\u001a\u00020\u00052\u0007\u0010\u00ad\u0001\u001a\u00020#H\u0016J\u0013\u0010\u00b1\u0001\u001a\u00020\u00052\b\u0010\u00b0\u0001\u001a\u00030\u00af\u0001H\u0016J\u0013\u0010\u00b2\u0001\u001a\u00020\u00052\b\u0010\u00b0\u0001\u001a\u00030\u00af\u0001H\u0016J\u0015\u0010\u00b5\u0001\u001a\u0004\u0018\u00010\u001d2\b\u0010\u00b4\u0001\u001a\u00030\u00b3\u0001H\u0016J\u0015\u0010\u00b6\u0001\u001a\u0004\u0018\u00010\u001d2\b\u0010\u00b4\u0001\u001a\u00030\u00b3\u0001H\u0016J\u0015\u0010\u00b7\u0001\u001a\u0004\u0018\u00010\u001d2\b\u0010\u00b4\u0001\u001a\u00030\u00b3\u0001H\u0016J\u001b\u0010\u00b8\u0001\u001a\u00020\u00052\u0006\u0010\b\u001a\u00020\u00072\b\u0010&\u001a\u0004\u0018\u00010\u0014H\u0016J\u0013\u0010\u00b9\u0001\u001a\u00020\u00052\b\u0010&\u001a\u0004\u0018\u00010\u0014H\u0016J%\u0010\u00bc\u0001\u001a\u00020\u00052\u0006\u0010\b\u001a\u00020\u00072\b\u0010\u00bb\u0001\u001a\u00030\u00ba\u00012\b\u0010&\u001a\u0004\u0018\u00010\u0014H\u0016J#\u0010\u00bd\u0001\u001a\u00020\u00052\u0006\u0010\b\u001a\u00020\u00072\u0006\u0010\u0018\u001a\u00020\u00172\b\u0010\u0015\u001a\u0004\u0018\u00010\u0014H\u0016J\u001b\u0010\u00be\u0001\u001a\u00020\u00052\u0006\u0010\b\u001a\u00020\u00072\b\u0010\u000b\u001a\u0004\u0018\u00010\u0014H\u0016J\u001c\u0010\u00c0\u0001\u001a\u00020\u00052\b\u0010\b\u001a\u0004\u0018\u00010\u00072\u0007\u0010\u00bf\u0001\u001a\u00020#H\u0016J$\u0010\u00c2\u0001\u001a\u00020\u00052\u0006\u0010\b\u001a\u00020\u00072\u0006\u0010\u0018\u001a\u00020\u00172\t\u0010&\u001a\u0005\u0018\u00010\u00c1\u0001H\u0016J\u0013\u0010\u00c3\u0001\u001a\u00020\u00052\b\u0010&\u001a\u0004\u0018\u00010\u0014H\u0016J,\u0010\u00c3\u0001\u001a\u00020\u00052\u0017\u0010\u00c4\u0001\u001a\u0012\u0012\u0004\u0012\u00020\u00070Fj\b\u0012\u0004\u0012\u00020\u0007`G2\b\u0010&\u001a\u0004\u0018\u00010\u0014H\u0016J*\u0010\u00c5\u0001\u001a\u00020\u00052\u0006\u0010\b\u001a\u00020\u00072\u0006\u0010\u0018\u001a\u00020\u00172\u0007\u0010\u00a5\u0001\u001a\u00020\u00172\u0006\u0010&\u001a\u00020\u0014H\u0016J\u001b\u0010\u00c8\u0001\u001a\u00020\u00052\u0007\u00103\u001a\u00030\u00c6\u00012\u0007\u0010R\u001a\u00030\u00c7\u0001H\u0016J\u001c\u0010\u00cc\u0001\u001a\u00020\u00052\b\u0010\u00ca\u0001\u001a\u00030\u00c9\u00012\u0007\u0010R\u001a\u00030\u00cb\u0001H\u0016J\u001a\u0010\u00ce\u0001\u001a\u00020\u00052\u0006\u0010\b\u001a\u00020\u00072\u0007\u0010&\u001a\u00030\u00cd\u0001H\u0016J#\u0010\u00d1\u0001\u001a\u00020\u00052\u0006\u0010\b\u001a\u00020\u00072\u0007\u0010\u00cf\u0001\u001a\u00020\u00172\u0007\u0010&\u001a\u00030\u00d0\u0001H\u0016JM\u0010\u00d5\u0001\u001a\u00020\u00052\u0006\u0010\b\u001a\u00020\u00072\u0007\u0010\u0091\u0001\u001a\u00020\u00172\u0007\u0010\u00d2\u0001\u001a\u00020\u00172\u0006\u0010l\u001a\u00020 2\u0007\u0010\u00d3\u0001\u001a\u00020#2\u0006\u0010s\u001a\u00020#2\u0007\u0010\u00d4\u0001\u001a\u00020#2\u0006\u0010&\u001a\u00020mH\u0016J\u0014\u0010\u00d7\u0001\u001a\u00020\u00052\t\u0010&\u001a\u0005\u0018\u00010\u00d6\u0001H\u0016J\u001c\u0010\u00d8\u0001\u001a\u00020\u00052\u0006\u0010h\u001a\u00020 2\t\u0010&\u001a\u0005\u0018\u00010\u00d6\u0001H\u0016JC\u0010\u00dd\u0001\u001a\u00020\u00052\b\u0010\b\u001a\u0004\u0018\u00010\u00072\u0006\u0010|\u001a\u00020\u00172\t\u0010\u00d9\u0001\u001a\u0004\u0018\u00010\u001d2\u0007\u0010\u00da\u0001\u001a\u00020\u00172\u0007\u0010\u00db\u0001\u001a\u00020#2\t\u0010&\u001a\u0005\u0018\u00010\u00dc\u0001H\u0016JW\u0010\u00e2\u0001\u001a\u00020\u00052\b\u0010\b\u001a\u0004\u0018\u00010\u00072\u0006\u0010|\u001a\u00020\u00172\t\u0010\u00d9\u0001\u001a\u0004\u0018\u00010\u001d2\u0007\u0010\u00da\u0001\u001a\u00020\u00172\t\u0010\u00de\u0001\u001a\u0004\u0018\u00010\u001d2\u0007\u0010\u00df\u0001\u001a\u00020#2\u0007\u0010\u00e0\u0001\u001a\u00020 2\t\u0010&\u001a\u0005\u0018\u00010\u00e1\u0001H\u0016J6\u0010\u00e4\u0001\u001a\u00020\u00052\u0006\u0010\b\u001a\u00020\u00072#\u0010\u00e3\u0001\u001a\u001e\u0012\u0004\u0012\u00020\u0017\u0012\u0004\u0012\u00020=0Jj\u000e\u0012\u0004\u0012\u00020\u0017\u0012\u0004\u0012\u00020=`LH\u0016J\u001a\u0010\u00e6\u0001\u001a\u00020\u00052\u0006\u0010\b\u001a\u00020\u00072\u0007\u0010&\u001a\u00030\u00e5\u0001H\u0016J\u001b\u0010\u00e7\u0001\u001a\u00020\u00052\u0006\u0010\b\u001a\u00020\u00072\b\u0010&\u001a\u0004\u0018\u00010\u0014H\u0016J+\u0010\u00e8\u0001\u001a\u00020\u00052\b\u0010\b\u001a\u0004\u0018\u00010\u00072\f\u0010H\u001a\b\u0012\u0004\u0012\u00020\u00190F2\b\u0010&\u001a\u0004\u0018\u00010\u0014H\u0016J\u001e\u0010\u00ea\u0001\u001a\u00020\u00052\b\u0010\b\u001a\u0004\u0018\u00010\u00072\t\u0010&\u001a\u0005\u0018\u00010\u00e9\u0001H\u0016J<\u0010\u00ec\u0001\u001a\u00020\u00052\u0006\u0010\b\u001a\u00020\u00072\u0007\u0010\u00eb\u0001\u001a\u00020\u00172\u0016\u0010H\u001a\u0012\u0012\u0004\u0012\u00020\u00190Fj\b\u0012\u0004\u0012\u00020\u0019`G2\b\u0010&\u001a\u0004\u0018\u00010\u0014H\u0016J%\u0010\u00ed\u0001\u001a\u00020\u00052\u0006\u0010\b\u001a\u00020\u00072\u0007\u0010\u00eb\u0001\u001a\u00020\u00172\t\u0010&\u001a\u0005\u0018\u00010\u00e9\u0001H\u0016J$\u0010\u00ee\u0001\u001a\u00020\u00052\u0006\u0010\b\u001a\u00020\u00072\u0007\u0010\u00eb\u0001\u001a\u00020\u00172\b\u0010&\u001a\u0004\u0018\u00010\u0014H\u0016J/\u0010\u00f3\u0001\u001a\u00020\u00052\u0007\u0010\u00ef\u0001\u001a\u00020\u00072\b\u0010\u00f1\u0001\u001a\u00030\u00f0\u00012\u0007\u0010\u00f2\u0001\u001a\u00020#2\b\u0010&\u001a\u0004\u0018\u00010\u0014H\u0016JD\u0010\u00fa\u0001\u001a\u00020\u00052\u0006\u0010\b\u001a\u00020\u00072\b\u0010\u00f5\u0001\u001a\u00030\u00f4\u00012\n\u0010\u00f7\u0001\u001a\u0005\u0018\u00010\u00f6\u00012\u0007\u0010\u00f2\u0001\u001a\u00020#2\u0007\u0010\u00f8\u0001\u001a\u00020#2\t\u0010&\u001a\u0005\u0018\u00010\u00f9\u0001H\u0016J&\u0010\u00fd\u0001\u001a\u00020\u00052\u0007\u0010\u00ef\u0001\u001a\u00020\u00072\b\u0010\u00fc\u0001\u001a\u00030\u00fb\u00012\b\u0010&\u001a\u0004\u0018\u00010\u0014H\u0016J6\u0010\u0080\u0002\u001a\u00020\u00052\u0007\u0010\u00ef\u0001\u001a\u00020\u00072\u0007\u0010\u00fe\u0001\u001a\u00020\u00172\u0006\u0010\u001a\u001a\u00020\u00192\u0007\u0010\u00ff\u0001\u001a\u00020#2\b\u0010&\u001a\u0004\u0018\u00010\u0014H\u0016J/\u0010\u0083\u0002\u001a\u00020\u00052\u0007\u0010\u00ef\u0001\u001a\u00020\u00072\u0007\u0010\u00fe\u0001\u001a\u00020\u00172\b\u0010\u0082\u0002\u001a\u00030\u0081\u00022\b\u0010&\u001a\u0004\u0018\u00010\u0014H\u0016J>\u0010\u0086\u0002\u001a\u00020\u00052\u0007\u0010\u0084\u0002\u001a\u00020 2\u0007\u0010\u00fe\u0001\u001a\u00020\u00172\u0017\u0010\u0085\u0002\u001a\u0012\u0012\u0004\u0012\u00020\u00170Fj\b\u0012\u0004\u0012\u00020\u0017`G2\b\u0010&\u001a\u0004\u0018\u00010\u0014H\u0016J>\u0010\u0087\u0002\u001a\u00020\u00052\u0007\u0010\u0084\u0002\u001a\u00020 2\u0007\u0010\u00fe\u0001\u001a\u00020\u00172\u0017\u0010\u0085\u0002\u001a\u0012\u0012\u0004\u0012\u00020\u00170Fj\b\u0012\u0004\u0012\u00020\u0017`G2\b\u0010&\u001a\u0004\u0018\u00010\u0014H\u0016J\u001b\u0010\u0088\u0002\u001a\u00020\u00052\u0006\u0010\b\u001a\u00020\u00072\b\u0010&\u001a\u0004\u0018\u00010\u0014H\u0016J*\u0010\u008a\u0002\u001a\u00020\u00052\u0016\u0010o\u001a\u0012\u0012\u0004\u0012\u00020\u00070Fj\b\u0012\u0004\u0012\u00020\u0007`G2\u0007\u0010&\u001a\u00030\u0089\u0002H\u0016J\u001d\u0010\u008d\u0002\u001a\u00020\u00052\u0007\u00103\u001a\u00030\u008b\u00022\t\u0010&\u001a\u0005\u0018\u00010\u008c\u0002H\u0016J\u001d\u0010\u0090\u0002\u001a\u00020\u00052\u0007\u00103\u001a\u00030\u008e\u00022\t\u0010&\u001a\u0005\u0018\u00010\u008f\u0002H\u0016J\u001d\u0010\u0093\u0002\u001a\u00020\u00052\u0007\u00103\u001a\u00030\u0091\u00022\t\u0010&\u001a\u0005\u0018\u00010\u0092\u0002H\u0016J\u001d\u0010\u0096\u0002\u001a\u00020\u00052\u0007\u00103\u001a\u00030\u0094\u00022\t\u0010&\u001a\u0005\u0018\u00010\u0095\u0002H\u0016J\u001c\u0010\u0098\u0002\u001a\u00020\u00052\u0007\u0010\u0097\u0002\u001a\u00020 2\b\u0010&\u001a\u0004\u0018\u00010\u0014H\u0016J0\u0010\u009b\u0002\u001a\u00020\u00052\u0007\u0010\u0097\u0002\u001a\u00020 2\u0011\u0010\u0099\u0002\u001a\f\u0012\u0006\u0012\u0004\u0018\u00010\u001d\u0018\u00010F2\t\u0010&\u001a\u0005\u0018\u00010\u009a\u0002H\u0016J\t\u0010\u009c\u0002\u001a\u00020#H\u0016J\t\u0010\u009d\u0002\u001a\u00020#H\u0016J0\u0010\u00a0\u0002\u001a\u00020\u00052\u0006\u0010\u0018\u001a\u00020\u00172\u0007\u0010\u0091\u0001\u001a\u00020\u00172\n\u0010\u009f\u0002\u001a\u0005\u0018\u00010\u009e\u00022\b\u0010&\u001a\u0004\u0018\u00010mH\u0016J4\u0010\u00a1\u0002\u001a\u00020\u00052\u0006\u0010\u0018\u001a\u00020\u00172\u0007\u0010\u0091\u0001\u001a\u00020\u00172\u0006\u0010|\u001a\u00020\u00172\b\u0010\u009f\u0002\u001a\u00030\u009e\u00022\u0006\u0010&\u001a\u00020mH\u0016Jh\u0010\u00a8\u0002\u001a\u00020\u00052\b\u0010\b\u001a\u0004\u0018\u00010\u00072\u0006\u0010|\u001a\u00020\u00172\t\u0010\u00d9\u0001\u001a\u0004\u0018\u00010\u001d2\u0007\u0010\u00da\u0001\u001a\u00020\u00172\u0007\u0010\u00a2\u0002\u001a\u00020\u00172\u0007\u0010\u00a3\u0002\u001a\u00020\u00172\u0007\u0010\u00db\u0001\u001a\u00020#2\u0007\u0010\u00a4\u0002\u001a\u00020#2\b\u0010\u00a6\u0002\u001a\u00030\u00a5\u00022\t\u0010&\u001a\u0005\u0018\u00010\u00a7\u0002H\u0016J4\u0010\u00a9\u0002\u001a\u00020\u00052\u0006\u0010\u0018\u001a\u00020\u00172\u0007\u0010\u0091\u0001\u001a\u00020\u00172\u0006\u0010|\u001a\u00020\u00172\b\u0010\u009f\u0002\u001a\u00030\u009e\u00022\u0006\u0010&\u001a\u00020mH\u0016J4\u0010\u00aa\u0002\u001a\u00020\u00052\u0006\u0010\u0018\u001a\u00020\u00172\u0007\u0010\u0091\u0001\u001a\u00020\u00172\u0006\u0010|\u001a\u00020\u00172\b\u0010\u009f\u0002\u001a\u00030\u009e\u00022\u0006\u0010&\u001a\u00020mH\u0016J4\u0010\u00ab\u0002\u001a\u00020\u00052\u0006\u0010\u0018\u001a\u00020\u00172\u0007\u0010\u0091\u0001\u001a\u00020\u00172\u0006\u0010|\u001a\u00020\u00172\b\u0010\u009f\u0002\u001a\u00030\u009e\u00022\u0006\u0010&\u001a\u00020mH\u0016J4\u0010\u00ac\u0002\u001a\u00020\u00052\u0006\u0010\u0018\u001a\u00020\u00172\u0007\u0010\u0091\u0001\u001a\u00020\u00172\u0006\u0010|\u001a\u00020\u00172\b\u0010\u009f\u0002\u001a\u00030\u009e\u00022\u0006\u0010&\u001a\u00020mH\u0016J'\u0010\u00af\u0002\u001a\u00020\u00052\u0012\u0010\u00ae\u0002\u001a\r\u0012\u0007\u0012\u0005\u0018\u00010\u00ad\u0002\u0018\u00010F2\b\u0010&\u001a\u0004\u0018\u00010\u0014H\u0016J\u0012\u0010\u00b1\u0002\u001a\u00020\u00052\u0007\u0010\u00b0\u0002\u001a\u00020#H\u0016J\u0013\u0010\u00b2\u0002\u001a\u00020\u00052\b\u0010&\u001a\u0004\u0018\u00010\u0014H\u0016J\t\u0010\u00b3\u0002\u001a\u00020\u0005H\u0016J\u0014\u0010\u00b5\u0002\u001a\u00020\u00052\t\u0010&\u001a\u0005\u0018\u00010\u00b4\u0002H\u0016J\u0013\u0010\u00b6\u0002\u001a\u00020\u00052\b\u0010&\u001a\u0004\u0018\u00010\u0014H\u0016J\u0014\u0010\u00b8\u0002\u001a\u00020\u00052\t\u0010&\u001a\u0005\u0018\u00010\u00b7\u0002H\u0016J'\u0010\u00bb\u0002\u001a\u00020\u00052\b\u0010\b\u001a\u0004\u0018\u00010\u00072\u0007\u0010\u00b9\u0002\u001a\u00020\u00172\t\u0010&\u001a\u0005\u0018\u00010\u00ba\u0002H\u0016J-\u0010\u00be\u0002\u001a\u00020\u00052\u0006\u0010h\u001a\u00020 2\u0007\u0010\u00bc\u0002\u001a\u00020 2\u0007\u0010\u00bd\u0002\u001a\u00020\u001d2\b\u0010\u0015\u001a\u0004\u0018\u00010\u0014H\u0016J(\u0010\u00c2\u0002\u001a\u00020\u00052\t\u0010\u00bf\u0002\u001a\u0004\u0018\u00010\u001d2\u0007\u0010\u00c0\u0002\u001a\u00020#2\t\u0010&\u001a\u0005\u0018\u00010\u00c1\u0002H\u0016J\u001f\u0010\u00c4\u0002\u001a\u00020\u00052\t\u0010\u00bf\u0002\u001a\u0004\u0018\u00010\u001d2\t\u0010&\u001a\u0005\u0018\u00010\u00c3\u0002H\u0016J\u0017\u0010\u00c6\u0002\u001a\u0005\u0018\u00010\u00c5\u00022\t\u0010\u00bf\u0002\u001a\u0004\u0018\u00010\u001dH\u0016J\u0014\u0010\u00c7\u0002\u001a\u0004\u0018\u00010 H\u0016\u00a2\u0006\u0006\b\u00c7\u0002\u0010\u00c8\u0002J\t\u0010\u00c9\u0002\u001a\u00020\u0005H\u0016J%\u0010\u00cb\u0002\u001a\u0004\u0018\u00010 2\u0007\u0010\u00ca\u0002\u001a\u00020\u00172\u0006\u0010h\u001a\u00020 H\u0016\u00a2\u0006\u0006\b\u00cb\u0002\u0010\u00cc\u0002J\u001c\u0010\u00ce\u0002\u001a\u00020\u00052\u0007\u0010\u00bf\u0002\u001a\u00020\u001d2\b\u0010\u00cd\u0002\u001a\u00030\u00c5\u0002H\u0016J\u001b\u0010\u00d1\u0002\u001a\u00020\u001d2\u0007\u0010\u00cf\u0002\u001a\u00020\u00172\u0007\u0010\u00d0\u0002\u001a\u00020\u0017H\u0016J\u0014\u0010\u00d2\u0002\u001a\u00020\u00052\t\u0010&\u001a\u0005\u0018\u00010\u00b4\u0002H\u0016J5\u0010\u00d4\u0002\u001a\u00020\u00052\u0006\u0010\u0018\u001a\u00020\u00172\u0007\u0010\u0091\u0001\u001a\u00020\u00172\u0006\u0010|\u001a\u00020\u00172\b\u0010\u009f\u0002\u001a\u00030\u009e\u00022\u0007\u0010&\u001a\u00030\u00d3\u0002H\u0016J!\u0010\u00d5\u0002\u001a\u00020\u00052\u0006\u0010\b\u001a\u00020\u00072\u0006\u0010\u0018\u001a\u00020\u00172\u0006\u0010&\u001a\u00020\u0014H\u0016J!\u0010\u00d6\u0002\u001a\u00020\u00052\u0006\u0010\b\u001a\u00020\u00072\u0006\u0010\u0018\u001a\u00020\u00172\u0006\u0010&\u001a\u00020\u0014H\u0016J\u0014\u0010\u00d8\u0002\u001a\u00020\u00052\t\u0010R\u001a\u0005\u0018\u00010\u00d7\u0002H\u0016J.\u0010\u00db\u0002\u001a\u00020\u00052\u0019\u0010\u00da\u0002\u001a\u0014\u0012\u0005\u0012\u00030\u00d9\u00020Fj\t\u0012\u0005\u0012\u00030\u00d9\u0002`G2\b\u0010R\u001a\u0004\u0018\u00010\u0014H\u0016J.\u0010\u00dc\u0002\u001a\u00020\u00052\u0019\u0010\u00da\u0002\u001a\u0014\u0012\u0005\u0012\u00030\u00d9\u00020Fj\t\u0012\u0005\u0012\u00030\u00d9\u0002`G2\b\u0010R\u001a\u0004\u0018\u00010\u0014H\u0016J\u0014\u0010\u00dd\u0002\u001a\u00020\u00052\t\u0010R\u001a\u0005\u0018\u00010\u00d7\u0002H\u0016J\u001f\u0010\u00de\u0002\u001a\u00020\u00052\n\u0010\u00cd\u0002\u001a\u0005\u0018\u00010\u00d9\u00022\b\u0010R\u001a\u0004\u0018\u00010\u0014H\u0016J\u0012\u0010\u00e0\u0002\u001a\u00020\u00052\u0007\u0010&\u001a\u00030\u00df\u0002H\u0016J'\u0010\u00e2\u0002\u001a\u0004\u0018\u00010\u00172\b\u0010\u009f\u0002\u001a\u00030\u009e\u00022\u0007\u0010&\u001a\u00030\u00e1\u0002H\u0016\u00a2\u0006\u0006\b\u00e2\u0002\u0010\u00e3\u0002JU\u0010\u00e9\u0002\u001a\u0004\u0018\u00010\u00172\u0019\u0010\u00e5\u0002\u001a\u0014\u0012\u0005\u0012\u00030\u00e4\u00020Fj\t\u0012\u0005\u0012\u00030\u00e4\u0002`G2\u0019\u0010\u00e7\u0002\u001a\u0014\u0012\u0005\u0012\u00030\u00e6\u00020Fj\t\u0012\u0005\u0012\u00030\u00e6\u0002`G2\t\u0010&\u001a\u0005\u0018\u00010\u00e8\u0002H\u0016\u00a2\u0006\u0006\b\u00e9\u0002\u0010\u00ea\u0002J\u0015\u0010\u00eb\u0002\u001a\u0004\u0018\u00010\u001d2\b\u0010\u00cd\u0002\u001a\u00030\u00e6\u0002H\u0016J\"\u0010\u00ec\u0002\u001a\u00020\u00052\u0007\u0010\u00ef\u0001\u001a\u00020\u00072\u0006\u0010\u0018\u001a\u00020\u00172\u0006\u0010R\u001a\u00020\u0014H\u0016J-\u0010\u00f1\u0002\u001a\u00020\u00052\u0006\u0010\b\u001a\u00020\u00072\b\u0010\u00ee\u0002\u001a\u00030\u00ed\u00022\b\u0010\u00f0\u0002\u001a\u00030\u00ef\u00022\u0006\u0010&\u001a\u00020\u0014H\u0016J\u0012\u0010\u00f3\u0002\u001a\u00020\u00052\u0007\u0010\u00f2\u0002\u001a\u00020#H\u0016J\u001d\u0010\u00f5\u0002\u001a\u00020\u00052\b\u0010\u00cd\u0002\u001a\u00030\u00f4\u00022\b\u0010&\u001a\u0004\u0018\u00010\u0014H\u0016J-\u0010\u00f6\u0002\u001a\u00020\u00052\u0006\u0010\b\u001a\u00020\u00072\b\u0010\u00ee\u0002\u001a\u00030\u00ed\u00022\b\u0010\u00f0\u0002\u001a\u00030\u00ef\u00022\u0006\u0010&\u001a\u00020\u0014H\u0016J\u0019\u0010\u00f7\u0002\u001a\u00020\u00052\u0006\u0010h\u001a\u00020 2\u0006\u0010&\u001a\u00020\u0014H\u0016J\u001f\u0010\u00fa\u0002\u001a\u00020\u00052\n\u0010\u00f9\u0002\u001a\u0005\u0018\u00010\u00f8\u00022\b\u0010&\u001a\u0004\u0018\u00010\u0014H\u0016J\u001c\u0010\u00fe\u0002\u001a\u00020\u00052\b\u0010\u00fc\u0002\u001a\u00030\u00fb\u00022\u0007\u0010&\u001a\u00030\u00fd\u0002H\u0016JZ\u0010\u0084\u0003\u001a\u00020\u00052\b\u0010\u0080\u0003\u001a\u00030\u00ff\u00022\u0017\u0010\u0081\u0003\u001a\u0012\u0012\u0004\u0012\u00020\u00190Fj\b\u0012\u0004\u0012\u00020\u0019`G2#\u0010\u0082\u0003\u001a\u001e\u0012\u0004\u0012\u00020 \u0012\u0004\u0012\u00020K0Jj\u000e\u0012\u0004\u0012\u00020 \u0012\u0004\u0012\u00020K`L2\u0007\u0010&\u001a\u00030\u0083\u0003H\u0016R\u0019\u0010\u0087\u0003\u001a\u00020#8\u0002@\u0002X\u0082\u000e\u00a2\u0006\b\n\u0006\b\u0085\u0003\u0010\u0086\u0003R\u0019\u0010\u0089\u0003\u001a\u00020#8\u0002@\u0002X\u0082\u000e\u00a2\u0006\b\n\u0006\b\u0088\u0003\u0010\u0086\u0003R \u0010\u008d\u0003\u001a\t\u0012\u0004\u0012\u00020\n0\u008a\u00038\u0002@\u0002X\u0082\u000e\u00a2\u0006\b\n\u0006\b\u008b\u0003\u0010\u008c\u0003R&\u0010\u0091\u0003\u001a\u000f\u0012\u0004\u0012\u00020\u0012\u0012\u0004\u0012\u00020\u00170\u008e\u00038\u0002@\u0002X\u0082\u000e\u00a2\u0006\b\n\u0006\b\u008f\u0003\u0010\u0090\u0003R=\u0010\u0095\u0003\u001a(\u0012#\u0012!\u0012\u0016\u0012\u0014\u0012\u0005\u0012\u00030\u0093\u00030Fj\t\u0012\u0005\u0012\u00030\u0093\u0003`G\u0012\u0004\u0012\u00020\u00050\u0092\u00030\u008a\u00038\u0002X\u0082\u0004\u00a2\u0006\b\n\u0006\b\u0094\u0003\u0010\u008c\u0003\u00a8\u0006\u009d\u0003"}, d2 = {"Lcom/tencent/qqnt/kernel/api/impl/MsgService;", "Lcom/tencent/qqnt/kernel/api/impl/MsgBaseService;", "Lcom/tencent/qqnt/kernel/nativeinterface/IKernelMsgListener;", "Lcom/tencent/qqnt/kernel/nativeinterface/IKernelMsgService;", "Lcom/tencent/qqnt/kernel/api/w;", "", "g6", "Lcom/tencent/qqnt/kernelpublic/nativeinterface/Contact;", "peer", "i6", "Lcom/tencent/qqnt/kernel/invorker/b;", "listener", "m0", "addMsgListener", "removeMsgListener", "j6", "Lcom/tencent/qqnt/kernel/nativeinterface/IKernelMsgImportToolListener;", "B", "Lcom/tencent/qqnt/kernel/nativeinterface/ITempChatSigListener;", "addKernelTempChatSigListener", "Lcom/tencent/qqnt/kernel/nativeinterface/IOperateCallback;", "result", "getOnLineDev", "", "msgId", "Lcom/tencent/qqnt/kernel/nativeinterface/MsgElement;", "msgElement", "translatePtt2Text", "translatePtt2TextAiVoice", "", "searchWord", "picId", "", "count", "direction", "", "isForceRefresh", "Lcom/tencent/qqnt/kernel/nativeinterface/IGetHotPicInfoListCallback;", "cb", "getHotPicInfoListSearchString", "Lcom/tencent/qqnt/kernel/nativeinterface/EmojiHotPicSearchReqBody;", "reqBody", "Lcom/tencent/qqnt/kernel/nativeinterface/IEmojiGetHotPicSearchResultCallback;", "getHotPicSearchResult", "Lcom/tencent/qqnt/kernel/nativeinterface/EmojiHotPicGetHotWordsReqBody;", "Lcom/tencent/qqnt/kernel/nativeinterface/IEmojiGetHotPicHotWordsResultCallback;", "getHotPicHotWords", "Lcom/tencent/qqnt/kernel/nativeinterface/EmojiHotPicGetJumpInfoReqBody;", "Lcom/tencent/qqnt/kernel/nativeinterface/IEmojiHotPicGetJumpInfoResultCallback;", "getHotPicJumpInfo", "Lcom/tencent/qqnt/kernel/nativeinterface/JoinDragonGroupEmojiReq;", "req", "Lcom/tencent/qqnt/kernel/nativeinterface/IJoinDragonGroupCallback;", "i0", "Lcom/tencent/qqnt/kernel/nativeinterface/DevInfo;", "devInfo", "kickOffLine", "switchForeGround", "Lcom/tencent/qqnt/kernel/nativeinterface/BackGroundInfo;", "backInfo", "switchBackGround", "", "tokenInfo", "setTokenForMqq", "isTop", "setContactLocalTop", "getMsgSetting", "Lcom/tencent/qqnt/kernel/nativeinterface/MsgSetting;", "msgSetting", "setMsgSetting", "Ljava/util/ArrayList;", "Lkotlin/collections/ArrayList;", "msgElements", UserInfo.SEX_FEMALE, "Ljava/util/HashMap;", "Lcom/tencent/qqnt/kernel/nativeinterface/MsgAttributeInfo;", "Lkotlin/collections/HashMap;", "msgAttrs", SmsPlugin.API_SEND_SMS, "o0", "Lcom/tencent/qqnt/kernel/nativeinterface/LocalAVRecordElement;", "localAVRecordElement", "callback", "addLocalAVRecordMsg", "msgIds", "srcContact", "dstContacts", "commentElements", "Lcom/tencent/qqnt/kernel/nativeinterface/IForwardOperateCallback;", "forwardMsg", "rootMsgIds", "subMsgIds", "k", "Lcom/tencent/qqnt/kernel/nativeinterface/TargetFileInfo;", "fileInfo", "dstContact", "forwardFile", "Lcom/tencent/qqnt/kernel/nativeinterface/MultiMsgInfo;", "msgInfos", "t0", "rootMsgId", "parentMsgId", "Lcom/tencent/qqnt/kernel/nativeinterface/IGetMultiMsgCallback;", "getMultiMsg", "chatType", "j0", "(I)Ljava/lang/Long;", "startMsgSync", "cnt", "Lcom/tencent/qqnt/kernel/nativeinterface/IMsgOperateCallback;", "getLatestDbMsgs", "contacts", "getLastMessageList", "Lcom/tencent/qqnt/kernel/nativeinterface/IGetAioFirstViewLatestMsgCallback;", "getAioFirstViewLatestMsgs", "queryOrder", "getMsgs", "callbackInMainThread", "k6", "getMsgsIncludeSelf", "Lcom/tencent/qqnt/kernel/nativeinterface/GetMsgsAndStatusRecord;", QQPermissionConstants.Permission.AUIDO_GROUP, "Lcom/tencent/qqnt/kernel/nativeinterface/IGetMsgWithStatusCallback;", "getMsgsWithStatus", "msgSeq", "getMsgsBySeqAndCount", "includeDeleteMsg", "n0", "Lcom/tencent/qqnt/kernel/nativeinterface/MsgsReq;", "Lcom/tencent/qqnt/kernel/nativeinterface/IMsgsRspOperateCallback;", "getMsgsExt", ICustomDataEditor.NUMBER_PARAM_6, "Lcom/tencent/qqnt/kernel/nativeinterface/TempChatPrepareInfo;", "preInfo", "prepareTempChat", "peerUid", "Lcom/tencent/qqnt/kernel/nativeinterface/IGetTempChatInfoCallback;", "getTempChatInfo", "getMsgsByMsgId", "sourceMsgSeq", "getSourceOfReplyMsg", "replyMsgId", "getSourceOfReplyMsgV2", "getSingleMsg", "msgClientSeq", "msgTime", "getMsgByClientSeqAndTime", "Lcom/tencent/qqnt/kernel/nativeinterface/MsgTypeFilter;", "typeFilters", "getMsgsByTypeFilters", "cancelSendMsg", "resendMsg", "stopGenerateMsg", "regenerateMsg", "recallMsg", "reeditRecallMsg", "Lcom/tencent/qqnt/kernel/nativeinterface/InlineKeyboardClickInfo;", "inlineKeyboardClickInfo", "Lcom/tencent/qqnt/kernel/nativeinterface/IClickInlineKeyboardButtonCallback;", "clickInlineKeyboardButton", "Lcom/tencent/qqnt/kernel/nativeinterface/TofuActionButton;", "button", "clickTofuActionButton", "getRecallMsgsByMsgId", "deleteMsg", "elemId", "extBufForUI", "updateElementExtBufForUI", "extPbBufForUI", "updateMsgRecordExtPbBufForUI", "setFocusOnBase", "getGroupMsgStorageTime", "()Ljava/lang/Long;", "richFlag", "setMsgRichInfoFlag", "Lcom/tencent/qqnt/kernel/nativeinterface/RichMediaElementGetReq;", "getReq", "getRichMediaElement", "cancelGetRichMediaElement", "Lcom/tencent/qqnt/kernel/nativeinterface/RichMediaFilePathInfo;", "richMediaFilePathInfo", "assembleMobileQQRichMediaFilePath", "getRichMediaFilePathForMobileQQSend", "getRichMediaFilePathForGuild", "setMsgRead", "setAllC2CAndGroupMsgRead", "Lcom/tencent/qqnt/kernel/nativeinterface/MsgRecord;", "lastMsg", "setMsgReadAndReport", "setSpecificMsgReadAndReport", "setLocalMsgRead", "isMarkUnread", "setMarkUnreadFlag", "Lcom/tencent/qqnt/kernel/nativeinterface/IGetMsgAbstractsCallback;", "getMsgAbstract", "getContactUnreadCnt", "peers", "j", "Lcom/tencent/qqnt/kernel/nativeinterface/GetArgMsgConfigReqInfo;", "Lcom/tencent/qqnt/kernel/nativeinterface/IGetArkMsgConfigCallback;", "y", "Lcom/tencent/qqnt/kernel/nativeinterface/GetArkToMarkdownMsgTemplateReqInfo;", "reqInfo", "Lcom/tencent/qqnt/kernel/nativeinterface/IGetArkToMarkdownMsgTemplateCallback;", "k0", "Lcom/tencent/qqnt/kernel/nativeinterface/IGetMsgSeqCallback;", "getFirstUnreadMsgSeq", "time", "Lcom/tencent/qqnt/kernel/nativeinterface/IQueryFirstRoamMsgCallback;", "queryFirstRoamMsg", "clientSeq", "needIncludeSelf", "incloudeDeleteMsg", "getMsgsWithMsgTimeAndClientSeqForC2C", "Lcom/tencent/qqnt/kernel/nativeinterface/IGetRecentUseEmojiListCallback;", "getRecentUseEmojiList", "getRecentEmojiList", "emojiId", "emojiType", "setEmoji", "Lcom/tencent/qqnt/kernel/nativeinterface/ISetMsgEmojiLikesCallback;", "setMsgEmojiLikes", "cookie", "bForward", "number", "Lcom/tencent/qqnt/kernel/nativeinterface/IGetMsgEmojiLikesListCallback;", "getMsgEmojiLikesList", "msgEventInfo", "setCurOnScreenMsgForMsgEvent", "Lcom/tencent/qqnt/kernel/nativeinterface/IClearMsgRecordsCallback;", "clearMsgRecords", "O", "setDraft", "Lcom/tencent/qqnt/kernel/nativeinterface/IGetDraftOperateCallback;", "getDraft", "rootSeq", "setReplyDraft", "getReplyDraft", "deleteReplyDraft", "contact", "Lcom/tencent/qqnt/kernelpublic/nativeinterface/LocalGrayTipElement;", "localGrayTipType", "needStore", "addLocalGrayTipMsg", "Lcom/tencent/qqnt/kernelpublic/nativeinterface/JsonGrayElement;", "jsonGrayTipElement", "Lcom/tencent/qqnt/kernel/nativeinterface/JsonGrayMsgInfo;", "jsonGrayMsgInfo", "needRecentContact", "Lcom/tencent/qqnt/kernel/nativeinterface/IAddJsonGrayTipMsgCallback;", "y0", "Lcom/tencent/qqnt/kernel/nativeinterface/TofuRecordElement;", "tofuRecordElement", "addLocalTofuRecordMsg", QQBrowserActivity.KEY_MSG_TYPE, "front", "w", "Lcom/tencent/qqnt/kernel/nativeinterface/AddLocalRecordMsgParams;", "addLocalMsgParams", "b", "businessType", "msgSubType", "registerSysMsgNotification", "unregisterSysMsgNotification", "deleteDraft", "Lcom/tencent/qqnt/kernel/nativeinterface/IGetMsgsBoxesCallback;", "getABatchOfContactMsgBoxInfo", "Lcom/tencent/qqnt/kernel/nativeinterface/DelMarketEmojiTabReq;", "Lcom/tencent/qqnt/kernel/nativeinterface/IDelMarketEmojiTableCallback;", "delMarketEmojiTab", "Lcom/tencent/qqnt/kernel/nativeinterface/FetchBottomEmojiTableListReq;", "Lcom/tencent/qqnt/kernel/nativeinterface/IFetchBottomEmojiTableListCallback;", "fetchBottomEmojiTableList", "Lcom/tencent/qqnt/kernel/nativeinterface/MoveBottomEmojiTableReq;", "Lcom/tencent/qqnt/kernel/nativeinterface/IMoveBottomEmojiTableCallback;", "moveBottomEmojiTable", "Lcom/tencent/qqnt/kernel/nativeinterface/ModifyBottomEmojiTableSwitchStatusReq;", "Lcom/tencent/qqnt/kernel/nativeinterface/IModifyBottomEmojiTableSwitchStatusCallback;", "modifyBottomEmojiTableSwitchStatus", EmojiManagerServiceProxy.EPID, "fetchMarketEmotionJsonFile", "eIds", "Lcom/tencent/qqnt/kernel/nativeinterface/IGetMarketEmoticonEncryptKeysCallback;", "getMarketEmoticonEncryptKeys", "U", "J0", "Lcom/tencent/qqnt/kernel/nativeinterface/QueryMsgsParams;", "params", "queryMsgsWithFilter", "queryMsgsWithFilterEx", MiniAppGetGameTaskTicketServlet.KEY_TASKID, "taskType", "isGuest", "Lcom/tencent/qqnt/kernel/nativeinterface/AttaReportData;", "attaReportData", "Lcom/tencent/qqnt/kernel/nativeinterface/ISetMsgEmojiLikesForRoleCallback;", "setMsgEmojiLikesForRole", "queryPicOrVideoMsgs", "queryEmoticonMsgs", "queryTroopEmoticonMsgs", "queryShortVideoMsgs", "Lcom/tencent/qqnt/kernel/nativeinterface/EnterOrExitAioInfo;", "infoList", "enterOrExitAio", "isPowerOn", "setPowerStatus", "importOldDbMsg", "stopImportOldDbMsgAndroid", "Lcom/tencent/qqnt/kernel/nativeinterface/ICanImportCallback;", "canImportOldDbMsg", "isMqqDataImportFinished", "Lcom/tencent/qqnt/kernel/nativeinterface/IDataImportTableNamesCallback;", "getMqqDataImportTableNames", "curDate", "Lcom/tencent/qqnt/kernel/nativeinterface/IQueryCalendarCallback;", "queryRoamCalendar", "eventType", "toUid", "sendShowInputStatusReq", "groupId", "isAnonymousChat", "Lcom/tencent/qqnt/kernel/nativeinterface/ISwitchAnonymousChatCallback;", "switchAnonymousChat", "Lcom/tencent/qqnt/kernel/nativeinterface/IRenameAnonymousChatNickCallback;", "renameAnonyChatNick", "Lcom/tencent/qqnt/kernel/nativeinterface/GroupAnonymousInfo;", "getAnonymousInfo", "getDataImportUserLevel", "()Ljava/lang/Integer;", "importDataLineMsg", "uin", "getCurChatImportStatusByUin", "(JI)Ljava/lang/Integer;", "info", "updateAnonymousInfo", "selfTinyId", "peerTinyId", "createUidFromTinyId", "canProcessDataMigration", "Lcom/tencent/qqnt/kernel/nativeinterface/IQueryMsgsAndAbstractsWithFilterCallback;", "queryMsgsAndAbstractsWithFilter", "reqToOfflineSendMsg", "refuseReceiveOnlineFileMsg", "Lcom/tencent/qqnt/kernel/nativeinterface/IOperateHiddenSessionCallback;", "getRecentHiddenSesionList", "Lcom/tencent/qqnt/kernel/nativeinterface/RecentHiddenSesionInfo;", "infos", "setRecentHiddenSession", "delRecentHiddenSession", "getCurHiddenSession", "setCurHiddenSession", "Lcom/tencent/qqnt/kernel/nativeinterface/IDataMigrationGetAvailableContactListCallback;", "dataMigrationGetDataAvaiableContactList", "Lcom/tencent/qqnt/kernel/nativeinterface/IDataMigrationGetMsgListCalback;", "dataMigrationGetMsgList", "(Lcom/tencent/qqnt/kernel/nativeinterface/QueryMsgsParams;Lcom/tencent/qqnt/kernel/nativeinterface/IDataMigrationGetMsgListCalback;)Ljava/lang/Long;", "Lcom/tencent/qqnt/kernel/nativeinterface/DataMigrationMsgInfo;", "msgInfoList", "Lcom/tencent/qqnt/kernel/nativeinterface/DataMigrationResourceInfo;", "resourceInfoList", "Lcom/tencent/qqnt/kernel/nativeinterface/ITaskFinishCallback;", "dataMigrationImportMsgPbRecord", "(Ljava/util/ArrayList;Ljava/util/ArrayList;Lcom/tencent/qqnt/kernel/nativeinterface/ITaskFinishCallback;)Ljava/lang/Long;", "dataMigrationGetResourceLocalDestinyPath", "o", "Lcom/tencent/qqnt/kernel/nativeinterface/FeedBackMsgInfo;", "msgInfo", "Lcom/tencent/qqnt/kernel/nativeinterface/FeedBackDataForMsg;", "feedBackData", "likeOrDislikeReportForMsg", "enable", "setSubscribeFolderUsingSmallRedPoint", "Lcom/tencent/qqnt/kernel/nativeinterface/PublicAccountInfo;", "updatePublicAccountInfo", "feedBackReportForMsg", "setMsgReadByChatType", "Lcom/tencent/qqnt/kernel/nativeinterface/MiscData;", "value", "setMiscDataVer2", "Lcom/tencent/qqnt/kernel/nativeinterface/MiscKeyInfo;", "keyInfo", "Lcom/tencent/qqnt/kernel/nativeinterface/IGetMiscDataCallback;", "getMiscDataVer2", "Lcom/tencent/qqnt/kernel/nativeinterface/SourceMsgInfoForReplyMsg;", "sourceMsgInfo", "replyElements", "msgAttributeInfos", "Lcom/tencent/qqnt/kernel/nativeinterface/IReplyMsgWithSourceMsgInfoCallback;", "replyMsgWithSourceMsgInfo", "d", "Z", "mIsMsgSyncStart", "e", "mIsMsgSyncEnd", "", "f", "Ljava/util/List;", "mExpandListenerList", "", tl.h.F, "Ljava/util/Map;", "mTempChatSigListenerMap", "Lkotlin/Function1;", "Lcom/tencent/qqnt/kernel/nativeinterface/ContactMsgBoxInfo;", "i", "onMsgBoxChangedListeners", "service", "Lcom/tencent/qqnt/kernel/api/impl/py;", "content", "<init>", "(Lcom/tencent/qqnt/kernel/nativeinterface/IKernelMsgService;Lcom/tencent/qqnt/kernel/api/impl/py;)V", QCircleScheme.AttrQQPublish.INPUT_TAB_MAGIC_STUDIO, "a", "kernel_impl_release"}, k = 1, mv = {1, 7, 1})
/* loaded from: classes24.dex */
public final class MsgService extends MsgBaseService<IKernelMsgListener, IKernelMsgService> implements com.tencent.qqnt.kernel.api.w {
    static IPatchRedirector $redirector_;

    /* renamed from: m, reason: collision with root package name and from kotlin metadata */
    @NotNull
    public static final Companion INSTANCE;

    /* renamed from: d, reason: collision with root package name and from kotlin metadata */
    private boolean mIsMsgSyncStart;

    /* renamed from: e, reason: collision with root package name and from kotlin metadata */
    private boolean mIsMsgSyncEnd;

    /* renamed from: f, reason: collision with root package name and from kotlin metadata */
    @NotNull
    private List<com.tencent.qqnt.kernel.invorker.b> mExpandListenerList;

    /* renamed from: h, reason: collision with root package name and from kotlin metadata */
    @NotNull
    private Map<ITempChatSigListener, Long> mTempChatSigListenerMap;

    /* renamed from: i, reason: collision with root package name and from kotlin metadata */
    @NotNull
    private final List<Function1<ArrayList<ContactMsgBoxInfo>, Unit>> onMsgBoxChangedListeners;

    /* compiled from: P */
    @Metadata(d1 = {"\u0000\u0010\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0002\u0010\u000e\n\u0002\b\u0005\b\u0086\u0003\u0018\u00002\u00020\u0001B\t\b\u0002\u00a2\u0006\u0004\b\u0005\u0010\u0006R\u0014\u0010\u0003\u001a\u00020\u00028\u0006X\u0086T\u00a2\u0006\u0006\n\u0004\b\u0003\u0010\u0004\u00a8\u0006\u0007"}, d2 = {"Lcom/tencent/qqnt/kernel/api/impl/MsgService$a;", "", "", "SUB_TAG", "Ljava/lang/String;", "<init>", "()V", "kernel_impl_release"}, k = 1, mv = {1, 7, 1})
    /* renamed from: com.tencent.qqnt.kernel.api.impl.MsgService$a, reason: from kotlin metadata */
    /* loaded from: classes24.dex */
    public static final class Companion {
        static IPatchRedirector $redirector_;

        public /* synthetic */ Companion(DefaultConstructorMarker defaultConstructorMarker) {
            this();
            IPatchRedirector iPatchRedirector = $redirector_;
            if (iPatchRedirector == null || !iPatchRedirector.hasPatch((short) 2)) {
                return;
            }
            iPatchRedirector.redirect((short) 2, (Object) this, (Object) defaultConstructorMarker);
        }

        Companion() {
            IPatchRedirector iPatchRedirector = $redirector_;
            if (iPatchRedirector == null || !iPatchRedirector.hasPatch((short) 1)) {
                return;
            }
            iPatchRedirector.redirect((short) 1, (Object) this);
        }
    }

    /* compiled from: P */
    @Metadata(d1 = {"\u0000\u0011\n\u0000\n\u0002\u0018\u0002\n\u0002\u0010\u0002\n\u0002\b\u0004*\u0001\u0000\b\n\u0018\u00002\u00020\u0001J\b\u0010\u0003\u001a\u00020\u0002H\u0016J\b\u0010\u0004\u001a\u00020\u0002H\u0016J\b\u0010\u0005\u001a\u00020\u0002H\u0016\u00a8\u0006\u0006"}, d2 = {"com/tencent/qqnt/kernel/api/impl/MsgService$b", "Lcom/tencent/qqnt/kernel/nativeinterface/IKernelMsgListener;", "", "onNtMsgSyncStart", "onNtFirstViewMsgSyncEnd", "onNtMsgSyncEnd", "kernel_impl_release"}, k = 1, mv = {1, 7, 1})
    /* loaded from: classes24.dex */
    public static final class b implements IKernelMsgListener {
        static IPatchRedirector $redirector_;

        b() {
            IPatchRedirector iPatchRedirector = $redirector_;
            if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 1)) {
                iPatchRedirector.redirect((short) 1, (Object) this, (Object) MsgService.this);
            }
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onAddSendMsg(MsgRecord msgRecord) {
            com.tencent.qqnt.kernel.nativeinterface.ax.a(this, msgRecord);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onContactUnreadCntUpdate(HashMap hashMap) {
            com.tencent.qqnt.kernel.nativeinterface.ax.b(this, hashMap);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onCustomWithdrawConfigUpdate(CustomWithdrawConfig customWithdrawConfig) {
            com.tencent.qqnt.kernel.nativeinterface.ax.c(this, customWithdrawConfig);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onDraftUpdate(Contact contact, ArrayList arrayList, long j3) {
            com.tencent.qqnt.kernel.nativeinterface.ax.d(this, contact, arrayList, j3);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onEmojiDownloadComplete(EmojiNotifyInfo emojiNotifyInfo) {
            com.tencent.qqnt.kernel.nativeinterface.ax.e(this, emojiNotifyInfo);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onEmojiResourceUpdate(EmojiResourceInfo emojiResourceInfo) {
            com.tencent.qqnt.kernel.nativeinterface.ax.f(this, emojiResourceInfo);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onFileMsgCome(ArrayList arrayList) {
            com.tencent.qqnt.kernel.nativeinterface.ax.g(this, arrayList);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onGrabPasswordRedBag(int i3, String str, int i16, RecvdOrder recvdOrder, MsgRecord msgRecord) {
            com.tencent.qqnt.kernel.nativeinterface.ax.h(this, i3, str, i16, recvdOrder, msgRecord);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onGroupFileInfoAdd(GroupItem groupItem) {
            com.tencent.qqnt.kernel.nativeinterface.ax.i(this, groupItem);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onGroupFileInfoUpdate(GroupFileListResult groupFileListResult) {
            com.tencent.qqnt.kernel.nativeinterface.ax.j(this, groupFileListResult);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onGroupTransferInfoAdd(GroupItem groupItem) {
            com.tencent.qqnt.kernel.nativeinterface.ax.k(this, groupItem);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onGroupTransferInfoUpdate(GroupFileListResult groupFileListResult) {
            com.tencent.qqnt.kernel.nativeinterface.ax.l(this, groupFileListResult);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onHitCsRelatedEmojiResult(DownloadRelateEmojiResultInfo downloadRelateEmojiResultInfo) {
            com.tencent.qqnt.kernel.nativeinterface.ax.m(this, downloadRelateEmojiResultInfo);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onHitEmojiKeywordResult(HitRelatedEmojiWordsResult hitRelatedEmojiWordsResult) {
            com.tencent.qqnt.kernel.nativeinterface.ax.n(this, hitRelatedEmojiWordsResult);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onHitRelatedEmojiResult(RelatedWordEmojiInfo relatedWordEmojiInfo) {
            com.tencent.qqnt.kernel.nativeinterface.ax.o(this, relatedWordEmojiInfo);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onImportOldDbProgressUpdate(ImportOldDbMsgNotifyInfo importOldDbMsgNotifyInfo) {
            com.tencent.qqnt.kernel.nativeinterface.ax.p(this, importOldDbMsgNotifyInfo);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onInputStatusPush(InputStatusInfo inputStatusInfo) {
            com.tencent.qqnt.kernel.nativeinterface.ax.q(this, inputStatusInfo);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onKickedOffLine(KickedInfo kickedInfo) {
            com.tencent.qqnt.kernel.nativeinterface.ax.r(this, kickedInfo);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onLineDev(ArrayList arrayList) {
            com.tencent.qqnt.kernel.nativeinterface.ax.s(this, arrayList);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onLogLevelChanged(long j3) {
            com.tencent.qqnt.kernel.nativeinterface.ax.t(this, j3);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onMiscDataChanged(ArrayList arrayList) {
            com.tencent.qqnt.kernel.nativeinterface.ax.u(this, arrayList);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onMsgBoxChanged(ArrayList arrayList) {
            com.tencent.qqnt.kernel.nativeinterface.ax.v(this, arrayList);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onMsgDelete(Contact contact, ArrayList arrayList) {
            com.tencent.qqnt.kernel.nativeinterface.ax.w(this, contact, arrayList);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onMsgInfoListAdd(ArrayList arrayList) {
            com.tencent.qqnt.kernel.nativeinterface.ax.x(this, arrayList);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onMsgInfoListUpdate(ArrayList arrayList) {
            com.tencent.qqnt.kernel.nativeinterface.ax.y(this, arrayList);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onMsgQRCodeStatusChanged(int i3) {
            com.tencent.qqnt.kernel.nativeinterface.ax.z(this, i3);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onMsgRecall(int i3, String str, long j3) {
            com.tencent.qqnt.kernel.nativeinterface.ax.A(this, i3, str, j3);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onMsgSecurityNotify(MsgRecord msgRecord) {
            com.tencent.qqnt.kernel.nativeinterface.ax.B(this, msgRecord);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onMsgSettingUpdate(MsgSetting msgSetting) {
            com.tencent.qqnt.kernel.nativeinterface.ax.C(this, msgSetting);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onMsgWithRichLinkInfoUpdate(ArrayList arrayList) {
            com.tencent.qqnt.kernel.nativeinterface.ax.D(this, arrayList);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public void onNtFirstViewMsgSyncEnd() {
            IPatchRedirector iPatchRedirector = $redirector_;
            if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 3)) {
                iPatchRedirector.redirect((short) 3, (Object) this);
            } else {
                KLog.i(KLog.f359087a, "MsgService", new Object[]{"onNtFirstViewMsgSyncEnd"}, null, 4, null);
                com.tencent.qqnt.kernel.utils.h.f359261a.d();
            }
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onNtMsgSyncContactUnread() {
            com.tencent.qqnt.kernel.nativeinterface.ax.F(this);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public void onNtMsgSyncEnd() {
            IPatchRedirector iPatchRedirector = $redirector_;
            if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 4)) {
                iPatchRedirector.redirect((short) 4, (Object) this);
                return;
            }
            KLog.i(KLog.f359087a, "MsgService", new Object[]{"onNtMsgSyncEnd"}, null, 4, null);
            MsgService.this.mIsMsgSyncEnd = true;
            ((IKernelSetter) QRoute.api(IKernelSetter.class)).onAfterSyncMsg();
            com.tencent.qqnt.kernel.utils.h.f359261a.c();
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public void onNtMsgSyncStart() {
            IPatchRedirector iPatchRedirector = $redirector_;
            if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 2)) {
                iPatchRedirector.redirect((short) 2, (Object) this);
            } else {
                KLog.i(KLog.f359087a, "MsgService", new Object[]{"onNtMsgSyncStart"}, null, 4, null);
                MsgService.this.mIsMsgSyncStart = true;
            }
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onRecvMsg(ArrayList arrayList) {
            com.tencent.qqnt.kernel.nativeinterface.ax.I(this, arrayList);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onRecvMsgSvrRspTransInfo(long j3, Contact contact, int i3, int i16, String str, byte[] bArr) {
            com.tencent.qqnt.kernel.nativeinterface.ax.J(this, j3, contact, i3, i16, str, bArr);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onRecvOnlineFileMsg(ArrayList arrayList) {
            com.tencent.qqnt.kernel.nativeinterface.ax.K(this, arrayList);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onRecvSysMsg(ArrayList arrayList) {
            com.tencent.qqnt.kernel.nativeinterface.ax.L(this, arrayList);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onRedTouchChanged() {
            com.tencent.qqnt.kernel.nativeinterface.ax.M(this);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onRichMediaDownloadComplete(FileTransNotifyInfo fileTransNotifyInfo) {
            com.tencent.qqnt.kernel.nativeinterface.ax.N(this, fileTransNotifyInfo);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onRichMediaProgerssUpdate(FileTransNotifyInfo fileTransNotifyInfo) {
            com.tencent.qqnt.kernel.nativeinterface.ax.O(this, fileTransNotifyInfo);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onRichMediaUploadComplete(FileTransNotifyInfo fileTransNotifyInfo) {
            com.tencent.qqnt.kernel.nativeinterface.ax.P(this, fileTransNotifyInfo);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onSearchGroupFileInfoUpdate(SearchGroupFileResult searchGroupFileResult) {
            com.tencent.qqnt.kernel.nativeinterface.ax.Q(this, searchGroupFileResult);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onSendMsgError(long j3, Contact contact, int i3, String str) {
            com.tencent.qqnt.kernel.nativeinterface.ax.R(this, j3, contact, i3, str);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onSysMsgNotification(int i3, long j3, long j16, boolean z16, ArrayList arrayList) {
            com.tencent.qqnt.kernel.nativeinterface.ax.S(this, i3, j3, j16, z16, arrayList);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onTempChatInfoUpdate(TempChatInfo tempChatInfo) {
            com.tencent.qqnt.kernel.nativeinterface.ax.T(this, tempChatInfo);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onUserChannelTabStatusChanged(boolean z16) {
            com.tencent.qqnt.kernel.nativeinterface.ax.U(this, z16);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onUserOnlineStatusChanged(boolean z16) {
            com.tencent.qqnt.kernel.nativeinterface.ax.V(this, z16);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onUserSecQualityChanged(QueryUserSecQualityRsp queryUserSecQualityRsp) {
            com.tencent.qqnt.kernel.nativeinterface.ax.W(this, queryUserSecQualityRsp);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onUserTabStatusChanged(ArrayList arrayList) {
            com.tencent.qqnt.kernel.nativeinterface.ax.X(this, arrayList);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onlineStatusBigIconDownloadPush(int i3, long j3, String str) {
            com.tencent.qqnt.kernel.nativeinterface.ax.Y(this, i3, j3, str);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onlineStatusSmallIconDownloadPush(int i3, long j3, String str) {
            com.tencent.qqnt.kernel.nativeinterface.ax.Z(this, i3, j3, str);
        }
    }

    /* compiled from: P */
    @Metadata(d1 = {"\u0000#\n\u0000\n\u0002\u0018\u0002\n\u0002\u0010\b\n\u0000\n\u0002\u0010\u000e\n\u0000\n\u0002\u0010\u0012\n\u0000\n\u0002\u0010\u0002\n\u0002\b\u0003*\u0001\u0000\b\n\u0018\u00002\u00020\u0001J$\u0010\t\u001a\u00020\b2\u0006\u0010\u0003\u001a\u00020\u00022\b\u0010\u0005\u001a\u0004\u0018\u00010\u00042\b\u0010\u0007\u001a\u0004\u0018\u00010\u0006H\u0016J\u001a\u0010\n\u001a\u00020\u00062\u0006\u0010\u0003\u001a\u00020\u00022\b\u0010\u0005\u001a\u0004\u0018\u00010\u0004H\u0016\u00a8\u0006\u000b"}, d2 = {"com/tencent/qqnt/kernel/api/impl/MsgService$c", "Lcom/tencent/qqnt/kernel/nativeinterface/ITempChatSigListener;", "", "chatType", "", "uid", "", PreloadTRTCPlayerParams.KEY_SIG, "", "onRecvTempChatSig", "getTempChatSig", "kernel_impl_release"}, k = 1, mv = {1, 7, 1})
    /* loaded from: classes24.dex */
    public static final class c implements ITempChatSigListener {
        static IPatchRedirector $redirector_;

        /* renamed from: b, reason: collision with root package name */
        final /* synthetic */ ITempChatSigListener f357304b;

        c(ITempChatSigListener iTempChatSigListener) {
            this.f357304b = iTempChatSigListener;
            IPatchRedirector iPatchRedirector = $redirector_;
            if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 1)) {
                iPatchRedirector.redirect((short) 1, (Object) this, (Object) MsgService.this, (Object) iTempChatSigListener);
            }
        }

        /* JADX INFO: Access modifiers changed from: private */
        public static final void b(ITempChatSigListener listener, int i3, String str, byte[] bArr) {
            Intrinsics.checkNotNullParameter(listener, "$listener");
            listener.onRecvTempChatSig(i3, str, bArr);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.ITempChatSigListener
        @NotNull
        public byte[] getTempChatSig(int chatType, @Nullable String uid) {
            IPatchRedirector iPatchRedirector = $redirector_;
            if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 3)) {
                return (byte[]) iPatchRedirector.redirect((short) 3, (Object) this, chatType, (Object) uid);
            }
            byte[] sig = this.f357304b.getTempChatSig(chatType, uid);
            KLog.i(KLog.f359087a, "MsgService", new Object[]{"CRM getCrmTempSig uid=" + uid + " chattype=" + chatType}, null, 4, null);
            Intrinsics.checkNotNullExpressionValue(sig, "sig");
            return sig;
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.ITempChatSigListener
        public void onRecvTempChatSig(final int chatType, @Nullable final String uid, @Nullable final byte[] sig) {
            IPatchRedirector iPatchRedirector = $redirector_;
            if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 2)) {
                iPatchRedirector.redirect((short) 2, this, Integer.valueOf(chatType), uid, sig);
                return;
            }
            KLog.i(KLog.f359087a, "MsgService", new Object[]{"CRM onRecvCrmTempSig chatType=" + chatType + " uid=" + uid}, null, 4, null);
            MsgService msgService = MsgService.this;
            final ITempChatSigListener iTempChatSigListener = this.f357304b;
            msgService.postHandle(new Runnable() { // from class: com.tencent.qqnt.kernel.api.impl.jy
                @Override // java.lang.Runnable
                public final void run() {
                    MsgService.c.b(ITempChatSigListener.this, chatType, uid, sig);
                }
            });
        }
    }

    /* compiled from: P */
    @Metadata(d1 = {"\u0000\u00b1\u0001\n\u0000\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0010\t\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\b\n\u0000\n\u0002\u0010\u000e\n\u0002\b\u0004\n\u0002\u0010\u0012\n\u0002\b\t\n\u0002\u0010\u000b\n\u0000\n\u0002\u0010\u0005\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0007\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0006*\u0001\u0000\b\n\u0018\u00002\u00020\u0001J \u0010\u0007\u001a\u00020\u00062\u0016\u0010\u0005\u001a\u0012\u0012\u0004\u0012\u00020\u00030\u0002j\b\u0012\u0004\u0012\u00020\u0003`\u0004H\u0016J\u0010\u0010\n\u001a\u00020\u00062\u0006\u0010\t\u001a\u00020\bH\u0016J\u0010\u0010\r\u001a\u00020\u00062\u0006\u0010\f\u001a\u00020\u000bH\u0016J,\u0010\u0016\u001a\u00020\u00062\u0006\u0010\u000f\u001a\u00020\u000e2\b\u0010\u0011\u001a\u0004\u0018\u00010\u00102\u0006\u0010\u0013\u001a\u00020\u00122\b\u0010\u0015\u001a\u0004\u0018\u00010\u0014H\u0016J>\u0010\u001b\u001a\u00020\u00062\u0006\u0010\u000f\u001a\u00020\u000e2\b\u0010\u0011\u001a\u0004\u0018\u00010\u00102\u0006\u0010\u0017\u001a\u00020\u00122\u0006\u0010\u0018\u001a\u00020\u00122\b\u0010\u0015\u001a\u0004\u0018\u00010\u00142\b\u0010\u001a\u001a\u0004\u0018\u00010\u0019H\u0016J$\u0010\u001d\u001a\u00020\u00062\u001a\u0010\u001c\u001a\u0016\u0012\u0004\u0012\u00020\u000b\u0018\u00010\u0002j\n\u0012\u0004\u0012\u00020\u000b\u0018\u0001`\u0004H\u0016J$\u0010\u001e\u001a\u00020\u00062\u001a\u0010\u001c\u001a\u0016\u0012\u0004\u0012\u00020\u000b\u0018\u00010\u0002j\n\u0012\u0004\u0012\u00020\u000b\u0018\u0001`\u0004H\u0016J \u0010\u001f\u001a\u00020\u00062\u0016\u0010\u001c\u001a\u0012\u0012\u0004\u0012\u00020\u000b0\u0002j\b\u0012\u0004\u0012\u00020\u000b`\u0004H\u0016JD\u0010'\u001a\u00020\u00062\u0006\u0010 \u001a\u00020\u00122\u0006\u0010!\u001a\u00020\u000e2\u0006\u0010\"\u001a\u00020\u000e2\u0006\u0010$\u001a\u00020#2\u001a\u0010&\u001a\u0016\u0012\u0004\u0012\u00020%\u0018\u00010\u0002j\n\u0012\u0004\u0012\u00020%\u0018\u0001`\u0004H\u0016J$\u0010(\u001a\u00020\u00062\u001a\u0010&\u001a\u0016\u0012\u0004\u0012\u00020%\u0018\u00010\u0002j\n\u0012\u0004\u0012\u00020%\u0018\u0001`\u0004H\u0016J\u0012\u0010+\u001a\u00020\u00062\b\u0010*\u001a\u0004\u0018\u00010)H\u0016JX\u00100\u001a\u00020\u00062N\u0010/\u001aJ\u0012\u0004\u0012\u00020\u0012\u0012\u0010\u0012\u000e\u0012\u0004\u0012\u00020\u0014\u0012\u0004\u0012\u00020-0,\u0018\u00010,j,\u0012\u0004\u0012\u00020\u0012\u0012 \u0012\u001e\u0012\u0004\u0012\u00020\u0014\u0012\u0004\u0012\u00020-0,j\u000e\u0012\u0004\u0012\u00020\u0014\u0012\u0004\u0012\u00020-`.\u0018\u0001`.H\u0016J*\u00104\u001a\u00020\u00062\b\u0010\u0011\u001a\u0004\u0018\u00010\u00102\u000e\u00102\u001a\n\u0012\u0004\u0012\u000201\u0018\u00010\u00022\u0006\u00103\u001a\u00020\u000eH\u0016J\u0012\u00105\u001a\u00020\u00062\b\u0010*\u001a\u0004\u0018\u00010)H\u0016J\u0012\u00106\u001a\u00020\u00062\b\u0010*\u001a\u0004\u0018\u00010)H\u0016J\u0012\u00108\u001a\u00020\u00062\b\u0010*\u001a\u0004\u0018\u000107H\u0016J\u0012\u0010;\u001a\u00020\u00062\b\u0010:\u001a\u0004\u0018\u000109H\u0016J\b\u0010<\u001a\u00020\u0006H\u0016J\b\u0010=\u001a\u00020\u0006H\u0016J\b\u0010>\u001a\u00020\u0006H\u0016J.\u0010@\u001a\u00020\u00062\b\u0010\u0011\u001a\u0004\u0018\u00010\u00102\u001a\u0010?\u001a\u0016\u0012\u0004\u0012\u00020\u000e\u0018\u00010\u0002j\n\u0012\u0004\u0012\u00020\u000e\u0018\u0001`\u0004H\u0016J\u0018\u0010C\u001a\u00020\u00062\u000e\u0010B\u001a\n\u0012\u0004\u0012\u00020A\u0018\u00010\u0002H\u0016J\u0012\u0010F\u001a\u00020\u00062\b\u0010E\u001a\u0004\u0018\u00010DH\u0016J\u0012\u0010H\u001a\u00020\u00062\b\u0010*\u001a\u0004\u0018\u00010GH\u0016J\u0018\u0010K\u001a\u00020\u00062\u000e\u0010J\u001a\n\u0012\u0004\u0012\u00020I\u0018\u00010\u0002H\u0016J\u0012\u0010N\u001a\u00020\u00062\b\u0010M\u001a\u0004\u0018\u00010LH\u0016J\u0018\u0010O\u001a\u00020\u00062\u000e\u0010\u001c\u001a\n\u0012\u0004\u0012\u00020\u000b\u0018\u00010\u0002H\u0016J\u0012\u0010Q\u001a\u00020\u00062\b\u0010P\u001a\u0004\u0018\u00010\u000bH\u0016\u00a8\u0006R"}, d2 = {"com/tencent/qqnt/kernel/api/impl/MsgService$d", "Lcom/tencent/qqnt/kernel/nativeinterface/IKernelMsgListener;", "Ljava/util/ArrayList;", "Lcom/tencent/qqnt/kernel/nativeinterface/DevInfo;", "Lkotlin/collections/ArrayList;", "devList", "", "onLineDev", "Lcom/tencent/qqnt/kernel/nativeinterface/KickedInfo;", "kickedInfo", "onKickedOffLine", "Lcom/tencent/qqnt/kernel/nativeinterface/MsgRecord;", "msgRecord", "onAddSendMsg", "", "msgId", "Lcom/tencent/qqnt/kernelpublic/nativeinterface/Contact;", "peer", "", "errorCode", "", "errorMsg", "onSendMsgError", QCircleLpReportDc010001.KEY_SUBTYPE, "retCode", "", "transInfo", "onRecvMsgSvrRspTransInfo", TabPreloadItem.TAB_NAME_MESSAGE, "onMsgInfoListAdd", "onMsgInfoListUpdate", "onRecvMsg", "businessType", QQBrowserActivity.KEY_MSG_TYPE, "msgSubType", "", TPReportKeys.Common.COMMON_ONLINE, "", "msgBuf", "onSysMsgNotification", "onRecvSysMsg", "Lcom/tencent/qqnt/kernel/nativeinterface/FileTransNotifyInfo;", "notifyInfo", "onRichMediaDownloadComplete", "Ljava/util/HashMap;", "Lcom/tencent/qqnt/kernel/nativeinterface/UnreadCntInfo;", "Lkotlin/collections/HashMap;", "newUnreadCntInfos", "onContactUnreadCntUpdate", "Lcom/tencent/qqnt/kernel/nativeinterface/MsgElement;", "msgElements", "draftTime", "onDraftUpdate", "onRichMediaUploadComplete", "onRichMediaProgerssUpdate", "Lcom/tencent/qqnt/kernel/nativeinterface/EmojiNotifyInfo;", "onEmojiDownloadComplete", "Lcom/tencent/qqnt/kernel/nativeinterface/MsgSetting;", "msgSetting", "onMsgSettingUpdate", "onNtMsgSyncEnd", "onNtMsgSyncStart", "onNtFirstViewMsgSyncEnd", "msgIds", "onMsgDelete", "Lcom/tencent/qqnt/kernel/nativeinterface/ContactMsgBoxInfo;", "contactMsgBoxInfos", "onMsgBoxChanged", "Lcom/tencent/qqnt/kernel/nativeinterface/CustomWithdrawConfig;", DownloadInfo.spKey_Config, "onCustomWithdrawConfigUpdate", "Lcom/tencent/qqnt/kernel/nativeinterface/ImportOldDbMsgNotifyInfo;", "onImportOldDbProgressUpdate", "Lcom/tencent/qqnt/kernel/nativeinterface/MiscData;", "dataList", "onMiscDataChanged", "Lcom/tencent/qqnt/kernel/nativeinterface/InputStatusInfo;", "inputStatusInfo", "onInputStatusPush", "onFileMsgCome", "msg", "onMsgSecurityNotify", "kernel_impl_release"}, k = 1, mv = {1, 7, 1})
    /* loaded from: classes24.dex */
    public static final class d implements IKernelMsgListener {
        static IPatchRedirector $redirector_;

        /* renamed from: e, reason: collision with root package name */
        final /* synthetic */ IKernelMsgListener f357306e;

        d(IKernelMsgListener iKernelMsgListener) {
            this.f357306e = iKernelMsgListener;
            IPatchRedirector iPatchRedirector = $redirector_;
            if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 1)) {
                iPatchRedirector.redirect((short) 1, (Object) this, (Object) MsgService.this, (Object) iKernelMsgListener);
            }
        }

        /* JADX INFO: Access modifiers changed from: private */
        public static final void C(IKernelMsgListener listener, MsgRecord msgRecord) {
            Intrinsics.checkNotNullParameter(listener, "$listener");
            Intrinsics.checkNotNullParameter(msgRecord, "$msgRecord");
            listener.onAddSendMsg(msgRecord);
        }

        /* JADX INFO: Access modifiers changed from: private */
        public static final void D(IKernelMsgListener listener, HashMap hashMap) {
            Intrinsics.checkNotNullParameter(listener, "$listener");
            listener.onContactUnreadCntUpdate(hashMap);
        }

        /* JADX INFO: Access modifiers changed from: private */
        public static final void E(IKernelMsgListener listener, CustomWithdrawConfig customWithdrawConfig) {
            Intrinsics.checkNotNullParameter(listener, "$listener");
            listener.onCustomWithdrawConfigUpdate(customWithdrawConfig);
        }

        /* JADX INFO: Access modifiers changed from: private */
        public static final void F(IKernelMsgListener listener, Contact contact, ArrayList arrayList, long j3) {
            Intrinsics.checkNotNullParameter(listener, "$listener");
            listener.onDraftUpdate(contact, arrayList, j3);
        }

        /* JADX INFO: Access modifiers changed from: private */
        public static final void G(IKernelMsgListener listener, EmojiNotifyInfo emojiNotifyInfo) {
            Intrinsics.checkNotNullParameter(listener, "$listener");
            listener.onEmojiDownloadComplete(emojiNotifyInfo);
        }

        /* JADX INFO: Access modifiers changed from: private */
        public static final void H(IKernelMsgListener listener, ArrayList arrayList) {
            Intrinsics.checkNotNullParameter(listener, "$listener");
            listener.onFileMsgCome(arrayList);
        }

        /* JADX INFO: Access modifiers changed from: private */
        public static final void I(IKernelMsgListener listener, ImportOldDbMsgNotifyInfo importOldDbMsgNotifyInfo) {
            Intrinsics.checkNotNullParameter(listener, "$listener");
            listener.onImportOldDbProgressUpdate(importOldDbMsgNotifyInfo);
        }

        /* JADX INFO: Access modifiers changed from: private */
        public static final void J(IKernelMsgListener listener, InputStatusInfo inputStatusInfo) {
            Intrinsics.checkNotNullParameter(listener, "$listener");
            listener.onInputStatusPush(inputStatusInfo);
        }

        /* JADX INFO: Access modifiers changed from: private */
        public static final void K(IKernelMsgListener listener, KickedInfo kickedInfo) {
            Intrinsics.checkNotNullParameter(listener, "$listener");
            Intrinsics.checkNotNullParameter(kickedInfo, "$kickedInfo");
            listener.onKickedOffLine(kickedInfo);
        }

        /* JADX INFO: Access modifiers changed from: private */
        public static final void L(IKernelMsgListener listener, ArrayList devList) {
            Intrinsics.checkNotNullParameter(listener, "$listener");
            Intrinsics.checkNotNullParameter(devList, "$devList");
            listener.onLineDev(devList);
        }

        /* JADX INFO: Access modifiers changed from: private */
        public static final void M(IKernelMsgListener listener, ArrayList arrayList) {
            Intrinsics.checkNotNullParameter(listener, "$listener");
            listener.onMiscDataChanged(arrayList);
        }

        /* JADX INFO: Access modifiers changed from: private */
        public static final void N(IKernelMsgListener listener, ArrayList arrayList) {
            Intrinsics.checkNotNullParameter(listener, "$listener");
            listener.onMsgBoxChanged(arrayList);
        }

        /* JADX INFO: Access modifiers changed from: private */
        public static final void O(IKernelMsgListener listener, Contact contact, ArrayList arrayList) {
            Intrinsics.checkNotNullParameter(listener, "$listener");
            listener.onMsgDelete(contact, arrayList);
        }

        /* JADX INFO: Access modifiers changed from: private */
        public static final void P(IKernelMsgListener listener, ArrayList arrayList) {
            Intrinsics.checkNotNullParameter(listener, "$listener");
            listener.onMsgInfoListAdd(arrayList);
        }

        /* JADX INFO: Access modifiers changed from: private */
        public static final void Q(IKernelMsgListener listener, ArrayList arrayList) {
            Intrinsics.checkNotNullParameter(listener, "$listener");
            listener.onMsgInfoListUpdate(arrayList);
        }

        /* JADX INFO: Access modifiers changed from: private */
        public static final void R(IKernelMsgListener listener, MsgRecord msgRecord) {
            Intrinsics.checkNotNullParameter(listener, "$listener");
            listener.onMsgSecurityNotify(msgRecord);
        }

        /* JADX INFO: Access modifiers changed from: private */
        public static final void S(IKernelMsgListener listener, MsgSetting msgSetting) {
            Intrinsics.checkNotNullParameter(listener, "$listener");
            listener.onMsgSettingUpdate(msgSetting);
        }

        /* JADX INFO: Access modifiers changed from: private */
        public static final void T(IKernelMsgListener listener) {
            Intrinsics.checkNotNullParameter(listener, "$listener");
            listener.onNtFirstViewMsgSyncEnd();
        }

        /* JADX INFO: Access modifiers changed from: private */
        public static final void U(IKernelMsgListener listener) {
            Intrinsics.checkNotNullParameter(listener, "$listener");
            listener.onNtMsgSyncEnd();
        }

        /* JADX INFO: Access modifiers changed from: private */
        public static final void V(IKernelMsgListener listener) {
            Intrinsics.checkNotNullParameter(listener, "$listener");
            listener.onNtMsgSyncStart();
        }

        /* JADX INFO: Access modifiers changed from: private */
        public static final void W(IKernelMsgListener listener, ArrayList msgList) {
            Intrinsics.checkNotNullParameter(listener, "$listener");
            Intrinsics.checkNotNullParameter(msgList, "$msgList");
            listener.onRecvMsg(msgList);
        }

        /* JADX INFO: Access modifiers changed from: private */
        public static final void X(IKernelMsgListener listener, long j3, Contact contact, int i3, int i16, String str, byte[] bArr) {
            Intrinsics.checkNotNullParameter(listener, "$listener");
            listener.onRecvMsgSvrRspTransInfo(j3, contact, i3, i16, str, bArr);
        }

        /* JADX INFO: Access modifiers changed from: private */
        public static final void Y(IKernelMsgListener listener, ArrayList arrayList) {
            Intrinsics.checkNotNullParameter(listener, "$listener");
            listener.onRecvSysMsg(arrayList);
        }

        /* JADX INFO: Access modifiers changed from: private */
        public static final void Z(IKernelMsgListener listener, FileTransNotifyInfo fileTransNotifyInfo) {
            Intrinsics.checkNotNullParameter(listener, "$listener");
            listener.onRichMediaDownloadComplete(fileTransNotifyInfo);
        }

        /* JADX INFO: Access modifiers changed from: private */
        public static final void a0(IKernelMsgListener listener, FileTransNotifyInfo fileTransNotifyInfo) {
            Intrinsics.checkNotNullParameter(listener, "$listener");
            listener.onRichMediaProgerssUpdate(fileTransNotifyInfo);
        }

        /* JADX INFO: Access modifiers changed from: private */
        public static final void b0(IKernelMsgListener listener, FileTransNotifyInfo fileTransNotifyInfo) {
            Intrinsics.checkNotNullParameter(listener, "$listener");
            listener.onRichMediaUploadComplete(fileTransNotifyInfo);
        }

        /* JADX INFO: Access modifiers changed from: private */
        public static final void c0(IKernelMsgListener listener, long j3, Contact contact, int i3, String str) {
            Intrinsics.checkNotNullParameter(listener, "$listener");
            listener.onSendMsgError(j3, contact, i3, str);
        }

        /* JADX INFO: Access modifiers changed from: private */
        public static final void d0(IKernelMsgListener listener, int i3, long j3, long j16, boolean z16, ArrayList arrayList) {
            Intrinsics.checkNotNullParameter(listener, "$listener");
            listener.onSysMsgNotification(i3, j3, j16, z16, arrayList);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public void onAddSendMsg(@NotNull final MsgRecord msgRecord) {
            IPatchRedirector iPatchRedirector = $redirector_;
            if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 4)) {
                iPatchRedirector.redirect((short) 4, (Object) this, (Object) msgRecord);
                return;
            }
            Intrinsics.checkNotNullParameter(msgRecord, "msgRecord");
            if (QLog.isColorLevel()) {
                QLog.i("MsgService", 2, "[onAddSendMsg]: before postHandle msgId=" + msgRecord.msgId + " listener=" + this.f357306e.hashCode());
            }
            MsgService msgService = MsgService.this;
            final IKernelMsgListener iKernelMsgListener = this.f357306e;
            msgService.postHandle(new Runnable() { // from class: com.tencent.qqnt.kernel.api.impl.ks
                @Override // java.lang.Runnable
                public final void run() {
                    MsgService.d.C(IKernelMsgListener.this, msgRecord);
                }
            });
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public void onContactUnreadCntUpdate(@Nullable final HashMap<Integer, HashMap<String, UnreadCntInfo>> newUnreadCntInfos) {
            IPatchRedirector iPatchRedirector = $redirector_;
            if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 13)) {
                iPatchRedirector.redirect((short) 13, (Object) this, (Object) newUnreadCntInfos);
                return;
            }
            MsgService msgService = MsgService.this;
            final IKernelMsgListener iKernelMsgListener = this.f357306e;
            msgService.postHandle(new Runnable() { // from class: com.tencent.qqnt.kernel.api.impl.ki
                @Override // java.lang.Runnable
                public final void run() {
                    MsgService.d.D(IKernelMsgListener.this, newUnreadCntInfos);
                }
            });
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public void onCustomWithdrawConfigUpdate(@Nullable final CustomWithdrawConfig config) {
            IPatchRedirector iPatchRedirector = $redirector_;
            if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 24)) {
                iPatchRedirector.redirect((short) 24, (Object) this, (Object) config);
                return;
            }
            MsgService msgService = MsgService.this;
            final IKernelMsgListener iKernelMsgListener = this.f357306e;
            msgService.postHandle(new Runnable() { // from class: com.tencent.qqnt.kernel.api.impl.kf
                @Override // java.lang.Runnable
                public final void run() {
                    MsgService.d.E(IKernelMsgListener.this, config);
                }
            });
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public void onDraftUpdate(@Nullable final Contact peer, @Nullable final ArrayList<MsgElement> msgElements, final long draftTime) {
            IPatchRedirector iPatchRedirector = $redirector_;
            if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 14)) {
                iPatchRedirector.redirect((short) 14, this, peer, msgElements, Long.valueOf(draftTime));
                return;
            }
            MsgService msgService = MsgService.this;
            final IKernelMsgListener iKernelMsgListener = this.f357306e;
            msgService.postHandle(new Runnable() { // from class: com.tencent.qqnt.kernel.api.impl.la
                @Override // java.lang.Runnable
                public final void run() {
                    MsgService.d.F(IKernelMsgListener.this, peer, msgElements, draftTime);
                }
            });
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public void onEmojiDownloadComplete(@Nullable final EmojiNotifyInfo notifyInfo) {
            IPatchRedirector iPatchRedirector = $redirector_;
            if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 17)) {
                iPatchRedirector.redirect((short) 17, (Object) this, (Object) notifyInfo);
                return;
            }
            MsgService msgService = MsgService.this;
            final IKernelMsgListener iKernelMsgListener = this.f357306e;
            msgService.postHandle(new Runnable() { // from class: com.tencent.qqnt.kernel.api.impl.kx
                @Override // java.lang.Runnable
                public final void run() {
                    MsgService.d.G(IKernelMsgListener.this, notifyInfo);
                }
            });
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onEmojiResourceUpdate(EmojiResourceInfo emojiResourceInfo) {
            com.tencent.qqnt.kernel.nativeinterface.ax.f(this, emojiResourceInfo);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public void onFileMsgCome(@Nullable final ArrayList<MsgRecord> msgList) {
            IPatchRedirector iPatchRedirector = $redirector_;
            if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 28)) {
                iPatchRedirector.redirect((short) 28, (Object) this, (Object) msgList);
                return;
            }
            MsgService msgService = MsgService.this;
            final IKernelMsgListener iKernelMsgListener = this.f357306e;
            msgService.postHandle(new Runnable() { // from class: com.tencent.qqnt.kernel.api.impl.kv
                @Override // java.lang.Runnable
                public final void run() {
                    MsgService.d.H(IKernelMsgListener.this, msgList);
                }
            });
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onGrabPasswordRedBag(int i3, String str, int i16, RecvdOrder recvdOrder, MsgRecord msgRecord) {
            com.tencent.qqnt.kernel.nativeinterface.ax.h(this, i3, str, i16, recvdOrder, msgRecord);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onGroupFileInfoAdd(GroupItem groupItem) {
            com.tencent.qqnt.kernel.nativeinterface.ax.i(this, groupItem);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onGroupFileInfoUpdate(GroupFileListResult groupFileListResult) {
            com.tencent.qqnt.kernel.nativeinterface.ax.j(this, groupFileListResult);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onGroupTransferInfoAdd(GroupItem groupItem) {
            com.tencent.qqnt.kernel.nativeinterface.ax.k(this, groupItem);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onGroupTransferInfoUpdate(GroupFileListResult groupFileListResult) {
            com.tencent.qqnt.kernel.nativeinterface.ax.l(this, groupFileListResult);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onHitCsRelatedEmojiResult(DownloadRelateEmojiResultInfo downloadRelateEmojiResultInfo) {
            com.tencent.qqnt.kernel.nativeinterface.ax.m(this, downloadRelateEmojiResultInfo);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onHitEmojiKeywordResult(HitRelatedEmojiWordsResult hitRelatedEmojiWordsResult) {
            com.tencent.qqnt.kernel.nativeinterface.ax.n(this, hitRelatedEmojiWordsResult);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onHitRelatedEmojiResult(RelatedWordEmojiInfo relatedWordEmojiInfo) {
            com.tencent.qqnt.kernel.nativeinterface.ax.o(this, relatedWordEmojiInfo);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public void onImportOldDbProgressUpdate(@Nullable final ImportOldDbMsgNotifyInfo notifyInfo) {
            IPatchRedirector iPatchRedirector = $redirector_;
            if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 25)) {
                iPatchRedirector.redirect((short) 25, (Object) this, (Object) notifyInfo);
                return;
            }
            MsgService msgService = MsgService.this;
            final IKernelMsgListener iKernelMsgListener = this.f357306e;
            msgService.postHandle(new Runnable() { // from class: com.tencent.qqnt.kernel.api.impl.kn
                @Override // java.lang.Runnable
                public final void run() {
                    MsgService.d.I(IKernelMsgListener.this, notifyInfo);
                }
            });
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public void onInputStatusPush(@Nullable final InputStatusInfo inputStatusInfo) {
            IPatchRedirector iPatchRedirector = $redirector_;
            if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 27)) {
                iPatchRedirector.redirect((short) 27, (Object) this, (Object) inputStatusInfo);
                return;
            }
            MsgService msgService = MsgService.this;
            final IKernelMsgListener iKernelMsgListener = this.f357306e;
            msgService.postHandle(new Runnable() { // from class: com.tencent.qqnt.kernel.api.impl.kh
                @Override // java.lang.Runnable
                public final void run() {
                    MsgService.d.J(IKernelMsgListener.this, inputStatusInfo);
                }
            });
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public void onKickedOffLine(@NotNull final KickedInfo kickedInfo) {
            IPatchRedirector iPatchRedirector = $redirector_;
            if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 3)) {
                iPatchRedirector.redirect((short) 3, (Object) this, (Object) kickedInfo);
                return;
            }
            Intrinsics.checkNotNullParameter(kickedInfo, "kickedInfo");
            MsgService msgService = MsgService.this;
            final IKernelMsgListener iKernelMsgListener = this.f357306e;
            msgService.postHandle(new Runnable() { // from class: com.tencent.qqnt.kernel.api.impl.kg
                @Override // java.lang.Runnable
                public final void run() {
                    MsgService.d.K(IKernelMsgListener.this, kickedInfo);
                }
            });
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public void onLineDev(@NotNull final ArrayList<DevInfo> devList) {
            IPatchRedirector iPatchRedirector = $redirector_;
            if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 2)) {
                iPatchRedirector.redirect((short) 2, (Object) this, (Object) devList);
                return;
            }
            Intrinsics.checkNotNullParameter(devList, "devList");
            MsgService msgService = MsgService.this;
            final IKernelMsgListener iKernelMsgListener = this.f357306e;
            msgService.postHandle(new Runnable() { // from class: com.tencent.qqnt.kernel.api.impl.kw
                @Override // java.lang.Runnable
                public final void run() {
                    MsgService.d.L(IKernelMsgListener.this, devList);
                }
            });
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onLogLevelChanged(long j3) {
            com.tencent.qqnt.kernel.nativeinterface.ax.t(this, j3);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public void onMiscDataChanged(@Nullable final ArrayList<MiscData> dataList) {
            IPatchRedirector iPatchRedirector = $redirector_;
            if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 26)) {
                iPatchRedirector.redirect((short) 26, (Object) this, (Object) dataList);
                return;
            }
            MsgService msgService = MsgService.this;
            final IKernelMsgListener iKernelMsgListener = this.f357306e;
            msgService.postHandle(new Runnable() { // from class: com.tencent.qqnt.kernel.api.impl.ka
                @Override // java.lang.Runnable
                public final void run() {
                    MsgService.d.M(IKernelMsgListener.this, dataList);
                }
            });
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public void onMsgBoxChanged(@Nullable final ArrayList<ContactMsgBoxInfo> contactMsgBoxInfos) {
            IPatchRedirector iPatchRedirector = $redirector_;
            if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 23)) {
                iPatchRedirector.redirect((short) 23, (Object) this, (Object) contactMsgBoxInfos);
                return;
            }
            MsgService msgService = MsgService.this;
            final IKernelMsgListener iKernelMsgListener = this.f357306e;
            msgService.postHandle(new Runnable() { // from class: com.tencent.qqnt.kernel.api.impl.kd
                @Override // java.lang.Runnable
                public final void run() {
                    MsgService.d.N(IKernelMsgListener.this, contactMsgBoxInfos);
                }
            });
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public void onMsgDelete(@Nullable final Contact peer, @Nullable final ArrayList<Long> msgIds) {
            IPatchRedirector iPatchRedirector = $redirector_;
            if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 22)) {
                iPatchRedirector.redirect((short) 22, (Object) this, (Object) peer, (Object) msgIds);
                return;
            }
            MsgService msgService = MsgService.this;
            final IKernelMsgListener iKernelMsgListener = this.f357306e;
            msgService.postHandle(new Runnable() { // from class: com.tencent.qqnt.kernel.api.impl.kj
                @Override // java.lang.Runnable
                public final void run() {
                    MsgService.d.O(IKernelMsgListener.this, peer, msgIds);
                }
            });
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public void onMsgInfoListAdd(@Nullable final ArrayList<MsgRecord> msgList) {
            IPatchRedirector iPatchRedirector = $redirector_;
            if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 7)) {
                iPatchRedirector.redirect((short) 7, (Object) this, (Object) msgList);
                return;
            }
            MsgService msgService = MsgService.this;
            final IKernelMsgListener iKernelMsgListener = this.f357306e;
            msgService.postHandle(new Runnable() { // from class: com.tencent.qqnt.kernel.api.impl.ke
                @Override // java.lang.Runnable
                public final void run() {
                    MsgService.d.P(IKernelMsgListener.this, msgList);
                }
            });
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public void onMsgInfoListUpdate(@Nullable final ArrayList<MsgRecord> msgList) {
            IPatchRedirector iPatchRedirector = $redirector_;
            if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 8)) {
                iPatchRedirector.redirect((short) 8, (Object) this, (Object) msgList);
                return;
            }
            MsgService msgService = MsgService.this;
            final IKernelMsgListener iKernelMsgListener = this.f357306e;
            msgService.postHandle(new Runnable() { // from class: com.tencent.qqnt.kernel.api.impl.ko
                @Override // java.lang.Runnable
                public final void run() {
                    MsgService.d.Q(IKernelMsgListener.this, msgList);
                }
            });
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onMsgQRCodeStatusChanged(int i3) {
            com.tencent.qqnt.kernel.nativeinterface.ax.z(this, i3);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onMsgRecall(int i3, String str, long j3) {
            com.tencent.qqnt.kernel.nativeinterface.ax.A(this, i3, str, j3);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public void onMsgSecurityNotify(@Nullable final MsgRecord msg2) {
            IPatchRedirector iPatchRedirector = $redirector_;
            if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 29)) {
                iPatchRedirector.redirect((short) 29, (Object) this, (Object) msg2);
                return;
            }
            MsgService msgService = MsgService.this;
            final IKernelMsgListener iKernelMsgListener = this.f357306e;
            msgService.postHandle(new Runnable() { // from class: com.tencent.qqnt.kernel.api.impl.km
                @Override // java.lang.Runnable
                public final void run() {
                    MsgService.d.R(IKernelMsgListener.this, msg2);
                }
            });
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public void onMsgSettingUpdate(@Nullable final MsgSetting msgSetting) {
            IPatchRedirector iPatchRedirector = $redirector_;
            if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 18)) {
                iPatchRedirector.redirect((short) 18, (Object) this, (Object) msgSetting);
                return;
            }
            MsgService msgService = MsgService.this;
            final IKernelMsgListener iKernelMsgListener = this.f357306e;
            msgService.postHandle(new Runnable() { // from class: com.tencent.qqnt.kernel.api.impl.kq
                @Override // java.lang.Runnable
                public final void run() {
                    MsgService.d.S(IKernelMsgListener.this, msgSetting);
                }
            });
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onMsgWithRichLinkInfoUpdate(ArrayList arrayList) {
            com.tencent.qqnt.kernel.nativeinterface.ax.D(this, arrayList);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public void onNtFirstViewMsgSyncEnd() {
            IPatchRedirector iPatchRedirector = $redirector_;
            if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 21)) {
                iPatchRedirector.redirect((short) 21, (Object) this);
                return;
            }
            MsgService msgService = MsgService.this;
            final IKernelMsgListener iKernelMsgListener = this.f357306e;
            msgService.postHandle(new Runnable() { // from class: com.tencent.qqnt.kernel.api.impl.ky
                @Override // java.lang.Runnable
                public final void run() {
                    MsgService.d.T(IKernelMsgListener.this);
                }
            });
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onNtMsgSyncContactUnread() {
            com.tencent.qqnt.kernel.nativeinterface.ax.F(this);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public void onNtMsgSyncEnd() {
            IPatchRedirector iPatchRedirector = $redirector_;
            if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 19)) {
                iPatchRedirector.redirect((short) 19, (Object) this);
                return;
            }
            MsgService msgService = MsgService.this;
            final IKernelMsgListener iKernelMsgListener = this.f357306e;
            msgService.postHandle(new Runnable() { // from class: com.tencent.qqnt.kernel.api.impl.kl
                @Override // java.lang.Runnable
                public final void run() {
                    MsgService.d.U(IKernelMsgListener.this);
                }
            });
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public void onNtMsgSyncStart() {
            IPatchRedirector iPatchRedirector = $redirector_;
            if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 20)) {
                iPatchRedirector.redirect((short) 20, (Object) this);
                return;
            }
            MsgService msgService = MsgService.this;
            final IKernelMsgListener iKernelMsgListener = this.f357306e;
            msgService.postHandle(new Runnable() { // from class: com.tencent.qqnt.kernel.api.impl.kb
                @Override // java.lang.Runnable
                public final void run() {
                    MsgService.d.V(IKernelMsgListener.this);
                }
            });
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public void onRecvMsg(@NotNull final ArrayList<MsgRecord> msgList) {
            IPatchRedirector iPatchRedirector = $redirector_;
            if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 9)) {
                iPatchRedirector.redirect((short) 9, (Object) this, (Object) msgList);
                return;
            }
            Intrinsics.checkNotNullParameter(msgList, "msgList");
            MsgService msgService = MsgService.this;
            final IKernelMsgListener iKernelMsgListener = this.f357306e;
            msgService.postHandle(new Runnable() { // from class: com.tencent.qqnt.kernel.api.impl.kr
                @Override // java.lang.Runnable
                public final void run() {
                    MsgService.d.W(IKernelMsgListener.this, msgList);
                }
            });
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public void onRecvMsgSvrRspTransInfo(final long msgId, @Nullable final Contact peer, final int subType, final int retCode, @Nullable final String errorMsg, @Nullable final byte[] transInfo) {
            IPatchRedirector iPatchRedirector = $redirector_;
            if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 6)) {
                iPatchRedirector.redirect((short) 6, this, Long.valueOf(msgId), peer, Integer.valueOf(subType), Integer.valueOf(retCode), errorMsg, transInfo);
                return;
            }
            MsgService msgService = MsgService.this;
            final IKernelMsgListener iKernelMsgListener = this.f357306e;
            msgService.postHandle(new Runnable() { // from class: com.tencent.qqnt.kernel.api.impl.jz
                @Override // java.lang.Runnable
                public final void run() {
                    MsgService.d.X(IKernelMsgListener.this, msgId, peer, subType, retCode, errorMsg, transInfo);
                }
            });
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onRecvOnlineFileMsg(ArrayList arrayList) {
            com.tencent.qqnt.kernel.nativeinterface.ax.K(this, arrayList);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public void onRecvSysMsg(@Nullable final ArrayList<Byte> msgBuf) {
            IPatchRedirector iPatchRedirector = $redirector_;
            if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 11)) {
                iPatchRedirector.redirect((short) 11, (Object) this, (Object) msgBuf);
                return;
            }
            MsgService msgService = MsgService.this;
            final IKernelMsgListener iKernelMsgListener = this.f357306e;
            msgService.postHandle(new Runnable() { // from class: com.tencent.qqnt.kernel.api.impl.kk
                @Override // java.lang.Runnable
                public final void run() {
                    MsgService.d.Y(IKernelMsgListener.this, msgBuf);
                }
            });
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onRedTouchChanged() {
            com.tencent.qqnt.kernel.nativeinterface.ax.M(this);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public void onRichMediaDownloadComplete(@Nullable final FileTransNotifyInfo notifyInfo) {
            IPatchRedirector iPatchRedirector = $redirector_;
            if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 12)) {
                iPatchRedirector.redirect((short) 12, (Object) this, (Object) notifyInfo);
                return;
            }
            MsgService msgService = MsgService.this;
            final IKernelMsgListener iKernelMsgListener = this.f357306e;
            msgService.postHandle(new Runnable() { // from class: com.tencent.qqnt.kernel.api.impl.kz
                @Override // java.lang.Runnable
                public final void run() {
                    MsgService.d.Z(IKernelMsgListener.this, notifyInfo);
                }
            });
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public void onRichMediaProgerssUpdate(@Nullable final FileTransNotifyInfo notifyInfo) {
            IPatchRedirector iPatchRedirector = $redirector_;
            if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 16)) {
                iPatchRedirector.redirect((short) 16, (Object) this, (Object) notifyInfo);
                return;
            }
            MsgService msgService = MsgService.this;
            final IKernelMsgListener iKernelMsgListener = this.f357306e;
            msgService.postHandle(new Runnable() { // from class: com.tencent.qqnt.kernel.api.impl.kt
                @Override // java.lang.Runnable
                public final void run() {
                    MsgService.d.a0(IKernelMsgListener.this, notifyInfo);
                }
            });
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public void onRichMediaUploadComplete(@Nullable final FileTransNotifyInfo notifyInfo) {
            IPatchRedirector iPatchRedirector = $redirector_;
            if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 15)) {
                iPatchRedirector.redirect((short) 15, (Object) this, (Object) notifyInfo);
                return;
            }
            MsgService msgService = MsgService.this;
            final IKernelMsgListener iKernelMsgListener = this.f357306e;
            msgService.postHandle(new Runnable() { // from class: com.tencent.qqnt.kernel.api.impl.ku
                @Override // java.lang.Runnable
                public final void run() {
                    MsgService.d.b0(IKernelMsgListener.this, notifyInfo);
                }
            });
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onSearchGroupFileInfoUpdate(SearchGroupFileResult searchGroupFileResult) {
            com.tencent.qqnt.kernel.nativeinterface.ax.Q(this, searchGroupFileResult);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public void onSendMsgError(final long msgId, @Nullable final Contact peer, final int errorCode, @Nullable final String errorMsg) {
            IPatchRedirector iPatchRedirector = $redirector_;
            if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 5)) {
                iPatchRedirector.redirect((short) 5, this, Long.valueOf(msgId), peer, Integer.valueOf(errorCode), errorMsg);
                return;
            }
            MsgService msgService = MsgService.this;
            final IKernelMsgListener iKernelMsgListener = this.f357306e;
            msgService.postHandle(new Runnable() { // from class: com.tencent.qqnt.kernel.api.impl.kc
                @Override // java.lang.Runnable
                public final void run() {
                    MsgService.d.c0(IKernelMsgListener.this, msgId, peer, errorCode, errorMsg);
                }
            });
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public void onSysMsgNotification(final int businessType, final long msgType, final long msgSubType, final boolean online, @Nullable final ArrayList<Byte> msgBuf) {
            IPatchRedirector iPatchRedirector = $redirector_;
            if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 10)) {
                iPatchRedirector.redirect((short) 10, this, Integer.valueOf(businessType), Long.valueOf(msgType), Long.valueOf(msgSubType), Boolean.valueOf(online), msgBuf);
                return;
            }
            MsgService msgService = MsgService.this;
            final IKernelMsgListener iKernelMsgListener = this.f357306e;
            msgService.postHandle(new Runnable() { // from class: com.tencent.qqnt.kernel.api.impl.kp
                @Override // java.lang.Runnable
                public final void run() {
                    MsgService.d.d0(IKernelMsgListener.this, businessType, msgType, msgSubType, online, msgBuf);
                }
            });
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onTempChatInfoUpdate(TempChatInfo tempChatInfo) {
            com.tencent.qqnt.kernel.nativeinterface.ax.T(this, tempChatInfo);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onUserChannelTabStatusChanged(boolean z16) {
            com.tencent.qqnt.kernel.nativeinterface.ax.U(this, z16);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onUserOnlineStatusChanged(boolean z16) {
            com.tencent.qqnt.kernel.nativeinterface.ax.V(this, z16);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onUserSecQualityChanged(QueryUserSecQualityRsp queryUserSecQualityRsp) {
            com.tencent.qqnt.kernel.nativeinterface.ax.W(this, queryUserSecQualityRsp);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onUserTabStatusChanged(ArrayList arrayList) {
            com.tencent.qqnt.kernel.nativeinterface.ax.X(this, arrayList);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onlineStatusBigIconDownloadPush(int i3, long j3, String str) {
            com.tencent.qqnt.kernel.nativeinterface.ax.Y(this, i3, j3, str);
        }

        @Override // com.tencent.qqnt.kernel.nativeinterface.IKernelMsgListener
        public /* synthetic */ void onlineStatusSmallIconDownloadPush(int i3, long j3, String str) {
            com.tencent.qqnt.kernel.nativeinterface.ax.Z(this, i3, j3, str);
        }
    }

    static {
        IPatchRedirector redirector = PatchRedirectCenter.getRedirector(50070);
        $redirector_ = redirector;
        if (redirector != null && redirector.hasPatch((short) 188)) {
            redirector.redirect((short) 188);
        } else {
            INSTANCE = new Companion(null);
        }
    }

    /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
    public MsgService(@Nullable IKernelMsgService iKernelMsgService, @NotNull py content) {
        super("MsgService", content, iKernelMsgService);
        Intrinsics.checkNotNullParameter(content, "content");
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 1)) {
            iPatchRedirector.redirect((short) 1, (Object) this, (Object) iKernelMsgService, (Object) content);
            return;
        }
        this.mExpandListenerList = new ArrayList();
        this.mTempChatSigListenerMap = new LinkedHashMap();
        com.tencent.qqnt.kernel.utils.o.f359277a.a("MsgServiceAddDefaultListener", new Function0<Unit>() { // from class: com.tencent.qqnt.kernel.api.impl.MsgService.1
            static IPatchRedirector $redirector_;

            {
                super(0);
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                    iPatchRedirector2.redirect((short) 1, (Object) this, (Object) MsgService.this);
                }
            }

            @Override // kotlin.jvm.functions.Function0
            public /* bridge */ /* synthetic */ Unit invoke() {
                invoke2();
                return Unit.INSTANCE;
            }

            /* renamed from: invoke, reason: avoid collision after fix types in other method */
            public final void invoke2() {
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 == null || !iPatchRedirector2.hasPatch((short) 2)) {
                    MsgService.this.g6();
                } else {
                    iPatchRedirector2.redirect((short) 2, (Object) this);
                }
            }
        });
        this.onMsgBoxChangedListeners = new ArrayList();
    }

    /* JADX INFO: Access modifiers changed from: private */
    public final void g6() {
        IKernelMsgService service = getService();
        if (service != null) {
            service.addKernelMsgListener(new b());
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static final void h6(IClearMsgRecordsCallback cb5, MsgService this$0, Contact peer, int i3, String str, long j3) {
        Intrinsics.checkNotNullParameter(cb5, "$cb");
        Intrinsics.checkNotNullParameter(this$0, "this$0");
        Intrinsics.checkNotNullParameter(peer, "$peer");
        cb5.onResult(i3, str, j3);
        if (i3 == 0) {
            Iterator<com.tencent.qqnt.kernel.invorker.b> it = this$0.mExpandListenerList.iterator();
            while (it.hasNext()) {
                it.next().a(peer);
            }
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public final void i6(Contact peer) {
        if (peer != null && peer.chatType == 116) {
            peer.peerUid = "";
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static final void l6(IMsgOperateCallback cb5, MsgsRsp msgsRsp) {
        Intrinsics.checkNotNullParameter(cb5, "$cb");
        cb5.onResult(msgsRsp.result, msgsRsp.errMsg, msgsRsp.msgList);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static final void m6(IMsgOperateCallback iMsgOperateCallback, MsgsRsp msgsRsp) {
        if (iMsgOperateCallback != null) {
            iMsgOperateCallback.onResult(msgsRsp.result, msgsRsp.errMsg, msgsRsp.msgList);
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static final void o6(IMsgOperateCallback cb5, MsgsRsp msgsRsp) {
        Intrinsics.checkNotNullParameter(cb5, "$cb");
        cb5.onResult(msgsRsp.result, msgsRsp.errMsg, msgsRsp.msgList);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static final void p6(IMsgOperateCallback cb5, MsgsRsp msgsRsp) {
        Intrinsics.checkNotNullParameter(cb5, "$cb");
        cb5.onResult(msgsRsp.result, msgsRsp.errMsg, msgsRsp.msgList);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static final void q6(AIOSendMsgResultData sendResultData, IOperateCallback iOperateCallback, int i3, String str) {
        Intrinsics.checkNotNullParameter(sendResultData, "$sendResultData");
        sendResultData.h(i3);
        com.tencent.qqnt.kernel.aio.msg.b.f357214a.c(sendResultData);
        if (iOperateCallback != null) {
            iOperateCallback.onResult(i3, str);
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void B(@NotNull IKernelMsgImportToolListener listener) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 7)) {
            iPatchRedirector.redirect((short) 7, (Object) this, (Object) listener);
            return;
        }
        Intrinsics.checkNotNullParameter(listener, "listener");
        IKernelMsgService service = getService();
        if (service != null) {
            service.addKernelMsgImportToolListener(listener);
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void F(long msgId, @NotNull Contact peer, @NotNull ArrayList<MsgElement> msgElements, @Nullable IOperateCallback result) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 29)) {
            iPatchRedirector.redirect((short) 29, this, Long.valueOf(msgId), peer, msgElements, result);
            return;
        }
        Intrinsics.checkNotNullParameter(peer, "peer");
        Intrinsics.checkNotNullParameter(msgElements, "msgElements");
        sendMsg(msgId, peer, msgElements, new HashMap<>(), result);
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public boolean J0() {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 135)) {
            return ((Boolean) iPatchRedirector.redirect((short) 135, (Object) this)).booleanValue();
        }
        return this.mIsMsgSyncEnd;
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void O(@NotNull final Contact peer, @Nullable IOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 108)) {
            iPatchRedirector.redirect((short) 108, (Object) this, (Object) peer, (Object) cb5);
        } else {
            Intrinsics.checkNotNullParameter(peer, "peer");
            check("delRoamMsgRecords", cb5, new Function1<IOperateCallback, Unit>(peer) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$delRoamMsgRecords$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ Contact $peer;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(1);
                    this.$peer = peer;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, (Object) this, (Object) MsgService.this, (Object) peer);
                    }
                }

                @Override // kotlin.jvm.functions.Function1
                @Nullable
                public final Unit invoke(@Nullable IOperateCallback iOperateCallback) {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iOperateCallback);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    Contact contact = this.$peer;
                    service.deleteAllRoamMsgs(contact.chatType, contact.peerUid, iOperateCallback);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public boolean U() {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 134)) {
            return ((Boolean) iPatchRedirector.redirect((short) 134, (Object) this)).booleanValue();
        }
        return this.mIsMsgSyncStart;
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void addKernelTempChatSigListener(@NotNull ITempChatSigListener listener) {
        Long l3;
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 8)) {
            iPatchRedirector.redirect((short) 8, (Object) this, (Object) listener);
            return;
        }
        Intrinsics.checkNotNullParameter(listener, "listener");
        if (this.mTempChatSigListenerMap.containsKey(listener)) {
            KLog.i(KLog.f359087a, "MsgService", new Object[]{"CRM setKernelCrmTempChatSigListener has same listener"}, null, 4, null);
            return;
        }
        IKernelMsgService service = getService();
        if (service != null) {
            l3 = Long.valueOf(service.addKernelTempChatSigListener(new c(listener)));
        } else {
            l3 = null;
        }
        KLog.i(KLog.f359087a, "MsgService", new Object[]{"CRM setKernelCrmTempChatSigListener [" + listener + "]=" + l3}, null, 4, null);
        if (l3 != null) {
            this.mTempChatSigListenerMap.put(listener, Long.valueOf(l3.longValue()));
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void addLocalAVRecordMsg(@NotNull final Contact peer, @NotNull final LocalAVRecordElement localAVRecordElement, @NotNull final IOperateCallback callback) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 32)) {
            iPatchRedirector.redirect((short) 32, this, peer, localAVRecordElement, callback);
            return;
        }
        Intrinsics.checkNotNullParameter(peer, "peer");
        Intrinsics.checkNotNullParameter(localAVRecordElement, "localAVRecordElement");
        Intrinsics.checkNotNullParameter(callback, "callback");
        check("addLocalAVRecordMsg", new Function0<Unit>(peer, localAVRecordElement, callback) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$addLocalAVRecordMsg$1
            static IPatchRedirector $redirector_;
            final /* synthetic */ IOperateCallback $callback;
            final /* synthetic */ LocalAVRecordElement $localAVRecordElement;
            final /* synthetic */ Contact $peer;

            /* JADX INFO: Access modifiers changed from: package-private */
            /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
            {
                super(0);
                this.$peer = peer;
                this.$localAVRecordElement = localAVRecordElement;
                this.$callback = callback;
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                    iPatchRedirector2.redirect((short) 1, this, MsgService.this, peer, localAVRecordElement, callback);
                }
            }

            @Override // kotlin.jvm.functions.Function0
            @Nullable
            public final Unit invoke() {
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                    return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this);
                }
                IKernelMsgService service = MsgService.this.getService();
                if (service == null) {
                    return null;
                }
                service.addLocalAVRecordMsg(this.$peer, this.$localAVRecordElement, this.$callback);
                return Unit.INSTANCE;
            }
        });
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void addLocalGrayTipMsg(@NotNull final Contact contact, @NotNull final LocalGrayTipElement localGrayTipType, final boolean needStore, @Nullable IOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 114)) {
            iPatchRedirector.redirect((short) 114, this, contact, localGrayTipType, Boolean.valueOf(needStore), cb5);
            return;
        }
        Intrinsics.checkNotNullParameter(contact, "contact");
        Intrinsics.checkNotNullParameter(localGrayTipType, "localGrayTipType");
        check("addLocalGrayTipMsg", cb5, new Function1<IOperateCallback, Unit>(contact, localGrayTipType, needStore) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$addLocalGrayTipMsg$1
            static IPatchRedirector $redirector_;
            final /* synthetic */ Contact $contact;
            final /* synthetic */ LocalGrayTipElement $localGrayTipType;
            final /* synthetic */ boolean $needStore;

            /* JADX INFO: Access modifiers changed from: package-private */
            /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
            {
                super(1);
                this.$contact = contact;
                this.$localGrayTipType = localGrayTipType;
                this.$needStore = needStore;
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                    iPatchRedirector2.redirect((short) 1, this, MsgService.this, contact, localGrayTipType, Boolean.valueOf(needStore));
                }
            }

            @Override // kotlin.jvm.functions.Function1
            @Nullable
            public final Unit invoke(@Nullable IOperateCallback iOperateCallback) {
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                    return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iOperateCallback);
                }
                IKernelMsgService service = MsgService.this.getService();
                if (service == null) {
                    return null;
                }
                service.addLocalGrayTipMsg(this.$contact, this.$localGrayTipType, this.$needStore, iOperateCallback);
                return Unit.INSTANCE;
            }
        });
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void addLocalTofuRecordMsg(@NotNull final Contact contact, @NotNull final TofuRecordElement tofuRecordElement, @Nullable IOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 116)) {
            iPatchRedirector.redirect((short) 116, this, contact, tofuRecordElement, cb5);
            return;
        }
        Intrinsics.checkNotNullParameter(contact, "contact");
        Intrinsics.checkNotNullParameter(tofuRecordElement, "tofuRecordElement");
        check("addLocalTofuRecordMsg", cb5, new Function1<IOperateCallback, Unit>(contact, tofuRecordElement) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$addLocalTofuRecordMsg$1
            static IPatchRedirector $redirector_;
            final /* synthetic */ Contact $contact;
            final /* synthetic */ TofuRecordElement $tofuRecordElement;

            /* JADX INFO: Access modifiers changed from: package-private */
            /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
            {
                super(1);
                this.$contact = contact;
                this.$tofuRecordElement = tofuRecordElement;
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                    iPatchRedirector2.redirect((short) 1, this, MsgService.this, contact, tofuRecordElement);
                }
            }

            @Override // kotlin.jvm.functions.Function1
            @Nullable
            public final Unit invoke(@Nullable IOperateCallback iOperateCallback) {
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                    return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iOperateCallback);
                }
                IKernelMsgService service = MsgService.this.getService();
                if (service == null) {
                    return null;
                }
                service.addLocalTofuRecordMsg(this.$contact, this.$tofuRecordElement, iOperateCallback);
                return Unit.INSTANCE;
            }
        });
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void addMsgListener(@NotNull IKernelMsgListener listener) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 4)) {
            iPatchRedirector.redirect((short) 4, (Object) this, (Object) listener);
        } else {
            Intrinsics.checkNotNullParameter(listener, "listener");
            addListener(listener, new Function1<IKernelMsgListener, Long>() { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$addMsgListener$1
                static IPatchRedirector $redirector_;

                /* JADX INFO: Access modifiers changed from: package-private */
                {
                    super(1);
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, (Object) this, (Object) MsgService.this);
                    }
                }

                @Override // kotlin.jvm.functions.Function1
                @Nullable
                public final Long invoke(@NotNull IKernelMsgListener it) {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Long) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) it);
                    }
                    Intrinsics.checkNotNullParameter(it, "it");
                    IKernelMsgService service = MsgService.this.getService();
                    if (service != null) {
                        return Long.valueOf(service.addKernelMsgListener(MsgService.this.j6(it)));
                    }
                    return null;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    @Nullable
    public String assembleMobileQQRichMediaFilePath(@NotNull final RichMediaFilePathInfo richMediaFilePathInfo) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 80)) {
            return (String) iPatchRedirector.redirect((short) 80, (Object) this, (Object) richMediaFilePathInfo);
        }
        Intrinsics.checkNotNullParameter(richMediaFilePathInfo, "richMediaFilePathInfo");
        return (String) check("assembleMobileQQRichMediaFilePath", new Function0<String>(richMediaFilePathInfo) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$assembleMobileQQRichMediaFilePath$1
            static IPatchRedirector $redirector_;
            final /* synthetic */ RichMediaFilePathInfo $richMediaFilePathInfo;

            /* JADX INFO: Access modifiers changed from: package-private */
            /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
            {
                super(0);
                this.$richMediaFilePathInfo = richMediaFilePathInfo;
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                    iPatchRedirector2.redirect((short) 1, (Object) this, (Object) MsgService.this, (Object) richMediaFilePathInfo);
                }
            }

            @Override // kotlin.jvm.functions.Function0
            @Nullable
            public final String invoke() {
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                    return (String) iPatchRedirector2.redirect((short) 2, (Object) this);
                }
                IKernelMsgService service = MsgService.this.getService();
                if (service != null) {
                    return service.assembleMobileQQRichMediaFilePath(this.$richMediaFilePathInfo);
                }
                return null;
            }
        });
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void b(@NotNull final Contact contact, final long msgType, @NotNull final AddLocalRecordMsgParams addLocalMsgParams, @Nullable final IOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 118)) {
            iPatchRedirector.redirect((short) 118, this, contact, Long.valueOf(msgType), addLocalMsgParams, cb5);
            return;
        }
        Intrinsics.checkNotNullParameter(contact, "contact");
        Intrinsics.checkNotNullParameter(addLocalMsgParams, "addLocalMsgParams");
        check("addLocalRecordMsgWithExtInfo", cb5, new Function1<IOperateCallback, Unit>(contact, msgType, addLocalMsgParams, cb5) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$addLocalRecordMsgWithExtInfo$1
            static IPatchRedirector $redirector_;
            final /* synthetic */ AddLocalRecordMsgParams $addLocalMsgParams;
            final /* synthetic */ IOperateCallback $cb;
            final /* synthetic */ Contact $contact;
            final /* synthetic */ long $msgType;

            /* JADX INFO: Access modifiers changed from: package-private */
            /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
            {
                super(1);
                this.$contact = contact;
                this.$msgType = msgType;
                this.$addLocalMsgParams = addLocalMsgParams;
                this.$cb = cb5;
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                    iPatchRedirector2.redirect((short) 1, this, MsgService.this, contact, Long.valueOf(msgType), addLocalMsgParams, cb5);
                }
            }

            @Override // kotlin.jvm.functions.Function1
            @Nullable
            public final Unit invoke(@Nullable IOperateCallback iOperateCallback) {
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                    return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iOperateCallback);
                }
                IKernelMsgService service = MsgService.this.getService();
                if (service == null) {
                    return null;
                }
                service.addLocalRecordMsgWithExtInfos(this.$contact, this.$msgType, this.$addLocalMsgParams, this.$cb);
                return Unit.INSTANCE;
            }
        });
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void canImportOldDbMsg(@Nullable ICanImportCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 151)) {
            iPatchRedirector.redirect((short) 151, (Object) this, (Object) cb5);
        } else {
            check("canImportOldDbMsg", cb5, new Function1<ICanImportCallback, Unit>() { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$canImportOldDbMsg$1
                static IPatchRedirector $redirector_;

                /* JADX INFO: Access modifiers changed from: package-private */
                {
                    super(1);
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, (Object) this, (Object) MsgService.this);
                    }
                }

                @Override // kotlin.jvm.functions.Function1
                @Nullable
                public final Unit invoke(@Nullable ICanImportCallback iCanImportCallback) {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iCanImportCallback);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.canImportOldDbMsg(iCanImportCallback);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void canProcessDataMigration(@Nullable ICanImportCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 164)) {
            iPatchRedirector.redirect((short) 164, (Object) this, (Object) cb5);
            return;
        }
        IKernelMsgService service = getService();
        if (service != null) {
            service.canProcessDataMigration(cb5);
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void cancelGetRichMediaElement(@NotNull final RichMediaElementGetReq getReq) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 78)) {
            iPatchRedirector.redirect((short) 78, (Object) this, (Object) getReq);
        } else {
            Intrinsics.checkNotNullParameter(getReq, "getReq");
            check("cancelGetRichMediaElement", new Function0<Unit>(getReq) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$cancelGetRichMediaElement$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ RichMediaElementGetReq $getReq;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(0);
                    this.$getReq = getReq;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, (Object) this, (Object) MsgService.this, (Object) getReq);
                    }
                }

                @Override // kotlin.jvm.functions.Function0
                @Nullable
                public final Unit invoke() {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.cancelGetRichMediaElement(this.$getReq);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void cancelSendMsg(final long msgId, @NotNull final String peerUid, final int chatType) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 61)) {
            iPatchRedirector.redirect((short) 61, this, Long.valueOf(msgId), peerUid, Integer.valueOf(chatType));
        } else {
            Intrinsics.checkNotNullParameter(peerUid, "peerUid");
            check("cancelSendMsg", new Function0<Unit>(chatType, peerUid, msgId) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$cancelSendMsg$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ int $chatType;
                final /* synthetic */ long $msgId;
                final /* synthetic */ String $peerUid;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(0);
                    this.$chatType = chatType;
                    this.$peerUid = peerUid;
                    this.$msgId = msgId;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, this, MsgService.this, Integer.valueOf(chatType), peerUid, Long.valueOf(msgId));
                    }
                }

                @Override // kotlin.jvm.functions.Function0
                @Nullable
                public final Unit invoke() {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.cancelSendMsg(new Contact(this.$chatType, this.$peerUid, ""), this.$msgId);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void clearMsgRecords(@NotNull final Contact peer, @NotNull final IClearMsgRecordsCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 107)) {
            iPatchRedirector.redirect((short) 107, (Object) this, (Object) peer, (Object) cb5);
            return;
        }
        Intrinsics.checkNotNullParameter(peer, "peer");
        Intrinsics.checkNotNullParameter(cb5, "cb");
        IKernelMsgService service = getService();
        if (service != null) {
            service.clearMsgRecords(peer, new IClearMsgRecordsCallback() { // from class: com.tencent.qqnt.kernel.api.impl.jv
                @Override // com.tencent.qqnt.kernel.nativeinterface.IClearMsgRecordsCallback
                public final void onResult(int i3, String str, long j3) {
                    MsgService.h6(IClearMsgRecordsCallback.this, this, peer, i3, str, j3);
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void clickInlineKeyboardButton(@NotNull final InlineKeyboardClickInfo inlineKeyboardClickInfo, @NotNull final IClickInlineKeyboardButtonCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 67)) {
            iPatchRedirector.redirect((short) 67, (Object) this, (Object) inlineKeyboardClickInfo, (Object) cb5);
            return;
        }
        Intrinsics.checkNotNullParameter(inlineKeyboardClickInfo, "inlineKeyboardClickInfo");
        Intrinsics.checkNotNullParameter(cb5, "cb");
        check("clickInlineKeyboardButton", new Function0<Unit>(inlineKeyboardClickInfo, cb5) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$clickInlineKeyboardButton$1
            static IPatchRedirector $redirector_;
            final /* synthetic */ IClickInlineKeyboardButtonCallback $cb;
            final /* synthetic */ InlineKeyboardClickInfo $inlineKeyboardClickInfo;

            /* JADX INFO: Access modifiers changed from: package-private */
            /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
            {
                super(0);
                this.$inlineKeyboardClickInfo = inlineKeyboardClickInfo;
                this.$cb = cb5;
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                    iPatchRedirector2.redirect((short) 1, this, MsgService.this, inlineKeyboardClickInfo, cb5);
                }
            }

            @Override // kotlin.jvm.functions.Function0
            @Nullable
            public final Unit invoke() {
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                    return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this);
                }
                IKernelMsgService service = MsgService.this.getService();
                if (service == null) {
                    return null;
                }
                service.clickInlineKeyboardButton(this.$inlineKeyboardClickInfo, this.$cb);
                return Unit.INSTANCE;
            }
        });
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void clickTofuActionButton(@NotNull final Contact peer, final long msgId, @NotNull final TofuActionButton button, @NotNull final IOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 68)) {
            iPatchRedirector.redirect((short) 68, this, peer, Long.valueOf(msgId), button, cb5);
            return;
        }
        Intrinsics.checkNotNullParameter(peer, "peer");
        Intrinsics.checkNotNullParameter(button, "button");
        Intrinsics.checkNotNullParameter(cb5, "cb");
        check("clickTofuActionButton", new Function0<Unit>(peer, msgId, button, cb5) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$clickTofuActionButton$1
            static IPatchRedirector $redirector_;
            final /* synthetic */ TofuActionButton $button;
            final /* synthetic */ IOperateCallback $cb;
            final /* synthetic */ long $msgId;
            final /* synthetic */ Contact $peer;

            /* JADX INFO: Access modifiers changed from: package-private */
            /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
            {
                super(0);
                this.$peer = peer;
                this.$msgId = msgId;
                this.$button = button;
                this.$cb = cb5;
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                    iPatchRedirector2.redirect((short) 1, this, MsgService.this, peer, Long.valueOf(msgId), button, cb5);
                }
            }

            @Override // kotlin.jvm.functions.Function0
            @Nullable
            public final Unit invoke() {
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                    return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this);
                }
                IKernelMsgService service = MsgService.this.getService();
                if (service == null) {
                    return null;
                }
                service.clickTofuActionButton(this.$peer, this.$msgId, this.$button, this.$cb);
                return Unit.INSTANCE;
            }
        });
    }

    @Override // com.tencent.qqnt.kernel.api.w
    @NotNull
    public String createUidFromTinyId(long selfTinyId, long peerTinyId) {
        String str;
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 163)) {
            return (String) iPatchRedirector.redirect((short) 163, this, Long.valueOf(selfTinyId), Long.valueOf(peerTinyId));
        }
        IKernelMsgService service = getService();
        if (service != null) {
            str = service.createUidFromTinyId(selfTinyId, peerTinyId);
        } else {
            str = null;
        }
        if (str == null) {
            return "";
        }
        return str;
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void dataMigrationGetDataAvaiableContactList(@NotNull final IDataMigrationGetAvailableContactListCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 173)) {
            iPatchRedirector.redirect((short) 173, (Object) this, (Object) cb5);
        } else {
            Intrinsics.checkNotNullParameter(cb5, "cb");
            check("dataMigrationGetDataAvaiableContactList", new Function0<Unit>(cb5) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$dataMigrationGetDataAvaiableContactList$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ IDataMigrationGetAvailableContactListCallback $cb;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(0);
                    this.$cb = cb5;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, (Object) this, (Object) MsgService.this, (Object) cb5);
                    }
                }

                @Override // kotlin.jvm.functions.Function0
                @Nullable
                public final Unit invoke() {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.dataMigrationGetDataAvaiableContactList(this.$cb);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    @Nullable
    public Long dataMigrationGetMsgList(@NotNull QueryMsgsParams params, @NotNull IDataMigrationGetMsgListCalback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 174)) {
            return (Long) iPatchRedirector.redirect((short) 174, (Object) this, (Object) params, (Object) cb5);
        }
        Intrinsics.checkNotNullParameter(params, "params");
        Intrinsics.checkNotNullParameter(cb5, "cb");
        IKernelMsgService service = getService();
        if (service != null) {
            return Long.valueOf(service.dataMigrationGetMsgList(params, cb5));
        }
        return null;
    }

    @Override // com.tencent.qqnt.kernel.api.w
    @Nullable
    public String dataMigrationGetResourceLocalDestinyPath(@NotNull DataMigrationResourceInfo info) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 177)) {
            return (String) iPatchRedirector.redirect((short) 177, (Object) this, (Object) info);
        }
        Intrinsics.checkNotNullParameter(info, "info");
        IKernelMsgService service = getService();
        if (service != null) {
            return service.dataMigrationGetResourceLocalDestinyPath(info);
        }
        return null;
    }

    @Override // com.tencent.qqnt.kernel.api.w
    @Nullable
    public Long dataMigrationImportMsgPbRecord(@NotNull ArrayList<DataMigrationMsgInfo> msgInfoList, @NotNull ArrayList<DataMigrationResourceInfo> resourceInfoList, @Nullable ITaskFinishCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 176)) {
            return (Long) iPatchRedirector.redirect((short) 176, this, msgInfoList, resourceInfoList, cb5);
        }
        Intrinsics.checkNotNullParameter(msgInfoList, "msgInfoList");
        Intrinsics.checkNotNullParameter(resourceInfoList, "resourceInfoList");
        IKernelMsgService service = getService();
        if (service != null) {
            return Long.valueOf(service.dataMigrationImportMsgPbRecord(msgInfoList, resourceInfoList, cb5));
        }
        return null;
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void delMarketEmojiTab(@NotNull DelMarketEmojiTabReq req, @Nullable IDelMarketEmojiTableCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 124)) {
            iPatchRedirector.redirect((short) 124, (Object) this, (Object) req, (Object) cb5);
            return;
        }
        Intrinsics.checkNotNullParameter(req, "req");
        IKernelMsgService service = getService();
        if (service != null) {
            service.delMarketEmojiTab(req, cb5);
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void delRecentHiddenSession(@NotNull final ArrayList<RecentHiddenSesionInfo> infos, @Nullable IOperateCallback callback) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 170)) {
            iPatchRedirector.redirect((short) 170, (Object) this, (Object) infos, (Object) callback);
        } else {
            Intrinsics.checkNotNullParameter(infos, "infos");
            check("delRecentHiddenSession", callback, new Function1<IOperateCallback, Unit>(infos) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$delRecentHiddenSession$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ ArrayList<RecentHiddenSesionInfo> $infos;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(1);
                    this.$infos = infos;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, (Object) this, (Object) MsgService.this, (Object) infos);
                    }
                }

                @Override // kotlin.jvm.functions.Function1
                @Nullable
                public final Unit invoke(@Nullable IOperateCallback iOperateCallback) {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iOperateCallback);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.delRecentHiddenSession(this.$infos, iOperateCallback);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void deleteDraft(@NotNull final Contact peer, @Nullable IOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 121)) {
            iPatchRedirector.redirect((short) 121, (Object) this, (Object) peer, (Object) cb5);
        } else {
            Intrinsics.checkNotNullParameter(peer, "peer");
            check("deleteDraft", cb5, new Function1<IOperateCallback, Unit>(peer) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$deleteDraft$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ Contact $peer;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(1);
                    this.$peer = peer;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, (Object) this, (Object) MsgService.this, (Object) peer);
                    }
                }

                @Override // kotlin.jvm.functions.Function1
                @Nullable
                public final Unit invoke(@Nullable IOperateCallback iOperateCallback) {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iOperateCallback);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.deleteDraft(this.$peer, iOperateCallback);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void deleteMsg(@NotNull final Contact peer, @Nullable final ArrayList<Long> msgIds, @Nullable IOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 70)) {
            iPatchRedirector.redirect((short) 70, this, peer, msgIds, cb5);
        } else {
            Intrinsics.checkNotNullParameter(peer, "peer");
            check("deleteMsg", cb5, new Function1<IOperateCallback, Unit>(peer, msgIds) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$deleteMsg$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ ArrayList<Long> $msgIds;
                final /* synthetic */ Contact $peer;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(1);
                    this.$peer = peer;
                    this.$msgIds = msgIds;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, this, MsgService.this, peer, msgIds);
                    }
                }

                @Override // kotlin.jvm.functions.Function1
                @Nullable
                public final Unit invoke(@Nullable IOperateCallback iOperateCallback) {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iOperateCallback);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.deleteMsg(this.$peer, this.$msgIds, iOperateCallback);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void deleteReplyDraft(@NotNull final Contact peer, final long rootSeq, @Nullable final IOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 113)) {
            iPatchRedirector.redirect((short) 113, this, peer, Long.valueOf(rootSeq), cb5);
        } else {
            Intrinsics.checkNotNullParameter(peer, "peer");
            check("deleteReplyDraft", cb5, new Function1<IOperateCallback, Unit>(peer, rootSeq, cb5) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$deleteReplyDraft$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ IOperateCallback $cb;
                final /* synthetic */ Contact $peer;
                final /* synthetic */ long $rootSeq;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(1);
                    this.$peer = peer;
                    this.$rootSeq = rootSeq;
                    this.$cb = cb5;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, this, MsgService.this, peer, Long.valueOf(rootSeq), cb5);
                    }
                }

                @Override // kotlin.jvm.functions.Function1
                @Nullable
                public final Unit invoke(@Nullable IOperateCallback iOperateCallback) {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iOperateCallback);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.deleteReplyDraft(this.$peer, this.$rootSeq, this.$cb);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void enterOrExitAio(@Nullable final ArrayList<EnterOrExitAioInfo> infoList, @Nullable final IOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 147)) {
            iPatchRedirector.redirect((short) 147, (Object) this, (Object) infoList, (Object) cb5);
        } else {
            check("enterOrExitAio", new Function0<Unit>(infoList, cb5) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$enterOrExitAio$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ IOperateCallback $cb;
                final /* synthetic */ ArrayList<EnterOrExitAioInfo> $infoList;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(0);
                    this.$infoList = infoList;
                    this.$cb = cb5;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, this, MsgService.this, infoList, cb5);
                    }
                }

                @Override // kotlin.jvm.functions.Function0
                @Nullable
                public final Unit invoke() {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.enterOrExitAio(this.$infoList, this.$cb);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void feedBackReportForMsg(@NotNull final Contact peer, @NotNull final FeedBackMsgInfo msgInfo, @NotNull final FeedBackDataForMsg feedBackData, @NotNull final IOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 183)) {
            iPatchRedirector.redirect((short) 183, this, peer, msgInfo, feedBackData, cb5);
            return;
        }
        Intrinsics.checkNotNullParameter(peer, "peer");
        Intrinsics.checkNotNullParameter(msgInfo, "msgInfo");
        Intrinsics.checkNotNullParameter(feedBackData, "feedBackData");
        Intrinsics.checkNotNullParameter(cb5, "cb");
        check("feedBackReportForMsg", cb5, new Function1<IOperateCallback, Unit>(peer, msgInfo, feedBackData, cb5) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$feedBackReportForMsg$1
            static IPatchRedirector $redirector_;
            final /* synthetic */ IOperateCallback $cb;
            final /* synthetic */ FeedBackDataForMsg $feedBackData;
            final /* synthetic */ FeedBackMsgInfo $msgInfo;
            final /* synthetic */ Contact $peer;

            /* JADX INFO: Access modifiers changed from: package-private */
            /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
            {
                super(1);
                this.$peer = peer;
                this.$msgInfo = msgInfo;
                this.$feedBackData = feedBackData;
                this.$cb = cb5;
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                    iPatchRedirector2.redirect((short) 1, this, MsgService.this, peer, msgInfo, feedBackData, cb5);
                }
            }

            @Override // kotlin.jvm.functions.Function1
            @Nullable
            public final Unit invoke(@Nullable IOperateCallback iOperateCallback) {
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                    return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iOperateCallback);
                }
                IKernelMsgService service = MsgService.this.getService();
                if (service == null) {
                    return null;
                }
                service.feedBackReportForMsg(this.$peer, this.$msgInfo, this.$feedBackData, this.$cb);
                return Unit.INSTANCE;
            }
        });
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void fetchBottomEmojiTableList(@NotNull FetchBottomEmojiTableListReq req, @Nullable IFetchBottomEmojiTableListCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 125)) {
            iPatchRedirector.redirect((short) 125, (Object) this, (Object) req, (Object) cb5);
            return;
        }
        Intrinsics.checkNotNullParameter(req, "req");
        IKernelMsgService service = getService();
        if (service != null) {
            service.fetchBottomEmojiTableList(req, cb5);
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void fetchMarketEmotionJsonFile(int epId, @Nullable IOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 130)) {
            iPatchRedirector.redirect((short) 130, (Object) this, epId, (Object) cb5);
            return;
        }
        IKernelMsgService service = getService();
        if (service != null) {
            service.fetchMarketEmotionJsonFile(epId, cb5);
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void forwardFile(@NotNull final TargetFileInfo fileInfo, @NotNull final Contact dstContact, @NotNull final IOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 35)) {
            iPatchRedirector.redirect((short) 35, this, fileInfo, dstContact, cb5);
            return;
        }
        Intrinsics.checkNotNullParameter(fileInfo, "fileInfo");
        Intrinsics.checkNotNullParameter(dstContact, "dstContact");
        Intrinsics.checkNotNullParameter(cb5, "cb");
        check("forwardFile", new Function0<Unit>(fileInfo, dstContact, cb5) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$forwardFile$1
            static IPatchRedirector $redirector_;
            final /* synthetic */ IOperateCallback $cb;
            final /* synthetic */ Contact $dstContact;
            final /* synthetic */ TargetFileInfo $fileInfo;

            /* JADX INFO: Access modifiers changed from: package-private */
            /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
            {
                super(0);
                this.$fileInfo = fileInfo;
                this.$dstContact = dstContact;
                this.$cb = cb5;
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                    iPatchRedirector2.redirect((short) 1, this, MsgService.this, fileInfo, dstContact, cb5);
                }
            }

            @Override // kotlin.jvm.functions.Function0
            @Nullable
            public final Unit invoke() {
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                    return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this);
                }
                IKernelMsgService service = MsgService.this.getService();
                if (service == null) {
                    return null;
                }
                service.forwardFile(this.$fileInfo, this.$dstContact, this.$cb);
                return Unit.INSTANCE;
            }
        });
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void forwardMsg(@NotNull final ArrayList<Long> msgIds, @NotNull final Contact srcContact, @NotNull final ArrayList<Contact> dstContacts, @Nullable final ArrayList<MsgElement> commentElements, @NotNull final IForwardOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 33)) {
            iPatchRedirector.redirect((short) 33, this, msgIds, srcContact, dstContacts, commentElements, cb5);
            return;
        }
        Intrinsics.checkNotNullParameter(msgIds, "msgIds");
        Intrinsics.checkNotNullParameter(srcContact, "srcContact");
        Intrinsics.checkNotNullParameter(dstContacts, "dstContacts");
        Intrinsics.checkNotNullParameter(cb5, "cb");
        check("forwardMsg", new Function0<Unit>(commentElements, srcContact, this, msgIds, dstContacts, cb5) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$forwardMsg$1
            static IPatchRedirector $redirector_;
            final /* synthetic */ IForwardOperateCallback $cb;
            final /* synthetic */ ArrayList<MsgElement> $commentElements;
            final /* synthetic */ ArrayList<Contact> $dstContacts;
            final /* synthetic */ ArrayList<Long> $msgIds;
            final /* synthetic */ Contact $srcContact;
            final /* synthetic */ MsgService this$0;

            /* JADX INFO: Access modifiers changed from: package-private */
            /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
            {
                super(0);
                this.$commentElements = commentElements;
                this.$srcContact = srcContact;
                this.this$0 = this;
                this.$msgIds = msgIds;
                this.$dstContacts = dstContacts;
                this.$cb = cb5;
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                    iPatchRedirector2.redirect((short) 1, this, commentElements, srcContact, this, msgIds, dstContacts, cb5);
                }
            }

            @Override // kotlin.jvm.functions.Function0
            @Nullable
            public final Unit invoke() {
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                    return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this);
                }
                HashMap<Integer, MsgAttributeInfo> hashMap = new HashMap<>();
                ArrayList<MsgElement> arrayList = this.$commentElements;
                if (arrayList != null && !arrayList.isEmpty()) {
                    com.tencent.qqnt.kernel.aio.msg.a.f357212a.a(hashMap, this.$srcContact, this.$commentElements.get(0).elementType);
                    IKernelMsgService service = this.this$0.getService();
                    if (service == null) {
                        return null;
                    }
                    service.forwardMsgWithComment(this.$msgIds, this.$srcContact, this.$dstContacts, this.$commentElements, hashMap, this.$cb);
                    return Unit.INSTANCE;
                }
                com.tencent.qqnt.kernel.aio.msg.a.f357212a.a(hashMap, this.$srcContact, 1);
                IKernelMsgService service2 = this.this$0.getService();
                if (service2 == null) {
                    return null;
                }
                service2.forwardMsg(this.$msgIds, this.$srcContact, this.$dstContacts, hashMap, this.$cb);
                return Unit.INSTANCE;
            }
        });
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void getABatchOfContactMsgBoxInfo(@NotNull final ArrayList<Contact> contacts, @NotNull IGetMsgsBoxesCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 122)) {
            iPatchRedirector.redirect((short) 122, (Object) this, (Object) contacts, (Object) cb5);
            return;
        }
        Intrinsics.checkNotNullParameter(contacts, "contacts");
        Intrinsics.checkNotNullParameter(cb5, "cb");
        check("getABatchOfContactMsgBoxInfo", cb5, new Function1<IGetMsgsBoxesCallback, Unit>(contacts) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$getABatchOfContactMsgBoxInfo$1
            static IPatchRedirector $redirector_;
            final /* synthetic */ ArrayList<Contact> $contacts;

            /* JADX INFO: Access modifiers changed from: package-private */
            /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
            {
                super(1);
                this.$contacts = contacts;
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                    iPatchRedirector2.redirect((short) 1, (Object) this, (Object) MsgService.this, (Object) contacts);
                }
            }

            @Override // kotlin.jvm.functions.Function1
            @Nullable
            public final Unit invoke(@Nullable IGetMsgsBoxesCallback iGetMsgsBoxesCallback) {
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                    return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iGetMsgsBoxesCallback);
                }
                IKernelMsgService service = MsgService.this.getService();
                if (service == null) {
                    return null;
                }
                service.getABatchOfContactMsgBoxInfo(this.$contacts, iGetMsgsBoxesCallback);
                return Unit.INSTANCE;
            }
        });
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void getAioFirstViewLatestMsgs(@NotNull final Contact peer, final int cnt, @NotNull IGetAioFirstViewLatestMsgCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 43)) {
            iPatchRedirector.redirect((short) 43, this, peer, Integer.valueOf(cnt), cb5);
            return;
        }
        Intrinsics.checkNotNullParameter(peer, "peer");
        Intrinsics.checkNotNullParameter(cb5, "cb");
        Z4("getAioFirstViewLatestMsgs", cb5, new Function1<IGetAioFirstViewLatestMsgCallback, Unit>(peer, cnt) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$getAioFirstViewLatestMsgs$1
            static IPatchRedirector $redirector_;
            final /* synthetic */ int $cnt;
            final /* synthetic */ Contact $peer;

            /* JADX INFO: Access modifiers changed from: package-private */
            /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
            {
                super(1);
                this.$peer = peer;
                this.$cnt = cnt;
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                    iPatchRedirector2.redirect((short) 1, this, MsgService.this, peer, Integer.valueOf(cnt));
                }
            }

            @Override // kotlin.jvm.functions.Function1
            @Nullable
            public final Unit invoke(@Nullable IGetAioFirstViewLatestMsgCallback iGetAioFirstViewLatestMsgCallback) {
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                    return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iGetAioFirstViewLatestMsgCallback);
                }
                IKernelMsgService service = MsgService.this.getService();
                if (service == null) {
                    return null;
                }
                service.getAioFirstViewLatestMsgs(this.$peer, this.$cnt, iGetAioFirstViewLatestMsgCallback);
                return Unit.INSTANCE;
            }
        });
    }

    @Override // com.tencent.qqnt.kernel.api.w
    @Nullable
    public GroupAnonymousInfo getAnonymousInfo(@Nullable String groupId) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 158)) {
            return (GroupAnonymousInfo) iPatchRedirector.redirect((short) 158, (Object) this, (Object) groupId);
        }
        IKernelMsgService service = getService();
        if (service != null) {
            return service.getAnonymousInfo(groupId);
        }
        return null;
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void getContactUnreadCnt(@Nullable IOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector == null || !iPatchRedirector.hasPatch((short) 90)) {
            check("getContactUnreadCnt", cb5, new Function1<IOperateCallback, Unit>() { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$getContactUnreadCnt$1
                static IPatchRedirector $redirector_;

                /* JADX INFO: Access modifiers changed from: package-private */
                {
                    super(1);
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, (Object) this, (Object) MsgService.this);
                    }
                }

                @Override // kotlin.jvm.functions.Function1
                @Nullable
                public final Unit invoke(@Nullable IOperateCallback iOperateCallback) {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iOperateCallback);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.getContactUnreadCnt(new ArrayList<>(), iOperateCallback);
                    return Unit.INSTANCE;
                }
            });
        } else {
            iPatchRedirector.redirect((short) 90, (Object) this, (Object) cb5);
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    @Nullable
    public Integer getCurChatImportStatusByUin(long uin, int chatType) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 161)) {
            return (Integer) iPatchRedirector.redirect((short) 161, this, Long.valueOf(uin), Integer.valueOf(chatType));
        }
        IKernelMsgService service = getService();
        if (service != null) {
            return Integer.valueOf(service.getCurChatImportStatusByUin(uin, chatType));
        }
        return null;
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void getCurHiddenSession(@Nullable final IOperateHiddenSessionCallback callback) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 171)) {
            iPatchRedirector.redirect((short) 171, (Object) this, (Object) callback);
        } else {
            check("getCurHiddenSession", new Function0<Unit>(callback) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$getCurHiddenSession$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ IOperateHiddenSessionCallback $callback;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(0);
                    this.$callback = callback;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, (Object) this, (Object) MsgService.this, (Object) callback);
                    }
                }

                @Override // kotlin.jvm.functions.Function0
                @Nullable
                public final Unit invoke() {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.getCurHiddenSession(this.$callback);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    @Nullable
    public Integer getDataImportUserLevel() {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 159)) {
            return (Integer) iPatchRedirector.redirect((short) 159, (Object) this);
        }
        IKernelMsgService service = getService();
        if (service != null) {
            return Integer.valueOf(service.getDataImportUserLevel());
        }
        return null;
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void getDraft(@Nullable final Contact peer, @Nullable IGetDraftOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 110)) {
            iPatchRedirector.redirect((short) 110, (Object) this, (Object) peer, (Object) cb5);
        } else {
            a5("getDraft", cb5, new Function1<IGetDraftOperateCallback, Unit>(peer) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$getDraft$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ Contact $peer;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(1);
                    this.$peer = peer;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, (Object) this, (Object) MsgService.this, (Object) peer);
                    }
                }

                @Override // kotlin.jvm.functions.Function1
                @Nullable
                public final Unit invoke(@Nullable IGetDraftOperateCallback iGetDraftOperateCallback) {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iGetDraftOperateCallback);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.getDraft(this.$peer, iGetDraftOperateCallback);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void getFirstUnreadMsgSeq(@NotNull final Contact peer, @NotNull IGetMsgSeqCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 95)) {
            iPatchRedirector.redirect((short) 95, (Object) this, (Object) peer, (Object) cb5);
            return;
        }
        Intrinsics.checkNotNullParameter(peer, "peer");
        Intrinsics.checkNotNullParameter(cb5, "cb");
        d5("getFirstUnreadMsgSeq", cb5, new Function1<IGetMsgSeqCallback, Unit>(peer) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$getFirstUnreadMsgSeq$1
            static IPatchRedirector $redirector_;
            final /* synthetic */ Contact $peer;

            /* JADX INFO: Access modifiers changed from: package-private */
            /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
            {
                super(1);
                this.$peer = peer;
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                    iPatchRedirector2.redirect((short) 1, (Object) this, (Object) MsgService.this, (Object) peer);
                }
            }

            @Override // kotlin.jvm.functions.Function1
            @Nullable
            public final Unit invoke(@Nullable IGetMsgSeqCallback iGetMsgSeqCallback) {
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                    return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iGetMsgSeqCallback);
                }
                IKernelMsgService service = MsgService.this.getService();
                if (service == null) {
                    return null;
                }
                service.getFirstUnreadMsgSeq(this.$peer, iGetMsgSeqCallback);
                return Unit.INSTANCE;
            }
        });
    }

    @Override // com.tencent.qqnt.kernel.api.w
    @Nullable
    public Long getGroupMsgStorageTime() {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 74)) {
            return (Long) iPatchRedirector.redirect((short) 74, (Object) this);
        }
        IKernelMsgService service = getService();
        if (service != null) {
            return Long.valueOf(service.getGroupMsgStorageTime());
        }
        return null;
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void getHotPicHotWords(@NotNull final EmojiHotPicGetHotWordsReqBody reqBody, @NotNull final IEmojiGetHotPicHotWordsResultCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 17)) {
            iPatchRedirector.redirect((short) 17, (Object) this, (Object) reqBody, (Object) cb5);
            return;
        }
        Intrinsics.checkNotNullParameter(reqBody, "reqBody");
        Intrinsics.checkNotNullParameter(cb5, "cb");
        check("getHotPicHotWords", new Function0<Unit>(reqBody, cb5) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$getHotPicHotWords$1
            static IPatchRedirector $redirector_;
            final /* synthetic */ IEmojiGetHotPicHotWordsResultCallback $cb;
            final /* synthetic */ EmojiHotPicGetHotWordsReqBody $reqBody;

            /* JADX INFO: Access modifiers changed from: package-private */
            /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
            {
                super(0);
                this.$reqBody = reqBody;
                this.$cb = cb5;
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                    iPatchRedirector2.redirect((short) 1, this, MsgService.this, reqBody, cb5);
                }
            }

            @Override // kotlin.jvm.functions.Function0
            @Nullable
            public final Unit invoke() {
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                    return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this);
                }
                IKernelMsgService service = MsgService.this.getService();
                if (service == null) {
                    return null;
                }
                service.getHotPicHotWords(this.$reqBody, this.$cb);
                return Unit.INSTANCE;
            }
        });
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void getHotPicInfoListSearchString(@NotNull final String searchWord, @NotNull final String picId, final int count, final int direction, final boolean isForceRefresh, @NotNull final IGetHotPicInfoListCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 15)) {
            iPatchRedirector.redirect((short) 15, this, searchWord, picId, Integer.valueOf(count), Integer.valueOf(direction), Boolean.valueOf(isForceRefresh), cb5);
            return;
        }
        Intrinsics.checkNotNullParameter(searchWord, "searchWord");
        Intrinsics.checkNotNullParameter(picId, "picId");
        Intrinsics.checkNotNullParameter(cb5, "cb");
        check("getHotPicInfoListSearchString", new Function0<Unit>(searchWord, picId, count, direction, isForceRefresh, cb5) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$getHotPicInfoListSearchString$1
            static IPatchRedirector $redirector_;
            final /* synthetic */ IGetHotPicInfoListCallback $cb;
            final /* synthetic */ int $count;
            final /* synthetic */ int $direction;
            final /* synthetic */ boolean $isForceRefresh;
            final /* synthetic */ String $picId;
            final /* synthetic */ String $searchWord;

            /* JADX INFO: Access modifiers changed from: package-private */
            /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
            {
                super(0);
                this.$searchWord = searchWord;
                this.$picId = picId;
                this.$count = count;
                this.$direction = direction;
                this.$isForceRefresh = isForceRefresh;
                this.$cb = cb5;
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                    iPatchRedirector2.redirect((short) 1, this, MsgService.this, searchWord, picId, Integer.valueOf(count), Integer.valueOf(direction), Boolean.valueOf(isForceRefresh), cb5);
                }
            }

            @Override // kotlin.jvm.functions.Function0
            @Nullable
            public final Unit invoke() {
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                    return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this);
                }
                IKernelMsgService service = MsgService.this.getService();
                if (service == null) {
                    return null;
                }
                service.getHotPicInfoListSearchString(this.$searchWord, this.$picId, this.$count, this.$direction, this.$isForceRefresh, this.$cb);
                return Unit.INSTANCE;
            }
        });
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void getHotPicJumpInfo(@Nullable final EmojiHotPicGetJumpInfoReqBody reqBody, @Nullable final IEmojiHotPicGetJumpInfoResultCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 18)) {
            iPatchRedirector.redirect((short) 18, (Object) this, (Object) reqBody, (Object) cb5);
        } else {
            check("getHotPicJumpInfo", new Function0<Unit>(reqBody, cb5) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$getHotPicJumpInfo$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ IEmojiHotPicGetJumpInfoResultCallback $cb;
                final /* synthetic */ EmojiHotPicGetJumpInfoReqBody $reqBody;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(0);
                    this.$reqBody = reqBody;
                    this.$cb = cb5;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, this, MsgService.this, reqBody, cb5);
                    }
                }

                @Override // kotlin.jvm.functions.Function0
                @Nullable
                public final Unit invoke() {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.getHotPicJumpInfo(this.$reqBody, this.$cb);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void getHotPicSearchResult(@NotNull final EmojiHotPicSearchReqBody reqBody, @NotNull final IEmojiGetHotPicSearchResultCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 16)) {
            iPatchRedirector.redirect((short) 16, (Object) this, (Object) reqBody, (Object) cb5);
            return;
        }
        Intrinsics.checkNotNullParameter(reqBody, "reqBody");
        Intrinsics.checkNotNullParameter(cb5, "cb");
        check("getHotPicSearchResult", new Function0<Unit>(reqBody, cb5) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$getHotPicSearchResult$1
            static IPatchRedirector $redirector_;
            final /* synthetic */ IEmojiGetHotPicSearchResultCallback $cb;
            final /* synthetic */ EmojiHotPicSearchReqBody $reqBody;

            /* JADX INFO: Access modifiers changed from: package-private */
            /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
            {
                super(0);
                this.$reqBody = reqBody;
                this.$cb = cb5;
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                    iPatchRedirector2.redirect((short) 1, this, MsgService.this, reqBody, cb5);
                }
            }

            @Override // kotlin.jvm.functions.Function0
            @Nullable
            public final Unit invoke() {
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                    return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this);
                }
                IKernelMsgService service = MsgService.this.getService();
                if (service == null) {
                    return null;
                }
                service.getHotPicSearchResult(this.$reqBody, this.$cb);
                return Unit.INSTANCE;
            }
        });
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void getLastMessageList(@NotNull final ArrayList<Contact> contacts, @NotNull IMsgOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 42)) {
            iPatchRedirector.redirect((short) 42, (Object) this, (Object) contacts, (Object) cb5);
            return;
        }
        Intrinsics.checkNotNullParameter(contacts, "contacts");
        Intrinsics.checkNotNullParameter(cb5, "cb");
        g5("getLastMessageList", cb5, new Function1<IMsgOperateCallback, Unit>(contacts) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$getLastMessageList$1
            static IPatchRedirector $redirector_;
            final /* synthetic */ ArrayList<Contact> $contacts;

            /* JADX INFO: Access modifiers changed from: package-private */
            /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
            {
                super(1);
                this.$contacts = contacts;
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                    iPatchRedirector2.redirect((short) 1, (Object) this, (Object) MsgService.this, (Object) contacts);
                }
            }

            @Override // kotlin.jvm.functions.Function1
            @Nullable
            public final Unit invoke(@Nullable IMsgOperateCallback iMsgOperateCallback) {
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                    return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iMsgOperateCallback);
                }
                IKernelMsgService service = MsgService.this.getService();
                if (service == null) {
                    return null;
                }
                service.getLastMessageList(this.$contacts, iMsgOperateCallback);
                return Unit.INSTANCE;
            }
        });
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void getLatestDbMsgs(@NotNull final Contact peer, final int cnt, @NotNull IMsgOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 41)) {
            iPatchRedirector.redirect((short) 41, this, peer, Integer.valueOf(cnt), cb5);
            return;
        }
        Intrinsics.checkNotNullParameter(peer, "peer");
        Intrinsics.checkNotNullParameter(cb5, "cb");
        g5("getLatestDbMsgs", cb5, new Function1<IMsgOperateCallback, Unit>(peer, cnt) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$getLatestDbMsgs$1
            static IPatchRedirector $redirector_;
            final /* synthetic */ int $cnt;
            final /* synthetic */ Contact $peer;

            /* JADX INFO: Access modifiers changed from: package-private */
            /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
            {
                super(1);
                this.$peer = peer;
                this.$cnt = cnt;
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                    iPatchRedirector2.redirect((short) 1, this, MsgService.this, peer, Integer.valueOf(cnt));
                }
            }

            @Override // kotlin.jvm.functions.Function1
            @Nullable
            public final Unit invoke(@Nullable IMsgOperateCallback iMsgOperateCallback) {
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                    return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iMsgOperateCallback);
                }
                IKernelMsgService service = MsgService.this.getService();
                if (service == null) {
                    return null;
                }
                service.getLatestDbMsgs(this.$peer, this.$cnt, iMsgOperateCallback);
                return Unit.INSTANCE;
            }
        });
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void getMarketEmoticonEncryptKeys(int epId, @Nullable ArrayList<String> eIds, @Nullable IGetMarketEmoticonEncryptKeysCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 133)) {
            iPatchRedirector.redirect((short) 133, this, Integer.valueOf(epId), eIds, cb5);
            return;
        }
        IKernelMsgService service = getService();
        if (service != null) {
            service.getMarketEmoticonEncryptKeys(epId, eIds, cb5);
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void getMiscDataVer2(@NotNull MiscKeyInfo keyInfo, @NotNull IGetMiscDataCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 186)) {
            iPatchRedirector.redirect((short) 186, (Object) this, (Object) keyInfo, (Object) cb5);
            return;
        }
        Intrinsics.checkNotNullParameter(keyInfo, "keyInfo");
        Intrinsics.checkNotNullParameter(cb5, "cb");
        IKernelMsgService service = getService();
        if (service != null) {
            service.getMiscDataVer2(keyInfo, cb5);
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void getMqqDataImportTableNames(@Nullable IDataImportTableNamesCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 153)) {
            iPatchRedirector.redirect((short) 153, (Object) this, (Object) cb5);
        } else {
            check("getMqqDataImportTableNames", cb5, new Function1<IDataImportTableNamesCallback, Unit>() { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$getMqqDataImportTableNames$1
                static IPatchRedirector $redirector_;

                /* JADX INFO: Access modifiers changed from: package-private */
                {
                    super(1);
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, (Object) this, (Object) MsgService.this);
                    }
                }

                @Override // kotlin.jvm.functions.Function1
                @Nullable
                public final Unit invoke(@Nullable IDataImportTableNamesCallback iDataImportTableNamesCallback) {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iDataImportTableNamesCallback);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.getMqqDataImportTableNames(iDataImportTableNamesCallback);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void getMsgAbstract(@NotNull final Contact peer, final long msgId, @Nullable IGetMsgAbstractsCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 89)) {
            iPatchRedirector.redirect((short) 89, this, peer, Long.valueOf(msgId), cb5);
        } else {
            Intrinsics.checkNotNullParameter(peer, "peer");
            b5("getMsgAbstract", cb5, new Function1<IGetMsgAbstractsCallback, Unit>(peer, msgId) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$getMsgAbstract$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ long $msgId;
                final /* synthetic */ Contact $peer;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(1);
                    this.$peer = peer;
                    this.$msgId = msgId;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, this, MsgService.this, peer, Long.valueOf(msgId));
                    }
                }

                @Override // kotlin.jvm.functions.Function1
                @Nullable
                public final Unit invoke(@Nullable IGetMsgAbstractsCallback iGetMsgAbstractsCallback) {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iGetMsgAbstractsCallback);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.getMsgAbstract(this.$peer, this.$msgId, iGetMsgAbstractsCallback);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void getMsgByClientSeqAndTime(@Nullable final Contact peer, final long msgClientSeq, final long msgTime, @Nullable IMsgOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 58)) {
            iPatchRedirector.redirect((short) 58, this, peer, Long.valueOf(msgClientSeq), Long.valueOf(msgTime), cb5);
        } else {
            g5("getMsgByClientSeqAndTime", cb5, new Function1<IMsgOperateCallback, Unit>(peer, msgClientSeq, msgTime) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$getMsgByClientSeqAndTime$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ long $msgClientSeq;
                final /* synthetic */ long $msgTime;
                final /* synthetic */ Contact $peer;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(1);
                    this.$peer = peer;
                    this.$msgClientSeq = msgClientSeq;
                    this.$msgTime = msgTime;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, this, MsgService.this, peer, Long.valueOf(msgClientSeq), Long.valueOf(msgTime));
                    }
                }

                @Override // kotlin.jvm.functions.Function1
                @Nullable
                public final Unit invoke(@Nullable IMsgOperateCallback iMsgOperateCallback) {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iMsgOperateCallback);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.getMsgByClientSeqAndTime(this.$peer, this.$msgClientSeq, this.$msgTime, iMsgOperateCallback);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void getMsgEmojiLikesList(@Nullable final Contact peer, final long msgSeq, @Nullable final String emojiId, final long emojiType, @Nullable final String cookie, final boolean bForward, final int number, @Nullable IGetMsgEmojiLikesListCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 103)) {
            iPatchRedirector.redirect((short) 103, this, peer, Long.valueOf(msgSeq), emojiId, Long.valueOf(emojiType), cookie, Boolean.valueOf(bForward), Integer.valueOf(number), cb5);
        } else {
            c5("getMsgEmojiLikesList", cb5, new Function1<IGetMsgEmojiLikesListCallback, Unit>(peer, msgSeq, emojiId, emojiType, cookie, bForward, number) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$getMsgEmojiLikesList$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ boolean $bForward;
                final /* synthetic */ String $cookie;
                final /* synthetic */ String $emojiId;
                final /* synthetic */ long $emojiType;
                final /* synthetic */ long $msgSeq;
                final /* synthetic */ int $number;
                final /* synthetic */ Contact $peer;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(1);
                    this.$peer = peer;
                    this.$msgSeq = msgSeq;
                    this.$emojiId = emojiId;
                    this.$emojiType = emojiType;
                    this.$cookie = cookie;
                    this.$bForward = bForward;
                    this.$number = number;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, this, MsgService.this, peer, Long.valueOf(msgSeq), emojiId, Long.valueOf(emojiType), cookie, Boolean.valueOf(bForward), Integer.valueOf(number));
                    }
                }

                @Override // kotlin.jvm.functions.Function1
                @Nullable
                public final Unit invoke(@Nullable IGetMsgEmojiLikesListCallback iGetMsgEmojiLikesListCallback) {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iGetMsgEmojiLikesListCallback);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.getMsgEmojiLikesList(this.$peer, this.$msgSeq, this.$emojiId, this.$emojiType, this.$cookie, this.$bForward, this.$number, iGetMsgEmojiLikesListCallback);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void getMsgSetting(@Nullable IOperateCallback result) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 27)) {
            iPatchRedirector.redirect((short) 27, (Object) this, (Object) result);
        } else {
            check("getMsgSetting", result, new Function1<IOperateCallback, Unit>() { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$getMsgSetting$1
                static IPatchRedirector $redirector_;

                /* JADX INFO: Access modifiers changed from: package-private */
                {
                    super(1);
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, (Object) this, (Object) MsgService.this);
                    }
                }

                @Override // kotlin.jvm.functions.Function1
                @Nullable
                public final Unit invoke(@Nullable IOperateCallback iOperateCallback) {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iOperateCallback);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.getMsgSetting(iOperateCallback);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void getMsgs(@NotNull Contact peer, long msgId, int cnt, boolean queryOrder, @NotNull IMsgOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 44)) {
            iPatchRedirector.redirect((short) 44, this, peer, Long.valueOf(msgId), Integer.valueOf(cnt), Boolean.valueOf(queryOrder), cb5);
            return;
        }
        Intrinsics.checkNotNullParameter(peer, "peer");
        Intrinsics.checkNotNullParameter(cb5, "cb");
        k6(peer, msgId, cnt, queryOrder, true, cb5);
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void getMsgsByMsgId(@Nullable final Contact peer, @Nullable final ArrayList<Long> msgIds, @Nullable IMsgOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 54)) {
            iPatchRedirector.redirect((short) 54, this, peer, msgIds, cb5);
        } else {
            g5("getMsgsByMsgId", cb5, new Function1<IMsgOperateCallback, Unit>(peer, msgIds) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$getMsgsByMsgId$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ ArrayList<Long> $msgIds;
                final /* synthetic */ Contact $peer;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(1);
                    this.$peer = peer;
                    this.$msgIds = msgIds;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, this, MsgService.this, peer, msgIds);
                    }
                }

                @Override // kotlin.jvm.functions.Function1
                @Nullable
                public final Unit invoke(@Nullable IMsgOperateCallback iMsgOperateCallback) {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iMsgOperateCallback);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.getMsgsByMsgId(this.$peer, this.$msgIds, iMsgOperateCallback);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void getMsgsBySeqAndCount(@Nullable Contact peer, long msgSeq, int cnt, boolean queryOrder, @Nullable IMsgOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 48)) {
            iPatchRedirector.redirect((short) 48, this, peer, Long.valueOf(msgSeq), Integer.valueOf(cnt), Boolean.valueOf(queryOrder), cb5);
        } else {
            n0(peer, msgSeq, cnt, queryOrder, true, false, cb5);
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void getMsgsByTypeFilters(@Nullable final Contact peer, final long msgId, final int cnt, final boolean queryOrder, @Nullable final ArrayList<MsgTypeFilter> typeFilters, @Nullable IMsgOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 60)) {
            iPatchRedirector.redirect((short) 60, this, peer, Long.valueOf(msgId), Integer.valueOf(cnt), Boolean.valueOf(queryOrder), typeFilters, cb5);
        } else {
            g5("getMsgsByTypeFilters", cb5, new Function1<IMsgOperateCallback, Unit>(peer, msgId, cnt, queryOrder, typeFilters) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$getMsgsByTypeFilters$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ int $cnt;
                final /* synthetic */ long $msgId;
                final /* synthetic */ Contact $peer;
                final /* synthetic */ boolean $queryOrder;
                final /* synthetic */ ArrayList<MsgTypeFilter> $typeFilters;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(1);
                    this.$peer = peer;
                    this.$msgId = msgId;
                    this.$cnt = cnt;
                    this.$queryOrder = queryOrder;
                    this.$typeFilters = typeFilters;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, this, MsgService.this, peer, Long.valueOf(msgId), Integer.valueOf(cnt), Boolean.valueOf(queryOrder), typeFilters);
                    }
                }

                @Override // kotlin.jvm.functions.Function1
                @Nullable
                public final Unit invoke(@Nullable IMsgOperateCallback iMsgOperateCallback) {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iMsgOperateCallback);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.getMsgsByTypeFilters(this.$peer, this.$msgId, this.$cnt, this.$queryOrder, this.$typeFilters, iMsgOperateCallback);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void getMsgsExt(@NotNull MsgsReq req, @Nullable IMsgsRspOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 50)) {
            iPatchRedirector.redirect((short) 50, (Object) this, (Object) req, (Object) cb5);
        } else {
            Intrinsics.checkNotNullParameter(req, "req");
            n6(req, true, cb5);
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void getMsgsIncludeSelf(@NotNull Contact peer, long msgId, int cnt, boolean queryOrder, @NotNull final IMsgOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 46)) {
            iPatchRedirector.redirect((short) 46, this, peer, Long.valueOf(msgId), Integer.valueOf(cnt), Boolean.valueOf(queryOrder), cb5);
            return;
        }
        Intrinsics.checkNotNullParameter(peer, "peer");
        Intrinsics.checkNotNullParameter(cb5, "cb");
        MsgsReq msgsReq = new MsgsReq();
        msgsReq.peer = peer;
        msgsReq.byType = 1;
        msgsReq.msgId = msgId;
        msgsReq.cnt = cnt;
        msgsReq.queryOrder = queryOrder;
        msgsReq.includeSelf = true;
        getMsgsExt(msgsReq, new IMsgsRspOperateCallback() { // from class: com.tencent.qqnt.kernel.api.impl.jw
            @Override // com.tencent.qqnt.kernel.nativeinterface.IMsgsRspOperateCallback
            public final void onResult(MsgsRsp msgsRsp) {
                MsgService.o6(IMsgOperateCallback.this, msgsRsp);
            }
        });
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void getMsgsWithMsgTimeAndClientSeqForC2C(@NotNull Contact peer, long msgTime, long clientSeq, int cnt, boolean needIncludeSelf, boolean queryOrder, boolean incloudeDeleteMsg, @NotNull final IMsgOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 99)) {
            iPatchRedirector.redirect((short) 99, this, peer, Long.valueOf(msgTime), Long.valueOf(clientSeq), Integer.valueOf(cnt), Boolean.valueOf(needIncludeSelf), Boolean.valueOf(queryOrder), Boolean.valueOf(incloudeDeleteMsg), cb5);
            return;
        }
        Intrinsics.checkNotNullParameter(peer, "peer");
        Intrinsics.checkNotNullParameter(cb5, "cb");
        MsgsReq msgsReq = new MsgsReq();
        msgsReq.peer = peer;
        msgsReq.byType = 3;
        msgsReq.msgTime = msgTime;
        msgsReq.clientSeq = clientSeq;
        msgsReq.cnt = cnt;
        msgsReq.queryOrder = queryOrder;
        msgsReq.includeDeleteMsg = incloudeDeleteMsg;
        msgsReq.includeSelf = needIncludeSelf;
        getMsgsExt(msgsReq, new IMsgsRspOperateCallback() { // from class: com.tencent.qqnt.kernel.api.impl.jx
            @Override // com.tencent.qqnt.kernel.nativeinterface.IMsgsRspOperateCallback
            public final void onResult(MsgsRsp msgsRsp) {
                MsgService.p6(IMsgOperateCallback.this, msgsRsp);
            }
        });
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void getMsgsWithStatus(@Nullable final GetMsgsAndStatusRecord record, @Nullable IGetMsgWithStatusCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 47)) {
            iPatchRedirector.redirect((short) 47, (Object) this, (Object) record, (Object) cb5);
        } else {
            e5("getMsgsWithStatus", cb5, new Function1<IGetMsgWithStatusCallback, Unit>(record) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$getMsgsWithStatus$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ GetMsgsAndStatusRecord $record;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(1);
                    this.$record = record;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, (Object) this, (Object) MsgService.this, (Object) record);
                    }
                }

                @Override // kotlin.jvm.functions.Function1
                @Nullable
                public final Unit invoke(@Nullable IGetMsgWithStatusCallback iGetMsgWithStatusCallback) {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iGetMsgWithStatusCallback);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.getMsgsWithStatus(this.$record, iGetMsgWithStatusCallback);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void getMultiMsg(@NotNull Contact peer, long rootMsgId, long parentMsgId, @NotNull IGetMultiMsgCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 37)) {
            iPatchRedirector.redirect((short) 37, this, peer, Long.valueOf(rootMsgId), Long.valueOf(parentMsgId), cb5);
            return;
        }
        Intrinsics.checkNotNullParameter(peer, "peer");
        Intrinsics.checkNotNullParameter(cb5, "cb");
        IKernelMsgService service = getService();
        if (service != null) {
            service.getMultiMsg(peer, rootMsgId, parentMsgId, cb5);
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void getOnLineDev(@Nullable IOperateCallback result) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 10)) {
            iPatchRedirector.redirect((short) 10, (Object) this, (Object) result);
        } else {
            check("getOnLineDev", result, new Function1<IOperateCallback, Unit>() { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$getOnLineDev$1
                static IPatchRedirector $redirector_;

                /* JADX INFO: Access modifiers changed from: package-private */
                {
                    super(1);
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, (Object) this, (Object) MsgService.this);
                    }
                }

                @Override // kotlin.jvm.functions.Function1
                @Nullable
                public final Unit invoke(@Nullable IOperateCallback iOperateCallback) {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iOperateCallback);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.getOnLineDev(iOperateCallback);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void getRecallMsgsByMsgId(@Nullable Contact peer, @NotNull ArrayList<Long> msgIds, @Nullable IMsgOperateCallback listener) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 69)) {
            iPatchRedirector.redirect((short) 69, this, peer, msgIds, listener);
            return;
        }
        Intrinsics.checkNotNullParameter(msgIds, "msgIds");
        IKernelMsgService service = getService();
        if (service != null) {
            service.getRecallMsgsByMsgId(peer, msgIds, listener);
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void getRecentEmojiList(final int chatType, @Nullable IGetRecentUseEmojiListCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 101)) {
            iPatchRedirector.redirect((short) 101, (Object) this, chatType, (Object) cb5);
        } else {
            f5("getRecentEmojiList", cb5, new Function1<IGetRecentUseEmojiListCallback, Unit>(chatType) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$getRecentEmojiList$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ int $chatType;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(1);
                    this.$chatType = chatType;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, (Object) this, (Object) MsgService.this, chatType);
                    }
                }

                @Override // kotlin.jvm.functions.Function1
                @Nullable
                public final Unit invoke(@Nullable IGetRecentUseEmojiListCallback iGetRecentUseEmojiListCallback) {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iGetRecentUseEmojiListCallback);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.getRecentEmojiList(this.$chatType, iGetRecentUseEmojiListCallback);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void getRecentHiddenSesionList(@Nullable final IOperateHiddenSessionCallback callback) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 168)) {
            iPatchRedirector.redirect((short) 168, (Object) this, (Object) callback);
        } else {
            check("getRecentHiddenSesionList", new Function0<Unit>(callback) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$getRecentHiddenSesionList$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ IOperateHiddenSessionCallback $callback;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(0);
                    this.$callback = callback;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, (Object) this, (Object) MsgService.this, (Object) callback);
                    }
                }

                @Override // kotlin.jvm.functions.Function0
                @Nullable
                public final Unit invoke() {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.getRecentHiddenSesionList(this.$callback);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void getRecentUseEmojiList(@Nullable IGetRecentUseEmojiListCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 100)) {
            iPatchRedirector.redirect((short) 100, (Object) this, (Object) cb5);
        } else {
            f5("getRecentUseEmojiList", cb5, new Function1<IGetRecentUseEmojiListCallback, Unit>() { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$getRecentUseEmojiList$1
                static IPatchRedirector $redirector_;

                /* JADX INFO: Access modifiers changed from: package-private */
                {
                    super(1);
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, (Object) this, (Object) MsgService.this);
                    }
                }

                @Override // kotlin.jvm.functions.Function1
                @Nullable
                public final Unit invoke(@Nullable IGetRecentUseEmojiListCallback iGetRecentUseEmojiListCallback) {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iGetRecentUseEmojiListCallback);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.getRecentUseEmojiList(iGetRecentUseEmojiListCallback);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void getReplyDraft(@NotNull final Contact peer, final long rootSeq, @Nullable IGetDraftOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 112)) {
            iPatchRedirector.redirect((short) 112, this, peer, Long.valueOf(rootSeq), cb5);
        } else {
            Intrinsics.checkNotNullParameter(peer, "peer");
            a5("getReplyDraft", cb5, new Function1<IGetDraftOperateCallback, Unit>(peer, rootSeq) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$getReplyDraft$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ Contact $peer;
                final /* synthetic */ long $rootSeq;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(1);
                    this.$peer = peer;
                    this.$rootSeq = rootSeq;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, this, MsgService.this, peer, Long.valueOf(rootSeq));
                    }
                }

                @Override // kotlin.jvm.functions.Function1
                @Nullable
                public final Unit invoke(@Nullable IGetDraftOperateCallback iGetDraftOperateCallback) {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iGetDraftOperateCallback);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.getReplyDraft(this.$peer, this.$rootSeq, iGetDraftOperateCallback);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void getRichMediaElement(@NotNull final RichMediaElementGetReq getReq) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 76)) {
            iPatchRedirector.redirect((short) 76, (Object) this, (Object) getReq);
        } else {
            Intrinsics.checkNotNullParameter(getReq, "getReq");
            check("getRichMediaElement", new Function0<Unit>(getReq) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$getRichMediaElement$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ RichMediaElementGetReq $getReq;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(0);
                    this.$getReq = getReq;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, (Object) this, (Object) MsgService.this, (Object) getReq);
                    }
                }

                @Override // kotlin.jvm.functions.Function0
                @Nullable
                public final Unit invoke() {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.getRichMediaElement(this.$getReq);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    @Nullable
    public String getRichMediaFilePathForGuild(@NotNull final RichMediaFilePathInfo richMediaFilePathInfo) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 82)) {
            return (String) iPatchRedirector.redirect((short) 82, (Object) this, (Object) richMediaFilePathInfo);
        }
        Intrinsics.checkNotNullParameter(richMediaFilePathInfo, "richMediaFilePathInfo");
        return (String) check("getRichMediaFilePathForGuild", new Function0<String>(richMediaFilePathInfo) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$getRichMediaFilePathForGuild$1
            static IPatchRedirector $redirector_;
            final /* synthetic */ RichMediaFilePathInfo $richMediaFilePathInfo;

            /* JADX INFO: Access modifiers changed from: package-private */
            /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
            {
                super(0);
                this.$richMediaFilePathInfo = richMediaFilePathInfo;
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                    iPatchRedirector2.redirect((short) 1, (Object) this, (Object) MsgService.this, (Object) richMediaFilePathInfo);
                }
            }

            @Override // kotlin.jvm.functions.Function0
            @Nullable
            public final String invoke() {
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                    return (String) iPatchRedirector2.redirect((short) 2, (Object) this);
                }
                IKernelMsgService service = MsgService.this.getService();
                if (service != null) {
                    return service.getRichMediaFilePathForGuild(this.$richMediaFilePathInfo);
                }
                return null;
            }
        });
    }

    @Override // com.tencent.qqnt.kernel.api.w
    @Nullable
    public String getRichMediaFilePathForMobileQQSend(@NotNull final RichMediaFilePathInfo richMediaFilePathInfo) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 81)) {
            return (String) iPatchRedirector.redirect((short) 81, (Object) this, (Object) richMediaFilePathInfo);
        }
        Intrinsics.checkNotNullParameter(richMediaFilePathInfo, "richMediaFilePathInfo");
        return (String) check("getRichMediaFilePathForMobileQQSend", new Function0<String>(richMediaFilePathInfo) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$getRichMediaFilePathForMobileQQSend$1
            static IPatchRedirector $redirector_;
            final /* synthetic */ RichMediaFilePathInfo $richMediaFilePathInfo;

            /* JADX INFO: Access modifiers changed from: package-private */
            /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
            {
                super(0);
                this.$richMediaFilePathInfo = richMediaFilePathInfo;
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                    iPatchRedirector2.redirect((short) 1, (Object) this, (Object) MsgService.this, (Object) richMediaFilePathInfo);
                }
            }

            @Override // kotlin.jvm.functions.Function0
            @Nullable
            public final String invoke() {
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                    return (String) iPatchRedirector2.redirect((short) 2, (Object) this);
                }
                IKernelMsgService service = MsgService.this.getService();
                if (service != null) {
                    return service.getRichMediaFilePathForMobileQQSend(this.$richMediaFilePathInfo);
                }
                return null;
            }
        });
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void getSingleMsg(@Nullable final Contact peer, final long msgSeq, @Nullable IMsgOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 57)) {
            iPatchRedirector.redirect((short) 57, this, peer, Long.valueOf(msgSeq), cb5);
        } else {
            g5("getSingleMsg", cb5, new Function1<IMsgOperateCallback, Unit>(peer, msgSeq) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$getSingleMsg$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ long $msgSeq;
                final /* synthetic */ Contact $peer;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(1);
                    this.$peer = peer;
                    this.$msgSeq = msgSeq;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, this, MsgService.this, peer, Long.valueOf(msgSeq));
                    }
                }

                @Override // kotlin.jvm.functions.Function1
                @Nullable
                public final Unit invoke(@Nullable IMsgOperateCallback iMsgOperateCallback) {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iMsgOperateCallback);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.getSingleMsg(this.$peer, this.$msgSeq, iMsgOperateCallback);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void getSourceOfReplyMsg(@Nullable final Contact peer, final long msgId, final long sourceMsgSeq, @Nullable IMsgOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 55)) {
            iPatchRedirector.redirect((short) 55, this, peer, Long.valueOf(msgId), Long.valueOf(sourceMsgSeq), cb5);
        } else {
            g5("getSourceOfReplyMsg", cb5, new Function1<IMsgOperateCallback, Unit>(peer, msgId, sourceMsgSeq) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$getSourceOfReplyMsg$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ long $msgId;
                final /* synthetic */ Contact $peer;
                final /* synthetic */ long $sourceMsgSeq;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(1);
                    this.$peer = peer;
                    this.$msgId = msgId;
                    this.$sourceMsgSeq = sourceMsgSeq;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, this, MsgService.this, peer, Long.valueOf(msgId), Long.valueOf(sourceMsgSeq));
                    }
                }

                @Override // kotlin.jvm.functions.Function1
                @Nullable
                public final Unit invoke(@Nullable IMsgOperateCallback iMsgOperateCallback) {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iMsgOperateCallback);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.getSourceOfReplyMsg(this.$peer, this.$msgId, this.$sourceMsgSeq, iMsgOperateCallback);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void getSourceOfReplyMsgV2(@NotNull final Contact peer, final long rootMsgId, final long replyMsgId, @NotNull final IMsgOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 56)) {
            iPatchRedirector.redirect((short) 56, this, peer, Long.valueOf(rootMsgId), Long.valueOf(replyMsgId), cb5);
            return;
        }
        Intrinsics.checkNotNullParameter(peer, "peer");
        Intrinsics.checkNotNullParameter(cb5, "cb");
        g5("getSourceOfReplyMsgV2", cb5, new Function1<IMsgOperateCallback, Unit>(peer, rootMsgId, replyMsgId, cb5) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$getSourceOfReplyMsgV2$1
            static IPatchRedirector $redirector_;
            final /* synthetic */ IMsgOperateCallback $cb;
            final /* synthetic */ Contact $peer;
            final /* synthetic */ long $replyMsgId;
            final /* synthetic */ long $rootMsgId;

            /* JADX INFO: Access modifiers changed from: package-private */
            /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
            {
                super(1);
                this.$peer = peer;
                this.$rootMsgId = rootMsgId;
                this.$replyMsgId = replyMsgId;
                this.$cb = cb5;
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                    iPatchRedirector2.redirect((short) 1, this, MsgService.this, peer, Long.valueOf(rootMsgId), Long.valueOf(replyMsgId), cb5);
                }
            }

            @Override // kotlin.jvm.functions.Function1
            @Nullable
            public final Unit invoke(@Nullable IMsgOperateCallback iMsgOperateCallback) {
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                    return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iMsgOperateCallback);
                }
                IKernelMsgService service = MsgService.this.getService();
                if (service == null) {
                    return null;
                }
                service.getSourceOfReplyMsgV2(this.$peer, this.$rootMsgId, this.$replyMsgId, this.$cb);
                return Unit.INSTANCE;
            }
        });
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void getTempChatInfo(final int chatType, @Nullable final String peerUid, @Nullable final IGetTempChatInfoCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 53)) {
            iPatchRedirector.redirect((short) 53, this, Integer.valueOf(chatType), peerUid, cb5);
        } else {
            check("getTempChatInfo", cb5, new Function1<IGetTempChatInfoCallback, Unit>(chatType, peerUid, cb5) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$getTempChatInfo$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ IGetTempChatInfoCallback $cb;
                final /* synthetic */ int $chatType;
                final /* synthetic */ String $peerUid;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(1);
                    this.$chatType = chatType;
                    this.$peerUid = peerUid;
                    this.$cb = cb5;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, this, MsgService.this, Integer.valueOf(chatType), peerUid, cb5);
                    }
                }

                @Override // kotlin.jvm.functions.Function1
                @Nullable
                public final Unit invoke(@Nullable IGetTempChatInfoCallback iGetTempChatInfoCallback) {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iGetTempChatInfoCallback);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.getTempChatInfo(this.$chatType, this.$peerUid, this.$cb);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void i0(@NotNull final JoinDragonGroupEmojiReq req, @NotNull final IJoinDragonGroupCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 19)) {
            iPatchRedirector.redirect((short) 19, (Object) this, (Object) req, (Object) cb5);
            return;
        }
        Intrinsics.checkNotNullParameter(req, "req");
        Intrinsics.checkNotNullParameter(cb5, "cb");
        check("joinDragonGroupEmoji", new Function0<Unit>(req, cb5) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$joinDragonGroupEmoji$1
            static IPatchRedirector $redirector_;
            final /* synthetic */ IJoinDragonGroupCallback $cb;
            final /* synthetic */ JoinDragonGroupEmojiReq $req;

            /* JADX INFO: Access modifiers changed from: package-private */
            /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
            {
                super(0);
                this.$req = req;
                this.$cb = cb5;
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                    iPatchRedirector2.redirect((short) 1, this, MsgService.this, req, cb5);
                }
            }

            @Override // kotlin.jvm.functions.Function0
            @Nullable
            public final Unit invoke() {
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                    return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this);
                }
                IKernelMsgService service = MsgService.this.getService();
                if (service == null) {
                    return null;
                }
                service.JoinDragonGroupEmoji(this.$req, this.$cb);
                return Unit.INSTANCE;
            }
        });
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void importDataLineMsg() {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 160)) {
            iPatchRedirector.redirect((short) 160, (Object) this);
            return;
        }
        IKernelMsgService service = getService();
        if (service != null) {
            service.importDataLineMsg();
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void importOldDbMsg(@Nullable IOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 149)) {
            iPatchRedirector.redirect((short) 149, (Object) this, (Object) cb5);
        } else {
            check("importOldDbMsg", cb5, new Function1<IOperateCallback, Unit>() { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$importOldDbMsg$1
                static IPatchRedirector $redirector_;

                /* JADX INFO: Access modifiers changed from: package-private */
                {
                    super(1);
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, (Object) this, (Object) MsgService.this);
                    }
                }

                @Override // kotlin.jvm.functions.Function1
                @Nullable
                public final Unit invoke(@Nullable IOperateCallback iOperateCallback) {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iOperateCallback);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.importOldDbMsg(iOperateCallback);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void isMqqDataImportFinished(@Nullable IOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 152)) {
            iPatchRedirector.redirect((short) 152, (Object) this, (Object) cb5);
        } else {
            check("isMqqDataImportFinished", cb5, new Function1<IOperateCallback, Unit>() { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$isMqqDataImportFinished$1
                static IPatchRedirector $redirector_;

                /* JADX INFO: Access modifiers changed from: package-private */
                {
                    super(1);
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, (Object) this, (Object) MsgService.this);
                    }
                }

                @Override // kotlin.jvm.functions.Function1
                @Nullable
                public final Unit invoke(@Nullable IOperateCallback iOperateCallback) {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iOperateCallback);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.isMqqDataImportFinished(iOperateCallback);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void j(@NotNull final Contact peer, final long msgId, final long elemId, @NotNull IOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 92)) {
            iPatchRedirector.redirect((short) 92, this, peer, Long.valueOf(msgId), Long.valueOf(elemId), cb5);
            return;
        }
        Intrinsics.checkNotNullParameter(peer, "peer");
        Intrinsics.checkNotNullParameter(cb5, "cb");
        check("setPttPlayedState", cb5, new Function1<IOperateCallback, Unit>(msgId, peer, elemId) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$setPttPlayedState$1
            static IPatchRedirector $redirector_;
            final /* synthetic */ long $elemId;
            final /* synthetic */ long $msgId;
            final /* synthetic */ Contact $peer;

            /* JADX INFO: Access modifiers changed from: package-private */
            /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
            {
                super(1);
                this.$msgId = msgId;
                this.$peer = peer;
                this.$elemId = elemId;
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                    iPatchRedirector2.redirect((short) 1, this, MsgService.this, Long.valueOf(msgId), peer, Long.valueOf(elemId));
                }
            }

            @Override // kotlin.jvm.functions.Function1
            @Nullable
            public final Unit invoke(@Nullable IOperateCallback iOperateCallback) {
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                    return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iOperateCallback);
                }
                IKernelMsgService service = MsgService.this.getService();
                if (service == null) {
                    return null;
                }
                service.setPttPlayedState(this.$msgId, this.$peer, this.$elemId, iOperateCallback);
                return Unit.INSTANCE;
            }
        });
    }

    @Override // com.tencent.qqnt.kernel.api.w
    @Nullable
    public Long j0(final int chatType) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 38)) {
            return (Long) iPatchRedirector.redirect((short) 38, (Object) this, chatType);
        }
        return (Long) check("generateMsgUniqueId", new Function0<Long>(chatType) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$generateMsgUniqueId$1
            static IPatchRedirector $redirector_;
            final /* synthetic */ int $chatType;

            /* JADX INFO: Access modifiers changed from: package-private */
            /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
            {
                super(0);
                this.$chatType = chatType;
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                    iPatchRedirector2.redirect((short) 1, (Object) this, (Object) MsgService.this, chatType);
                }
            }

            /* JADX WARN: Can't rename method to resolve collision */
            @Override // kotlin.jvm.functions.Function0
            @Nullable
            public final Long invoke() {
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                    return (Long) iPatchRedirector2.redirect((short) 2, (Object) this);
                }
                IKernelMsgService service = MsgService.this.getService();
                if (service != null) {
                    return Long.valueOf(service.generateMsgUniqueId(this.$chatType, NetConnInfoCenter.getServerTimeMillis()));
                }
                return null;
            }
        });
    }

    @NotNull
    public final IKernelMsgListener j6(@NotNull IKernelMsgListener listener) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 6)) {
            return (IKernelMsgListener) iPatchRedirector.redirect((short) 6, (Object) this, (Object) listener);
        }
        Intrinsics.checkNotNullParameter(listener, "listener");
        return new d(listener);
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void k(@NotNull final ArrayList<Long> rootMsgIds, @NotNull final ArrayList<Long> subMsgIds, @NotNull final Contact srcContact, @NotNull final ArrayList<Contact> dstContacts, @Nullable final ArrayList<MsgElement> commentElements, @NotNull final IForwardOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 34)) {
            iPatchRedirector.redirect((short) 34, this, rootMsgIds, subMsgIds, srcContact, dstContacts, commentElements, cb5);
            return;
        }
        Intrinsics.checkNotNullParameter(rootMsgIds, "rootMsgIds");
        Intrinsics.checkNotNullParameter(subMsgIds, "subMsgIds");
        Intrinsics.checkNotNullParameter(srcContact, "srcContact");
        Intrinsics.checkNotNullParameter(dstContacts, "dstContacts");
        Intrinsics.checkNotNullParameter(cb5, "cb");
        check("forwardSubMsg", new Function0<Unit>(commentElements, srcContact, this, rootMsgIds, subMsgIds, dstContacts, cb5) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$forwardSubMsg$1
            static IPatchRedirector $redirector_;
            final /* synthetic */ IForwardOperateCallback $cb;
            final /* synthetic */ ArrayList<MsgElement> $commentElements;
            final /* synthetic */ ArrayList<Contact> $dstContacts;
            final /* synthetic */ ArrayList<Long> $rootMsgIds;
            final /* synthetic */ Contact $srcContact;
            final /* synthetic */ ArrayList<Long> $subMsgIds;
            final /* synthetic */ MsgService this$0;

            /* JADX INFO: Access modifiers changed from: package-private */
            /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
            {
                super(0);
                this.$commentElements = commentElements;
                this.$srcContact = srcContact;
                this.this$0 = this;
                this.$rootMsgIds = rootMsgIds;
                this.$subMsgIds = subMsgIds;
                this.$dstContacts = dstContacts;
                this.$cb = cb5;
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                    iPatchRedirector2.redirect((short) 1, this, commentElements, srcContact, this, rootMsgIds, subMsgIds, dstContacts, cb5);
                }
            }

            @Override // kotlin.jvm.functions.Function0
            @Nullable
            public final Unit invoke() {
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                    return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this);
                }
                HashMap<Integer, MsgAttributeInfo> hashMap = new HashMap<>();
                ArrayList<MsgElement> arrayList = this.$commentElements;
                if (arrayList != null && !arrayList.isEmpty()) {
                    com.tencent.qqnt.kernel.aio.msg.a.f357212a.a(hashMap, this.$srcContact, this.$commentElements.get(0).elementType);
                    IKernelMsgService service = this.this$0.getService();
                    if (service == null) {
                        return null;
                    }
                    service.forwardSubMsgWithComment(this.$rootMsgIds, this.$subMsgIds, this.$srcContact, this.$dstContacts, this.$commentElements, hashMap, this.$cb);
                    return Unit.INSTANCE;
                }
                com.tencent.qqnt.kernel.aio.msg.a.f357212a.a(hashMap, this.$srcContact, 1);
                IKernelMsgService service2 = this.this$0.getService();
                if (service2 == null) {
                    return null;
                }
                service2.forwardSubMsgWithComment(this.$rootMsgIds, this.$subMsgIds, this.$srcContact, this.$dstContacts, new ArrayList<>(), hashMap, this.$cb);
                return Unit.INSTANCE;
            }
        });
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void k0(@NotNull final GetArkToMarkdownMsgTemplateReqInfo reqInfo, @NotNull final IGetArkToMarkdownMsgTemplateCallback callback) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 94)) {
            iPatchRedirector.redirect((short) 94, (Object) this, (Object) reqInfo, (Object) callback);
            return;
        }
        Intrinsics.checkNotNullParameter(reqInfo, "reqInfo");
        Intrinsics.checkNotNullParameter(callback, "callback");
        BaseService.checkCommon$default(this, "getTemplateMsgWhiteList", new Function0<Unit>(reqInfo, callback) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$getTemplateMsgTemplate$1
            static IPatchRedirector $redirector_;
            final /* synthetic */ IGetArkToMarkdownMsgTemplateCallback $callback;
            final /* synthetic */ GetArkToMarkdownMsgTemplateReqInfo $reqInfo;

            /* JADX INFO: Access modifiers changed from: package-private */
            /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
            {
                super(0);
                this.$reqInfo = reqInfo;
                this.$callback = callback;
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                    iPatchRedirector2.redirect((short) 1, this, MsgService.this, reqInfo, callback);
                }
            }

            @Override // kotlin.jvm.functions.Function0
            public /* bridge */ /* synthetic */ Unit invoke() {
                invoke2();
                return Unit.INSTANCE;
            }

            /* renamed from: invoke, reason: avoid collision after fix types in other method */
            public final void invoke2() {
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                    iPatchRedirector2.redirect((short) 2, (Object) this);
                    return;
                }
                IKernelMsgService service = MsgService.this.getService();
                if (service != null) {
                    service.getArkToMarkdownMsgTemplate(this.$reqInfo, this.$callback);
                }
            }
        }, null, 4, null);
    }

    public void k6(@NotNull Contact peer, long msgId, int cnt, boolean queryOrder, boolean callbackInMainThread, @NotNull final IMsgOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 45)) {
            iPatchRedirector.redirect((short) 45, this, peer, Long.valueOf(msgId), Integer.valueOf(cnt), Boolean.valueOf(queryOrder), Boolean.valueOf(callbackInMainThread), cb5);
            return;
        }
        Intrinsics.checkNotNullParameter(peer, "peer");
        Intrinsics.checkNotNullParameter(cb5, "cb");
        MsgsReq msgsReq = new MsgsReq();
        msgsReq.peer = peer;
        msgsReq.byType = 1;
        msgsReq.msgId = msgId;
        msgsReq.cnt = cnt;
        msgsReq.queryOrder = queryOrder;
        n6(msgsReq, callbackInMainThread, new IMsgsRspOperateCallback() { // from class: com.tencent.qqnt.kernel.api.impl.jt
            @Override // com.tencent.qqnt.kernel.nativeinterface.IMsgsRspOperateCallback
            public final void onResult(MsgsRsp msgsRsp) {
                MsgService.l6(IMsgOperateCallback.this, msgsRsp);
            }
        });
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void kickOffLine(@NotNull final DevInfo devInfo, @Nullable IOperateCallback result) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 20)) {
            iPatchRedirector.redirect((short) 20, (Object) this, (Object) devInfo, (Object) result);
        } else {
            Intrinsics.checkNotNullParameter(devInfo, "devInfo");
            check("kickOffLine", result, new Function1<IOperateCallback, Unit>(devInfo) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$kickOffLine$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ DevInfo $devInfo;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(1);
                    this.$devInfo = devInfo;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, (Object) this, (Object) MsgService.this, (Object) devInfo);
                    }
                }

                @Override // kotlin.jvm.functions.Function1
                @Nullable
                public final Unit invoke(@Nullable IOperateCallback iOperateCallback) {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iOperateCallback);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.kickOffLine(this.$devInfo, iOperateCallback);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void likeOrDislikeReportForMsg(@NotNull Contact peer, @NotNull FeedBackMsgInfo msgInfo, @NotNull FeedBackDataForMsg feedBackData, @NotNull IOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 180)) {
            iPatchRedirector.redirect((short) 180, this, peer, msgInfo, feedBackData, cb5);
            return;
        }
        Intrinsics.checkNotNullParameter(peer, "peer");
        Intrinsics.checkNotNullParameter(msgInfo, "msgInfo");
        Intrinsics.checkNotNullParameter(feedBackData, "feedBackData");
        Intrinsics.checkNotNullParameter(cb5, "cb");
        IKernelMsgService service = getService();
        if (service != null) {
            service.likeOrDislikeReportForMsg(peer, msgInfo, feedBackData, cb5);
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void m0(@NotNull com.tencent.qqnt.kernel.invorker.b listener) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 2)) {
            iPatchRedirector.redirect((short) 2, (Object) this, (Object) listener);
        } else {
            Intrinsics.checkNotNullParameter(listener, "listener");
            this.mExpandListenerList.add(listener);
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void modifyBottomEmojiTableSwitchStatus(@NotNull ModifyBottomEmojiTableSwitchStatusReq req, @Nullable IModifyBottomEmojiTableSwitchStatusCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 127)) {
            iPatchRedirector.redirect((short) 127, (Object) this, (Object) req, (Object) cb5);
            return;
        }
        Intrinsics.checkNotNullParameter(req, "req");
        IKernelMsgService service = getService();
        if (service != null) {
            service.modifyBottomEmojiTableSwitchStatus(req, cb5);
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void moveBottomEmojiTable(@NotNull MoveBottomEmojiTableReq req, @Nullable IMoveBottomEmojiTableCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 126)) {
            iPatchRedirector.redirect((short) 126, (Object) this, (Object) req, (Object) cb5);
            return;
        }
        Intrinsics.checkNotNullParameter(req, "req");
        IKernelMsgService service = getService();
        if (service != null) {
            service.moveBottomEmojiTable(req, cb5);
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void n0(@Nullable Contact peer, long msgSeq, int cnt, boolean queryOrder, boolean callbackInMainThread, boolean includeDeleteMsg, @Nullable final IMsgOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 49)) {
            iPatchRedirector.redirect((short) 49, this, peer, Long.valueOf(msgSeq), Integer.valueOf(cnt), Boolean.valueOf(queryOrder), Boolean.valueOf(callbackInMainThread), Boolean.valueOf(includeDeleteMsg), cb5);
            return;
        }
        MsgsReq msgsReq = new MsgsReq();
        msgsReq.peer = peer;
        msgsReq.byType = 2;
        msgsReq.msgSeq = msgSeq;
        msgsReq.cnt = cnt;
        msgsReq.queryOrder = queryOrder;
        msgsReq.includeDeleteMsg = includeDeleteMsg;
        n6(msgsReq, callbackInMainThread, new IMsgsRspOperateCallback() { // from class: com.tencent.qqnt.kernel.api.impl.ju
            @Override // com.tencent.qqnt.kernel.nativeinterface.IMsgsRspOperateCallback
            public final void onResult(MsgsRsp msgsRsp) {
                MsgService.m6(IMsgOperateCallback.this, msgsRsp);
            }
        });
    }

    public void n6(@NotNull final MsgsReq req, boolean callbackInMainThread, @Nullable IMsgsRspOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 51)) {
            iPatchRedirector.redirect((short) 51, this, req, Boolean.valueOf(callbackInMainThread), cb5);
        } else {
            Intrinsics.checkNotNullParameter(req, "req");
            i5("getMsgsExt", cb5, callbackInMainThread, new Function1<IMsgsRspOperateCallback, Unit>(req) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$getMsgsExt$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ MsgsReq $req;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(1);
                    this.$req = req;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, (Object) this, (Object) MsgService.this, (Object) req);
                    }
                }

                @Override // kotlin.jvm.functions.Function1
                @Nullable
                public final Unit invoke(@Nullable IMsgsRspOperateCallback iMsgsRspOperateCallback) {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iMsgsRspOperateCallback);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.getMsgsExt(this.$req, iMsgsRspOperateCallback);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void o(@NotNull final Contact contact, final long msgId, @NotNull IOperateCallback callback) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 178)) {
            iPatchRedirector.redirect((short) 178, this, contact, Long.valueOf(msgId), callback);
            return;
        }
        Intrinsics.checkNotNullParameter(contact, "contact");
        Intrinsics.checkNotNullParameter(callback, "callback");
        check("fetchLongMsg", callback, new Function1<IOperateCallback, Unit>(contact, msgId) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$fetchLongMsg$1
            static IPatchRedirector $redirector_;
            final /* synthetic */ Contact $contact;
            final /* synthetic */ long $msgId;

            /* JADX INFO: Access modifiers changed from: package-private */
            /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
            {
                super(1);
                this.$contact = contact;
                this.$msgId = msgId;
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                    iPatchRedirector2.redirect((short) 1, this, MsgService.this, contact, Long.valueOf(msgId));
                }
            }

            @Override // kotlin.jvm.functions.Function1
            @Nullable
            public final Unit invoke(@Nullable IOperateCallback iOperateCallback) {
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                    return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iOperateCallback);
                }
                IKernelMsgService service = MsgService.this.getService();
                if (service == null) {
                    return null;
                }
                service.fetchLongMsgWithCb(this.$contact, this.$msgId, iOperateCallback);
                return Unit.INSTANCE;
            }
        });
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void o0(final long msgId, @NotNull final Contact peer, @NotNull final ArrayList<MsgElement> msgElements) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 31)) {
            iPatchRedirector.redirect((short) 31, this, Long.valueOf(msgId), peer, msgElements);
            return;
        }
        Intrinsics.checkNotNullParameter(peer, "peer");
        Intrinsics.checkNotNullParameter(msgElements, "msgElements");
        check("addSendMsg", new Function0<Unit>(msgId, peer, msgElements) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$addSendMsg$1
            static IPatchRedirector $redirector_;
            final /* synthetic */ ArrayList<MsgElement> $msgElements;
            final /* synthetic */ long $msgId;
            final /* synthetic */ Contact $peer;

            /* JADX INFO: Access modifiers changed from: package-private */
            /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
            {
                super(0);
                this.$msgId = msgId;
                this.$peer = peer;
                this.$msgElements = msgElements;
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                    iPatchRedirector2.redirect((short) 1, this, MsgService.this, Long.valueOf(msgId), peer, msgElements);
                }
            }

            @Override // kotlin.jvm.functions.Function0
            @Nullable
            public final Unit invoke() {
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                    return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this);
                }
                IKernelMsgService service = MsgService.this.getService();
                if (service == null) {
                    return null;
                }
                service.addSendMsg(this.$msgId, this.$peer, this.$msgElements, new HashMap<>());
                return Unit.INSTANCE;
            }
        });
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void prepareTempChat(@Nullable final TempChatPrepareInfo preInfo, @Nullable IOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 52)) {
            iPatchRedirector.redirect((short) 52, (Object) this, (Object) preInfo, (Object) cb5);
        } else {
            check("prepareTempChat", cb5, new Function1<IOperateCallback, Unit>(preInfo) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$prepareTempChat$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ TempChatPrepareInfo $preInfo;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(1);
                    this.$preInfo = preInfo;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, (Object) this, (Object) MsgService.this, (Object) preInfo);
                    }
                }

                @Override // kotlin.jvm.functions.Function1
                @Nullable
                public final Unit invoke(@Nullable IOperateCallback iOperateCallback) {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iOperateCallback);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.prepareTempChat(this.$preInfo, iOperateCallback);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void queryEmoticonMsgs(final long msgId, final long msgTime, final long msgSeq, @NotNull final QueryMsgsParams params, @NotNull final IMsgOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 144)) {
            iPatchRedirector.redirect((short) 144, this, Long.valueOf(msgId), Long.valueOf(msgTime), Long.valueOf(msgSeq), params, cb5);
            return;
        }
        Intrinsics.checkNotNullParameter(params, "params");
        Intrinsics.checkNotNullParameter(cb5, "cb");
        check("queryEmoticonMsgs", new Function0<Unit>(msgId, msgTime, msgSeq, params, cb5) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$queryEmoticonMsgs$1
            static IPatchRedirector $redirector_;
            final /* synthetic */ IMsgOperateCallback $cb;
            final /* synthetic */ long $msgId;
            final /* synthetic */ long $msgSeq;
            final /* synthetic */ long $msgTime;
            final /* synthetic */ QueryMsgsParams $params;

            /* JADX INFO: Access modifiers changed from: package-private */
            /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
            {
                super(0);
                this.$msgId = msgId;
                this.$msgTime = msgTime;
                this.$msgSeq = msgSeq;
                this.$params = params;
                this.$cb = cb5;
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                    iPatchRedirector2.redirect((short) 1, this, MsgService.this, Long.valueOf(msgId), Long.valueOf(msgTime), Long.valueOf(msgSeq), params, cb5);
                }
            }

            @Override // kotlin.jvm.functions.Function0
            @Nullable
            public final Unit invoke() {
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                    return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this);
                }
                IKernelMsgService service = MsgService.this.getService();
                if (service == null) {
                    return null;
                }
                service.queryEmoticonMsgs(this.$msgId, this.$msgTime, this.$msgSeq, this.$params, this.$cb);
                return Unit.INSTANCE;
            }
        });
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void queryFirstRoamMsg(@NotNull final Contact peer, final long time, @NotNull IQueryFirstRoamMsgCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 98)) {
            iPatchRedirector.redirect((short) 98, this, peer, Long.valueOf(time), cb5);
            return;
        }
        Intrinsics.checkNotNullParameter(peer, "peer");
        Intrinsics.checkNotNullParameter(cb5, "cb");
        j5("queryFirstRoamMsg", cb5, new Function1<IQueryFirstRoamMsgCallback, Unit>(peer, time) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$queryFirstRoamMsg$1
            static IPatchRedirector $redirector_;
            final /* synthetic */ Contact $peer;
            final /* synthetic */ long $time;

            /* JADX INFO: Access modifiers changed from: package-private */
            /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
            {
                super(1);
                this.$peer = peer;
                this.$time = time;
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                    iPatchRedirector2.redirect((short) 1, this, MsgService.this, peer, Long.valueOf(time));
                }
            }

            @Override // kotlin.jvm.functions.Function1
            @Nullable
            public final Unit invoke(@Nullable IQueryFirstRoamMsgCallback iQueryFirstRoamMsgCallback) {
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                    return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iQueryFirstRoamMsgCallback);
                }
                IKernelMsgService service = MsgService.this.getService();
                if (service == null) {
                    return null;
                }
                service.queryFirstRoamMsg(this.$peer, this.$time, iQueryFirstRoamMsgCallback);
                return Unit.INSTANCE;
            }
        });
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void queryMsgsAndAbstractsWithFilter(long msgId, long msgTime, long msgSeq, @NotNull QueryMsgsParams params, @NotNull IQueryMsgsAndAbstractsWithFilterCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 165)) {
            iPatchRedirector.redirect((short) 165, this, Long.valueOf(msgId), Long.valueOf(msgTime), Long.valueOf(msgSeq), params, cb5);
            return;
        }
        Intrinsics.checkNotNullParameter(params, "params");
        Intrinsics.checkNotNullParameter(cb5, "cb");
        IKernelMsgService service = getService();
        if (service != null) {
            service.queryMsgsAndAbstractsWithFilter(msgId, msgTime, msgSeq, params, cb5);
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void queryMsgsWithFilter(final long msgId, final long msgTime, @Nullable final QueryMsgsParams params, @Nullable final IMsgOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 137)) {
            iPatchRedirector.redirect((short) 137, this, Long.valueOf(msgId), Long.valueOf(msgTime), params, cb5);
        } else {
            check("queryMsgsWithFilter", new Function0<Unit>(msgId, msgTime, params, cb5) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$queryMsgsWithFilter$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ IMsgOperateCallback $cb;
                final /* synthetic */ long $msgId;
                final /* synthetic */ long $msgTime;
                final /* synthetic */ QueryMsgsParams $params;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(0);
                    this.$msgId = msgId;
                    this.$msgTime = msgTime;
                    this.$params = params;
                    this.$cb = cb5;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, this, MsgService.this, Long.valueOf(msgId), Long.valueOf(msgTime), params, cb5);
                    }
                }

                @Override // kotlin.jvm.functions.Function0
                @Nullable
                public final Unit invoke() {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.queryMsgsWithFilter(this.$msgId, this.$msgTime, this.$params, this.$cb);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void queryMsgsWithFilterEx(final long msgId, final long msgTime, final long msgSeq, @NotNull final QueryMsgsParams params, @NotNull final IMsgOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 139)) {
            iPatchRedirector.redirect((short) 139, this, Long.valueOf(msgId), Long.valueOf(msgTime), Long.valueOf(msgSeq), params, cb5);
            return;
        }
        Intrinsics.checkNotNullParameter(params, "params");
        Intrinsics.checkNotNullParameter(cb5, "cb");
        check("queryMsgsWithFilterEx", new Function0<Unit>(msgId, msgTime, msgSeq, params, cb5) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$queryMsgsWithFilterEx$1
            static IPatchRedirector $redirector_;
            final /* synthetic */ IMsgOperateCallback $cb;
            final /* synthetic */ long $msgId;
            final /* synthetic */ long $msgSeq;
            final /* synthetic */ long $msgTime;
            final /* synthetic */ QueryMsgsParams $params;

            /* JADX INFO: Access modifiers changed from: package-private */
            /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
            {
                super(0);
                this.$msgId = msgId;
                this.$msgTime = msgTime;
                this.$msgSeq = msgSeq;
                this.$params = params;
                this.$cb = cb5;
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                    iPatchRedirector2.redirect((short) 1, this, MsgService.this, Long.valueOf(msgId), Long.valueOf(msgTime), Long.valueOf(msgSeq), params, cb5);
                }
            }

            @Override // kotlin.jvm.functions.Function0
            @Nullable
            public final Unit invoke() {
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                    return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this);
                }
                IKernelMsgService service = MsgService.this.getService();
                if (service == null) {
                    return null;
                }
                service.queryMsgsWithFilterEx(this.$msgId, this.$msgTime, this.$msgSeq, this.$params, this.$cb);
                return Unit.INSTANCE;
            }
        });
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void queryPicOrVideoMsgs(final long msgId, final long msgTime, final long msgSeq, @NotNull final QueryMsgsParams params, @NotNull final IMsgOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 143)) {
            iPatchRedirector.redirect((short) 143, this, Long.valueOf(msgId), Long.valueOf(msgTime), Long.valueOf(msgSeq), params, cb5);
            return;
        }
        Intrinsics.checkNotNullParameter(params, "params");
        Intrinsics.checkNotNullParameter(cb5, "cb");
        check("queryPicOrVideoMsgs", new Function0<Unit>(msgId, msgTime, msgSeq, params, cb5) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$queryPicOrVideoMsgs$1
            static IPatchRedirector $redirector_;
            final /* synthetic */ IMsgOperateCallback $cb;
            final /* synthetic */ long $msgId;
            final /* synthetic */ long $msgSeq;
            final /* synthetic */ long $msgTime;
            final /* synthetic */ QueryMsgsParams $params;

            /* JADX INFO: Access modifiers changed from: package-private */
            /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
            {
                super(0);
                this.$msgId = msgId;
                this.$msgTime = msgTime;
                this.$msgSeq = msgSeq;
                this.$params = params;
                this.$cb = cb5;
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                    iPatchRedirector2.redirect((short) 1, this, MsgService.this, Long.valueOf(msgId), Long.valueOf(msgTime), Long.valueOf(msgSeq), params, cb5);
                }
            }

            @Override // kotlin.jvm.functions.Function0
            @Nullable
            public final Unit invoke() {
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                    return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this);
                }
                IKernelMsgService service = MsgService.this.getService();
                if (service == null) {
                    return null;
                }
                service.queryPicOrVideoMsgs(this.$msgId, this.$msgTime, this.$msgSeq, this.$params, this.$cb);
                return Unit.INSTANCE;
            }
        });
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void queryRoamCalendar(@Nullable final Contact peer, final long curDate, @Nullable final IQueryCalendarCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 154)) {
            iPatchRedirector.redirect((short) 154, this, peer, Long.valueOf(curDate), cb5);
        } else {
            check("queryRoamCalendar", new Function0<Unit>(peer, curDate, cb5) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$queryRoamCalendar$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ IQueryCalendarCallback $cb;
                final /* synthetic */ long $curDate;
                final /* synthetic */ Contact $peer;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(0);
                    this.$peer = peer;
                    this.$curDate = curDate;
                    this.$cb = cb5;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, this, MsgService.this, peer, Long.valueOf(curDate), cb5);
                    }
                }

                @Override // kotlin.jvm.functions.Function0
                @Nullable
                public final Unit invoke() {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.queryRoamCalendar(this.$peer, this.$curDate, this.$cb);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void queryShortVideoMsgs(final long msgId, final long msgTime, final long msgSeq, @NotNull final QueryMsgsParams params, @NotNull final IMsgOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 146)) {
            iPatchRedirector.redirect((short) 146, this, Long.valueOf(msgId), Long.valueOf(msgTime), Long.valueOf(msgSeq), params, cb5);
            return;
        }
        Intrinsics.checkNotNullParameter(params, "params");
        Intrinsics.checkNotNullParameter(cb5, "cb");
        check("queryShortVideoMsgs", new Function0<Unit>(msgId, msgTime, msgSeq, params, cb5) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$queryShortVideoMsgs$1
            static IPatchRedirector $redirector_;
            final /* synthetic */ IMsgOperateCallback $cb;
            final /* synthetic */ long $msgId;
            final /* synthetic */ long $msgSeq;
            final /* synthetic */ long $msgTime;
            final /* synthetic */ QueryMsgsParams $params;

            /* JADX INFO: Access modifiers changed from: package-private */
            /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
            {
                super(0);
                this.$msgId = msgId;
                this.$msgTime = msgTime;
                this.$msgSeq = msgSeq;
                this.$params = params;
                this.$cb = cb5;
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                    iPatchRedirector2.redirect((short) 1, this, MsgService.this, Long.valueOf(msgId), Long.valueOf(msgTime), Long.valueOf(msgSeq), params, cb5);
                }
            }

            @Override // kotlin.jvm.functions.Function0
            @Nullable
            public final Unit invoke() {
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                    return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this);
                }
                IKernelMsgService service = MsgService.this.getService();
                if (service == null) {
                    return null;
                }
                service.queryShortVideoMsgs(this.$msgId, this.$msgTime, this.$msgSeq, this.$params, this.$cb);
                return Unit.INSTANCE;
            }
        });
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void queryTroopEmoticonMsgs(final long msgId, final long msgTime, final long msgSeq, @NotNull final QueryMsgsParams params, @NotNull final IMsgOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 145)) {
            iPatchRedirector.redirect((short) 145, this, Long.valueOf(msgId), Long.valueOf(msgTime), Long.valueOf(msgSeq), params, cb5);
            return;
        }
        Intrinsics.checkNotNullParameter(params, "params");
        Intrinsics.checkNotNullParameter(cb5, "cb");
        check("queryTroopEmoticonMsgs", new Function0<Unit>(msgId, msgTime, msgSeq, params, cb5) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$queryTroopEmoticonMsgs$1
            static IPatchRedirector $redirector_;
            final /* synthetic */ IMsgOperateCallback $cb;
            final /* synthetic */ long $msgId;
            final /* synthetic */ long $msgSeq;
            final /* synthetic */ long $msgTime;
            final /* synthetic */ QueryMsgsParams $params;

            /* JADX INFO: Access modifiers changed from: package-private */
            /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
            {
                super(0);
                this.$msgId = msgId;
                this.$msgTime = msgTime;
                this.$msgSeq = msgSeq;
                this.$params = params;
                this.$cb = cb5;
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                    iPatchRedirector2.redirect((short) 1, this, MsgService.this, Long.valueOf(msgId), Long.valueOf(msgTime), Long.valueOf(msgSeq), params, cb5);
                }
            }

            @Override // kotlin.jvm.functions.Function0
            @Nullable
            public final Unit invoke() {
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                    return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this);
                }
                IKernelMsgService service = MsgService.this.getService();
                if (service == null) {
                    return null;
                }
                service.queryTroopEmoticonMsgs(this.$msgId, this.$msgTime, this.$msgSeq, this.$params, this.$cb);
                return Unit.INSTANCE;
            }
        });
    }

    /* JADX WARN: Type inference failed for: r1v0, types: [T, java.util.ArrayList] */
    @Override // com.tencent.qqnt.kernel.api.w
    public void recallMsg(@NotNull final Contact peer, long msgId, @Nullable IOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 65)) {
            iPatchRedirector.redirect((short) 65, this, peer, Long.valueOf(msgId), cb5);
            return;
        }
        Intrinsics.checkNotNullParameter(peer, "peer");
        final Ref.ObjectRef objectRef = new Ref.ObjectRef();
        ?? arrayList = new ArrayList();
        objectRef.element = arrayList;
        arrayList.add(Long.valueOf(msgId));
        check("recallMsg", cb5, new Function1<IOperateCallback, Unit>(peer, objectRef) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$recallMsg$1
            static IPatchRedirector $redirector_;
            final /* synthetic */ Ref.ObjectRef<ArrayList<Long>> $msgIds;
            final /* synthetic */ Contact $peer;

            /* JADX INFO: Access modifiers changed from: package-private */
            /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
            {
                super(1);
                this.$peer = peer;
                this.$msgIds = objectRef;
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                    iPatchRedirector2.redirect((short) 1, this, MsgService.this, peer, objectRef);
                }
            }

            @Override // kotlin.jvm.functions.Function1
            @Nullable
            public final Unit invoke(@Nullable IOperateCallback iOperateCallback) {
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                    return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iOperateCallback);
                }
                IKernelMsgService service = MsgService.this.getService();
                if (service == null) {
                    return null;
                }
                service.recallMsg(this.$peer, this.$msgIds.element, iOperateCallback);
                return Unit.INSTANCE;
            }
        });
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void reeditRecallMsg(@Nullable final Contact peer, final long msgId, @Nullable IOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 66)) {
            iPatchRedirector.redirect((short) 66, this, peer, Long.valueOf(msgId), cb5);
        } else {
            check("reeditRecallMsg", cb5, new Function1<IOperateCallback, Unit>(peer, msgId) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$reeditRecallMsg$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ long $msgId;
                final /* synthetic */ Contact $peer;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(1);
                    this.$peer = peer;
                    this.$msgId = msgId;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, this, MsgService.this, peer, Long.valueOf(msgId));
                    }
                }

                @Override // kotlin.jvm.functions.Function1
                @Nullable
                public final Unit invoke(@Nullable IOperateCallback iOperateCallback) {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iOperateCallback);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.reeditRecallMsg(this.$peer, this.$msgId, iOperateCallback);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void refuseReceiveOnlineFileMsg(@NotNull Contact peer, long msgId, @NotNull IOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 167)) {
            iPatchRedirector.redirect((short) 167, this, peer, Long.valueOf(msgId), cb5);
            return;
        }
        Intrinsics.checkNotNullParameter(peer, "peer");
        Intrinsics.checkNotNullParameter(cb5, "cb");
        IKernelMsgService service = getService();
        if (service != null) {
            service.refuseReceiveOnlineFileMsg(peer, msgId, cb5);
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void regenerateMsg(@NotNull final Contact peer, final long msgId, @Nullable IOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 64)) {
            iPatchRedirector.redirect((short) 64, this, peer, Long.valueOf(msgId), cb5);
        } else {
            Intrinsics.checkNotNullParameter(peer, "peer");
            check("regenerateMsg", cb5, new Function1<IOperateCallback, Unit>(peer, msgId) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$regenerateMsg$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ long $msgId;
                final /* synthetic */ Contact $peer;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(1);
                    this.$peer = peer;
                    this.$msgId = msgId;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, this, MsgService.this, peer, Long.valueOf(msgId));
                    }
                }

                @Override // kotlin.jvm.functions.Function1
                @Nullable
                public final Unit invoke(@Nullable IOperateCallback iOperateCallback) {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iOperateCallback);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.regenerateMsg(this.$peer, this.$msgId, iOperateCallback);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void registerSysMsgNotification(final int businessType, final long msgType, @NotNull final ArrayList<Long> msgSubType, @Nullable IOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 119)) {
            iPatchRedirector.redirect((short) 119, this, Integer.valueOf(businessType), Long.valueOf(msgType), msgSubType, cb5);
        } else {
            Intrinsics.checkNotNullParameter(msgSubType, "msgSubType");
            check("registerSysMsgNotification", cb5, new Function1<IOperateCallback, Unit>(businessType, msgType, msgSubType) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$registerSysMsgNotification$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ int $businessType;
                final /* synthetic */ ArrayList<Long> $msgSubType;
                final /* synthetic */ long $msgType;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(1);
                    this.$businessType = businessType;
                    this.$msgType = msgType;
                    this.$msgSubType = msgSubType;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, this, MsgService.this, Integer.valueOf(businessType), Long.valueOf(msgType), msgSubType);
                    }
                }

                @Override // kotlin.jvm.functions.Function1
                @Nullable
                public final Unit invoke(@Nullable IOperateCallback iOperateCallback) {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iOperateCallback);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.registerSysMsgNotification(this.$businessType, this.$msgType, this.$msgSubType, iOperateCallback);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void removeMsgListener(@NotNull IKernelMsgListener listener) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 5)) {
            iPatchRedirector.redirect((short) 5, (Object) this, (Object) listener);
        } else {
            Intrinsics.checkNotNullParameter(listener, "listener");
            BaseService.removeListener$default(this, listener, false, new Function1<Long, Unit>() { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$removeMsgListener$1
                static IPatchRedirector $redirector_;

                /* JADX INFO: Access modifiers changed from: package-private */
                {
                    super(1);
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, (Object) this, (Object) MsgService.this);
                    }
                }

                @Override // kotlin.jvm.functions.Function1
                public /* bridge */ /* synthetic */ Unit invoke(Long l3) {
                    invoke(l3.longValue());
                    return Unit.INSTANCE;
                }

                public final void invoke(long j3) {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        iPatchRedirector2.redirect((short) 2, (Object) this, j3);
                        return;
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service != null) {
                        service.removeKernelMsgListener(j3);
                    }
                }
            }, 2, null);
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void renameAnonyChatNick(@Nullable final String groupId, @Nullable final IRenameAnonymousChatNickCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 157)) {
            iPatchRedirector.redirect((short) 157, (Object) this, (Object) groupId, (Object) cb5);
        } else {
            check("renameAnonyChatNick", new Function0<Unit>(groupId, cb5) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$renameAnonyChatNick$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ IRenameAnonymousChatNickCallback $cb;
                final /* synthetic */ String $groupId;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(0);
                    this.$groupId = groupId;
                    this.$cb = cb5;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, this, MsgService.this, groupId, cb5);
                    }
                }

                @Override // kotlin.jvm.functions.Function0
                @Nullable
                public final Unit invoke() {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.renameAnonyChatNick(this.$groupId, this.$cb);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void replyMsgWithSourceMsgInfo(@NotNull final SourceMsgInfoForReplyMsg sourceMsgInfo, @NotNull final ArrayList<MsgElement> replyElements, @NotNull final HashMap<Integer, MsgAttributeInfo> msgAttributeInfos, @NotNull final IReplyMsgWithSourceMsgInfoCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 187)) {
            iPatchRedirector.redirect((short) 187, this, sourceMsgInfo, replyElements, msgAttributeInfos, cb5);
            return;
        }
        Intrinsics.checkNotNullParameter(sourceMsgInfo, "sourceMsgInfo");
        Intrinsics.checkNotNullParameter(replyElements, "replyElements");
        Intrinsics.checkNotNullParameter(msgAttributeInfos, "msgAttributeInfos");
        Intrinsics.checkNotNullParameter(cb5, "cb");
        check("replyMsgWithSourceMsgInfo", new Function0<Unit>(replyElements, msgAttributeInfos, this, cb5) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$replyMsgWithSourceMsgInfo$1
            static IPatchRedirector $redirector_;
            final /* synthetic */ IReplyMsgWithSourceMsgInfoCallback $cb;
            final /* synthetic */ HashMap<Integer, MsgAttributeInfo> $msgAttributeInfos;
            final /* synthetic */ ArrayList<MsgElement> $replyElements;
            final /* synthetic */ MsgService this$0;

            /* JADX INFO: Access modifiers changed from: package-private */
            /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
            {
                super(0);
                this.$replyElements = replyElements;
                this.$msgAttributeInfos = msgAttributeInfos;
                this.this$0 = this;
                this.$cb = cb5;
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                    iPatchRedirector2.redirect((short) 1, this, SourceMsgInfoForReplyMsg.this, replyElements, msgAttributeInfos, this, cb5);
                }
            }

            @Override // kotlin.jvm.functions.Function0
            @Nullable
            public final Unit invoke() {
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                    return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this);
                }
                SourceMsgInfoForReplyMsg sourceMsgInfoForReplyMsg = SourceMsgInfoForReplyMsg.this;
                Contact contact = new Contact(sourceMsgInfoForReplyMsg.chatType, sourceMsgInfoForReplyMsg.peerUid, "");
                if (!this.$replyElements.isEmpty()) {
                    com.tencent.qqnt.kernel.aio.msg.a.f357212a.a(this.$msgAttributeInfos, contact, this.$replyElements.get(0).elementType);
                } else {
                    com.tencent.qqnt.kernel.aio.msg.a.f357212a.a(this.$msgAttributeInfos, contact, 1);
                }
                IKernelMsgService service = this.this$0.getService();
                if (service == null) {
                    return null;
                }
                service.replyMsgWithSourceMsgInfo(SourceMsgInfoForReplyMsg.this, this.$replyElements, this.$msgAttributeInfos, this.$cb);
                return Unit.INSTANCE;
            }
        });
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void reqToOfflineSendMsg(@NotNull Contact peer, long msgId, @NotNull IOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 166)) {
            iPatchRedirector.redirect((short) 166, this, peer, Long.valueOf(msgId), cb5);
            return;
        }
        Intrinsics.checkNotNullParameter(peer, "peer");
        Intrinsics.checkNotNullParameter(cb5, "cb");
        IKernelMsgService service = getService();
        if (service != null) {
            service.reqToOfflineSendMsg(peer, msgId, cb5);
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void resendMsg(@NotNull final Contact peer, final long msgId, @Nullable IOperateCallback result) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 62)) {
            iPatchRedirector.redirect((short) 62, this, peer, Long.valueOf(msgId), result);
        } else {
            Intrinsics.checkNotNullParameter(peer, "peer");
            check("resendMsg", result, new Function1<IOperateCallback, Unit>(peer, msgId) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$resendMsg$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ long $msgId;
                final /* synthetic */ Contact $peer;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(1);
                    this.$peer = peer;
                    this.$msgId = msgId;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, this, MsgService.this, peer, Long.valueOf(msgId));
                    }
                }

                @Override // kotlin.jvm.functions.Function1
                @Nullable
                public final Unit invoke(@Nullable IOperateCallback iOperateCallback) {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iOperateCallback);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.resendMsg(this.$peer, this.$msgId, iOperateCallback);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void sendMsg(final long msgId, @NotNull final Contact peer, @NotNull final ArrayList<MsgElement> msgElements, @NotNull final HashMap<Integer, MsgAttributeInfo> msgAttrs, @Nullable final IOperateCallback result) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 30)) {
            iPatchRedirector.redirect((short) 30, this, Long.valueOf(msgId), peer, msgElements, msgAttrs, result);
            return;
        }
        Intrinsics.checkNotNullParameter(peer, "peer");
        Intrinsics.checkNotNullParameter(msgElements, "msgElements");
        Intrinsics.checkNotNullParameter(msgAttrs, "msgAttrs");
        final AIOSendMsgResultData aIOSendMsgResultData = new AIOSendMsgResultData(peer, AIOSendMsgResultData.SendType.Send, AIOSendMsgResultData.SendPhase.Add, msgElements);
        check(SmsPlugin.API_SEND_SMS, new IOperateCallback() { // from class: com.tencent.qqnt.kernel.api.impl.js
            @Override // com.tencent.qqnt.kernel.nativeinterface.IOperateCallback
            public final void onResult(int i3, String str) {
                MsgService.q6(AIOSendMsgResultData.this, result, i3, str);
            }
        }, new Function1<IOperateCallback, Unit>(peer, msgElements, msgAttrs, msgId) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$sendMsg$1
            static IPatchRedirector $redirector_;
            final /* synthetic */ HashMap<Integer, MsgAttributeInfo> $msgAttrs;
            final /* synthetic */ ArrayList<MsgElement> $msgElements;
            final /* synthetic */ long $msgId;
            final /* synthetic */ Contact $peer;

            /* JADX INFO: Access modifiers changed from: package-private */
            /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
            {
                super(1);
                this.$peer = peer;
                this.$msgElements = msgElements;
                this.$msgAttrs = msgAttrs;
                this.$msgId = msgId;
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                    iPatchRedirector2.redirect((short) 1, this, MsgService.this, peer, msgElements, msgAttrs, Long.valueOf(msgId));
                }
            }

            @Override // kotlin.jvm.functions.Function1
            @Nullable
            public final Unit invoke(@Nullable IOperateCallback iOperateCallback) {
                IKernelService iKernelService;
                com.tencent.qqnt.kernel.api.ag uixConvertService;
                MsgAttributeInfo a16;
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                    return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iOperateCallback);
                }
                AppRuntime c16 = MsgService.this.getContent().c();
                if (c16 != null && (iKernelService = (IKernelService) c16.getRuntimeService(IKernelService.class, "")) != null && (uixConvertService = iKernelService.getUixConvertService()) != null) {
                    String str = this.$peer.peerUid;
                    Intrinsics.checkNotNullExpressionValue(str, "peer.peerUid");
                    Long z06 = uixConvertService.z0(str);
                    if (z06 != null) {
                        HashMap<Integer, MsgAttributeInfo> hashMap = this.$msgAttrs;
                        z06.longValue();
                        a16 = com.tencent.qqnt.kernel.util.a.f359256a.a(7, (i16 & 2) != 0 ? 0L : 0L, (i16 & 4) != 0 ? null : null, (i16 & 8) != 0 ? null : null, (i16 & 16) != 0 ? null : null, (i16 & 32) != 0 ? null : null, (i16 & 64) != 0 ? null : null, (i16 & 128) != 0 ? null : null, (i16 & 256) != 0 ? null : null, (i16 & 512) != 0 ? null : null, (i16 & 1024) != 0 ? null : null, (i16 & 2048) != 0 ? null : null, (i16 & 4096) != 0 ? null : null, (i16 & 8192) != 0 ? null : null, (i16 & 16384) != 0 ? null : null, (i16 & 32768) != 0 ? null : null, (i16 & 65536) != 0 ? null : null, (i16 & 131072) != 0 ? null : null, (i16 & 262144) != 0 ? null : null);
                        hashMap.put(7, a16);
                    }
                }
                if (!this.$msgElements.isEmpty()) {
                    com.tencent.qqnt.kernel.aio.msg.a.f357212a.a(this.$msgAttrs, this.$peer, this.$msgElements.get(0).elementType);
                } else {
                    com.tencent.qqnt.kernel.aio.msg.a.f357212a.a(this.$msgAttrs, this.$peer, 1);
                }
                com.tencent.qqnt.kernel.aio.msg.b.f357214a.b(this.$msgId, this.$peer, this.$msgElements, this.$msgAttrs);
                IKernelMsgService service = MsgService.this.getService();
                if (service == null) {
                    return null;
                }
                service.sendMsg(this.$msgId, this.$peer, this.$msgElements, this.$msgAttrs, iOperateCallback);
                return Unit.INSTANCE;
            }
        });
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void sendShowInputStatusReq(final int chatType, final int eventType, @NotNull final String toUid, @Nullable IOperateCallback result) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 155)) {
            iPatchRedirector.redirect((short) 155, this, Integer.valueOf(chatType), Integer.valueOf(eventType), toUid, result);
        } else {
            Intrinsics.checkNotNullParameter(toUid, "toUid");
            check("sendShowInputStatusReq", result, new Function1<IOperateCallback, Unit>(chatType, eventType, toUid) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$sendShowInputStatusReq$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ int $chatType;
                final /* synthetic */ int $eventType;
                final /* synthetic */ String $toUid;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(1);
                    this.$chatType = chatType;
                    this.$eventType = eventType;
                    this.$toUid = toUid;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, this, MsgService.this, Integer.valueOf(chatType), Integer.valueOf(eventType), toUid);
                    }
                }

                @Override // kotlin.jvm.functions.Function1
                @Nullable
                public final Unit invoke(@Nullable IOperateCallback iOperateCallback) {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iOperateCallback);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.sendShowInputStatusReq(this.$chatType, this.$eventType, this.$toUid, iOperateCallback);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void setAllC2CAndGroupMsgRead(@Nullable IOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 84)) {
            iPatchRedirector.redirect((short) 84, (Object) this, (Object) cb5);
        } else {
            check("setAllC2CAndGroupMsgRead", cb5, new Function1<IOperateCallback, Unit>() { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$setAllC2CAndGroupMsgRead$1
                static IPatchRedirector $redirector_;

                /* JADX INFO: Access modifiers changed from: package-private */
                {
                    super(1);
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, (Object) this, (Object) MsgService.this);
                    }
                }

                @Override // kotlin.jvm.functions.Function1
                @Nullable
                public final Unit invoke(@Nullable IOperateCallback iOperateCallback) {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iOperateCallback);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.setAllC2CAndGroupMsgRead(iOperateCallback);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void setContactLocalTop(@Nullable final Contact peer, final boolean isTop, @Nullable IOperateCallback result) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 26)) {
            iPatchRedirector.redirect((short) 26, this, peer, Boolean.valueOf(isTop), result);
        } else {
            check("setContactLocalTop", result, new Function1<IOperateCallback, Unit>(peer, isTop) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$setContactLocalTop$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ boolean $isTop;
                final /* synthetic */ Contact $peer;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(1);
                    this.$peer = peer;
                    this.$isTop = isTop;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, this, MsgService.this, peer, Boolean.valueOf(isTop));
                    }
                }

                @Override // kotlin.jvm.functions.Function1
                @Nullable
                public final Unit invoke(@Nullable IOperateCallback iOperateCallback) {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iOperateCallback);
                    }
                    MsgService.this.i6(this.$peer);
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.setContactLocalTop(this.$peer, this.$isTop, iOperateCallback);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void setCurHiddenSession(@Nullable final RecentHiddenSesionInfo info, @Nullable IOperateCallback callback) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 172)) {
            iPatchRedirector.redirect((short) 172, (Object) this, (Object) info, (Object) callback);
        } else {
            check("setCurHiddenSession", callback, new Function1<IOperateCallback, Unit>(info) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$setCurHiddenSession$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ RecentHiddenSesionInfo $info;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(1);
                    this.$info = info;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, (Object) this, (Object) MsgService.this, (Object) info);
                    }
                }

                @Override // kotlin.jvm.functions.Function1
                @Nullable
                public final Unit invoke(@Nullable IOperateCallback iOperateCallback) {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iOperateCallback);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.setCurHiddenSession(this.$info, iOperateCallback);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void setCurOnScreenMsgForMsgEvent(@NotNull final Contact peer, @NotNull final HashMap<Long, byte[]> msgEventInfo) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 105)) {
            iPatchRedirector.redirect((short) 105, (Object) this, (Object) peer, (Object) msgEventInfo);
            return;
        }
        Intrinsics.checkNotNullParameter(peer, "peer");
        Intrinsics.checkNotNullParameter(msgEventInfo, "msgEventInfo");
        check("setCurOnScreenMsgForMsgEvent", new Function0<Unit>(peer, msgEventInfo) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$setCurOnScreenMsgForMsgEvent$1
            static IPatchRedirector $redirector_;
            final /* synthetic */ HashMap<Long, byte[]> $msgEventInfo;
            final /* synthetic */ Contact $peer;

            /* JADX INFO: Access modifiers changed from: package-private */
            /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
            {
                super(0);
                this.$peer = peer;
                this.$msgEventInfo = msgEventInfo;
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                    iPatchRedirector2.redirect((short) 1, this, MsgService.this, peer, msgEventInfo);
                }
            }

            @Override // kotlin.jvm.functions.Function0
            @Nullable
            public final Unit invoke() {
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                    return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this);
                }
                IKernelMsgService service = MsgService.this.getService();
                if (service == null) {
                    return null;
                }
                service.setCurOnScreenMsgForMsgEvent(this.$peer, this.$msgEventInfo);
                return Unit.INSTANCE;
            }
        });
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void setDraft(@Nullable final Contact peer, @NotNull final ArrayList<MsgElement> msgElements, @Nullable IOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 109)) {
            iPatchRedirector.redirect((short) 109, this, peer, msgElements, cb5);
        } else {
            Intrinsics.checkNotNullParameter(msgElements, "msgElements");
            check("setDraft", cb5, new Function1<IOperateCallback, Unit>(peer, msgElements) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$setDraft$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ ArrayList<MsgElement> $msgElements;
                final /* synthetic */ Contact $peer;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(1);
                    this.$peer = peer;
                    this.$msgElements = msgElements;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, this, MsgService.this, peer, msgElements);
                    }
                }

                @Override // kotlin.jvm.functions.Function1
                @Nullable
                public final Unit invoke(@Nullable IOperateCallback iOperateCallback) {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iOperateCallback);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.setDraft(this.$peer, this.$msgElements, iOperateCallback);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void setFocusOnBase(@NotNull final Contact peer) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 73)) {
            iPatchRedirector.redirect((short) 73, (Object) this, (Object) peer);
        } else {
            Intrinsics.checkNotNullParameter(peer, "peer");
            check("setFocusOnBase", new Function0<Unit>(peer) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$setFocusOnBase$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ Contact $peer;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(0);
                    this.$peer = peer;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, (Object) this, (Object) MsgService.this, (Object) peer);
                    }
                }

                @Override // kotlin.jvm.functions.Function0
                @Nullable
                public final Unit invoke() {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.setFocusOnBase(this.$peer);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void setLocalMsgRead(@NotNull final Contact peer, @Nullable final IOperateCallback listener) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 87)) {
            iPatchRedirector.redirect((short) 87, (Object) this, (Object) peer, (Object) listener);
        } else {
            Intrinsics.checkNotNullParameter(peer, "peer");
            check("setLocalMsgRead", new Function0<Unit>(peer, listener) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$setLocalMsgRead$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ IOperateCallback $listener;
                final /* synthetic */ Contact $peer;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(0);
                    this.$peer = peer;
                    this.$listener = listener;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, this, MsgService.this, peer, listener);
                    }
                }

                @Override // kotlin.jvm.functions.Function0
                @Nullable
                public final Unit invoke() {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.setLocalMsgRead(this.$peer, this.$listener);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void setMarkUnreadFlag(@Nullable final Contact peer, final boolean isMarkUnread) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 88)) {
            iPatchRedirector.redirect((short) 88, this, peer, Boolean.valueOf(isMarkUnread));
        } else {
            check("setMarkUnreadFlag", new Function0<Unit>(peer, isMarkUnread) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$setMarkUnreadFlag$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ boolean $isMarkUnread;
                final /* synthetic */ Contact $peer;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(0);
                    this.$peer = peer;
                    this.$isMarkUnread = isMarkUnread;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, this, MsgService.this, peer, Boolean.valueOf(isMarkUnread));
                    }
                }

                @Override // kotlin.jvm.functions.Function0
                @Nullable
                public final Unit invoke() {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.setMarkUnreadFlag(this.$peer, this.$isMarkUnread);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void setMiscDataVer2(@Nullable final MiscData value, @Nullable IOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 185)) {
            iPatchRedirector.redirect((short) 185, (Object) this, (Object) value, (Object) cb5);
        } else {
            check("setMiscDataVer2", cb5, new Function1<IOperateCallback, Unit>(value) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$setMiscDataVer2$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ MiscData $value;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(1);
                    this.$value = value;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, (Object) this, (Object) MsgService.this, (Object) value);
                    }
                }

                @Override // kotlin.jvm.functions.Function1
                @Nullable
                public final Unit invoke(@Nullable IOperateCallback iOperateCallback) {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iOperateCallback);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.setMiscDataVer2(this.$value, iOperateCallback);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void setMsgEmojiLikes(@Nullable final Contact peer, final long msgSeq, @Nullable final String emojiId, final long emojiType, final boolean setEmoji, @Nullable ISetMsgEmojiLikesCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 102)) {
            iPatchRedirector.redirect((short) 102, this, peer, Long.valueOf(msgSeq), emojiId, Long.valueOf(emojiType), Boolean.valueOf(setEmoji), cb5);
        } else {
            k5("setMsgEmojiLikes", cb5, new Function1<ISetMsgEmojiLikesCallback, Unit>(peer, msgSeq, emojiId, emojiType, setEmoji) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$setMsgEmojiLikes$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ String $emojiId;
                final /* synthetic */ long $emojiType;
                final /* synthetic */ long $msgSeq;
                final /* synthetic */ Contact $peer;
                final /* synthetic */ boolean $setEmoji;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(1);
                    this.$peer = peer;
                    this.$msgSeq = msgSeq;
                    this.$emojiId = emojiId;
                    this.$emojiType = emojiType;
                    this.$setEmoji = setEmoji;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, this, MsgService.this, peer, Long.valueOf(msgSeq), emojiId, Long.valueOf(emojiType), Boolean.valueOf(setEmoji));
                    }
                }

                @Override // kotlin.jvm.functions.Function1
                @Nullable
                public final Unit invoke(@Nullable ISetMsgEmojiLikesCallback iSetMsgEmojiLikesCallback) {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iSetMsgEmojiLikesCallback);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.setMsgEmojiLikes(this.$peer, this.$msgSeq, this.$emojiId, this.$emojiType, this.$setEmoji, iSetMsgEmojiLikesCallback);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void setMsgEmojiLikesForRole(@Nullable final Contact peer, final long msgSeq, @Nullable final String emojiId, final long emojiType, final long taskId, final long taskType, final boolean setEmoji, final boolean isGuest, @NotNull final AttaReportData attaReportData, @Nullable ISetMsgEmojiLikesForRoleCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 140)) {
            iPatchRedirector.redirect((short) 140, this, peer, Long.valueOf(msgSeq), emojiId, Long.valueOf(emojiType), Long.valueOf(taskId), Long.valueOf(taskType), Boolean.valueOf(setEmoji), Boolean.valueOf(isGuest), attaReportData, cb5);
        } else {
            Intrinsics.checkNotNullParameter(attaReportData, "attaReportData");
            l5("setMsgEmojiLikesForRole", cb5, new Function1<ISetMsgEmojiLikesForRoleCallback, Unit>(peer, msgSeq, emojiId, emojiType, taskId, taskType, setEmoji, isGuest, attaReportData) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$setMsgEmojiLikesForRole$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ AttaReportData $attaReportData;
                final /* synthetic */ String $emojiId;
                final /* synthetic */ long $emojiType;
                final /* synthetic */ boolean $isGuest;
                final /* synthetic */ long $msgSeq;
                final /* synthetic */ Contact $peer;
                final /* synthetic */ boolean $setEmoji;
                final /* synthetic */ long $taskId;
                final /* synthetic */ long $taskType;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(1);
                    this.$peer = peer;
                    this.$msgSeq = msgSeq;
                    this.$emojiId = emojiId;
                    this.$emojiType = emojiType;
                    this.$taskId = taskId;
                    this.$taskType = taskType;
                    this.$setEmoji = setEmoji;
                    this.$isGuest = isGuest;
                    this.$attaReportData = attaReportData;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, this, MsgService.this, peer, Long.valueOf(msgSeq), emojiId, Long.valueOf(emojiType), Long.valueOf(taskId), Long.valueOf(taskType), Boolean.valueOf(setEmoji), Boolean.valueOf(isGuest), attaReportData);
                    }
                }

                @Override // kotlin.jvm.functions.Function1
                @Nullable
                public final Unit invoke(@Nullable ISetMsgEmojiLikesForRoleCallback iSetMsgEmojiLikesForRoleCallback) {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iSetMsgEmojiLikesForRoleCallback);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.setMsgEmojiLikesForRole(this.$peer, this.$msgSeq, this.$emojiId, this.$emojiType, this.$taskId, this.$taskType, this.$setEmoji, this.$isGuest, this.$attaReportData, iSetMsgEmojiLikesForRoleCallback);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void setMsgRead(@NotNull final Contact peer, @Nullable IOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 83)) {
            iPatchRedirector.redirect((short) 83, (Object) this, (Object) peer, (Object) cb5);
        } else {
            Intrinsics.checkNotNullParameter(peer, "peer");
            check("setMsgRead", cb5, new Function1<IOperateCallback, Unit>(peer) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$setMsgRead$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ Contact $peer;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(1);
                    this.$peer = peer;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, (Object) this, (Object) MsgService.this, (Object) peer);
                    }
                }

                @Override // kotlin.jvm.functions.Function1
                @Nullable
                public final Unit invoke(@Nullable IOperateCallback iOperateCallback) {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iOperateCallback);
                    }
                    MsgService.this.i6(this.$peer);
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.setMsgRead(this.$peer, iOperateCallback);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void setMsgReadAndReport(@NotNull final Contact peer, @NotNull final MsgRecord lastMsg, @Nullable IOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 85)) {
            iPatchRedirector.redirect((short) 85, this, peer, lastMsg, cb5);
            return;
        }
        Intrinsics.checkNotNullParameter(peer, "peer");
        Intrinsics.checkNotNullParameter(lastMsg, "lastMsg");
        check("setMsgReadAndReport", cb5, new Function1<IOperateCallback, Unit>(peer, lastMsg) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$setMsgReadAndReport$1
            static IPatchRedirector $redirector_;
            final /* synthetic */ MsgRecord $lastMsg;
            final /* synthetic */ Contact $peer;

            /* JADX INFO: Access modifiers changed from: package-private */
            /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
            {
                super(1);
                this.$peer = peer;
                this.$lastMsg = lastMsg;
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                    iPatchRedirector2.redirect((short) 1, this, MsgService.this, peer, lastMsg);
                }
            }

            @Override // kotlin.jvm.functions.Function1
            @Nullable
            public final Unit invoke(@Nullable IOperateCallback iOperateCallback) {
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                    return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iOperateCallback);
                }
                IKernelMsgService service = MsgService.this.getService();
                if (service == null) {
                    return null;
                }
                service.setMsgReadAndReport(this.$peer, this.$lastMsg, iOperateCallback);
                return Unit.INSTANCE;
            }
        });
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void setMsgReadByChatType(final int chatType, @NotNull IOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 184)) {
            iPatchRedirector.redirect((short) 184, (Object) this, chatType, (Object) cb5);
        } else {
            Intrinsics.checkNotNullParameter(cb5, "cb");
            check("setMsgReadByChatType", cb5, new Function1<IOperateCallback, Unit>(chatType) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$setMsgReadByChatType$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ int $chatType;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(1);
                    this.$chatType = chatType;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, (Object) this, (Object) MsgService.this, chatType);
                    }
                }

                @Override // kotlin.jvm.functions.Function1
                @Nullable
                public final Unit invoke(@Nullable IOperateCallback iOperateCallback) {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iOperateCallback);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.setMsgReadByChatType(this.$chatType, iOperateCallback);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void setMsgRichInfoFlag(final boolean richFlag) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 75)) {
            iPatchRedirector.redirect((short) 75, (Object) this, richFlag);
        } else {
            check("setMsgRichInfoFlag", new Function0<Unit>(richFlag) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$setMsgRichInfoFlag$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ boolean $richFlag;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(0);
                    this.$richFlag = richFlag;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, this, MsgService.this, Boolean.valueOf(richFlag));
                    }
                }

                @Override // kotlin.jvm.functions.Function0
                @Nullable
                public final Unit invoke() {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.setMsgRichInfoFlag(this.$richFlag);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void setMsgSetting(@NotNull final MsgSetting msgSetting, @Nullable IOperateCallback result) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 28)) {
            iPatchRedirector.redirect((short) 28, (Object) this, (Object) msgSetting, (Object) result);
        } else {
            Intrinsics.checkNotNullParameter(msgSetting, "msgSetting");
            check("setMsgSetting", result, new Function1<IOperateCallback, Unit>(msgSetting) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$setMsgSetting$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ MsgSetting $msgSetting;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(1);
                    this.$msgSetting = msgSetting;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, (Object) this, (Object) MsgService.this, (Object) msgSetting);
                    }
                }

                @Override // kotlin.jvm.functions.Function1
                @Nullable
                public final Unit invoke(@Nullable IOperateCallback iOperateCallback) {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iOperateCallback);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.setMsgSetting(this.$msgSetting, iOperateCallback);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void setPowerStatus(final boolean isPowerOn) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 148)) {
            iPatchRedirector.redirect((short) 148, (Object) this, isPowerOn);
        } else {
            check("setPowerStatus", new Function0<Unit>(isPowerOn) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$setPowerStatus$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ boolean $isPowerOn;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(0);
                    this.$isPowerOn = isPowerOn;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, this, MsgService.this, Boolean.valueOf(isPowerOn));
                    }
                }

                @Override // kotlin.jvm.functions.Function0
                @Nullable
                public final Unit invoke() {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.setPowerStatus(this.$isPowerOn);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void setRecentHiddenSession(@NotNull final ArrayList<RecentHiddenSesionInfo> infos, @Nullable IOperateCallback callback) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 169)) {
            iPatchRedirector.redirect((short) 169, (Object) this, (Object) infos, (Object) callback);
        } else {
            Intrinsics.checkNotNullParameter(infos, "infos");
            check("setRecentHiddenSession", callback, new Function1<IOperateCallback, Unit>(infos) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$setRecentHiddenSession$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ ArrayList<RecentHiddenSesionInfo> $infos;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(1);
                    this.$infos = infos;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, (Object) this, (Object) MsgService.this, (Object) infos);
                    }
                }

                @Override // kotlin.jvm.functions.Function1
                @Nullable
                public final Unit invoke(@Nullable IOperateCallback iOperateCallback) {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iOperateCallback);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.setRecentHiddenSession(this.$infos, iOperateCallback);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void setReplyDraft(@NotNull final Contact peer, final long rootSeq, @NotNull final ArrayList<MsgElement> msgElements, @Nullable IOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 111)) {
            iPatchRedirector.redirect((short) 111, this, peer, Long.valueOf(rootSeq), msgElements, cb5);
            return;
        }
        Intrinsics.checkNotNullParameter(peer, "peer");
        Intrinsics.checkNotNullParameter(msgElements, "msgElements");
        check("setReplyDraft", cb5, new Function1<IOperateCallback, Unit>(peer, rootSeq, msgElements) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$setReplyDraft$1
            static IPatchRedirector $redirector_;
            final /* synthetic */ ArrayList<MsgElement> $msgElements;
            final /* synthetic */ Contact $peer;
            final /* synthetic */ long $rootSeq;

            /* JADX INFO: Access modifiers changed from: package-private */
            /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
            {
                super(1);
                this.$peer = peer;
                this.$rootSeq = rootSeq;
                this.$msgElements = msgElements;
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                    iPatchRedirector2.redirect((short) 1, this, MsgService.this, peer, Long.valueOf(rootSeq), msgElements);
                }
            }

            @Override // kotlin.jvm.functions.Function1
            @Nullable
            public final Unit invoke(@Nullable IOperateCallback iOperateCallback) {
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                    return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iOperateCallback);
                }
                IKernelMsgService service = MsgService.this.getService();
                if (service == null) {
                    return null;
                }
                service.setReplyDraft(this.$peer, this.$rootSeq, this.$msgElements, iOperateCallback);
                return Unit.INSTANCE;
            }
        });
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void setSpecificMsgReadAndReport(@NotNull final Contact peer, final long msgId, @Nullable IOperateCallback result) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 86)) {
            iPatchRedirector.redirect((short) 86, this, peer, Long.valueOf(msgId), result);
        } else {
            Intrinsics.checkNotNullParameter(peer, "peer");
            check("setSpecificMsgReadAndReport", result, new Function1<IOperateCallback, Unit>(peer, msgId) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$setSpecificMsgReadAndReport$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ long $msgId;
                final /* synthetic */ Contact $peer;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(1);
                    this.$peer = peer;
                    this.$msgId = msgId;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, this, MsgService.this, peer, Long.valueOf(msgId));
                    }
                }

                @Override // kotlin.jvm.functions.Function1
                @Nullable
                public final Unit invoke(@Nullable IOperateCallback iOperateCallback) {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iOperateCallback);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.setSpecificMsgReadAndReport(this.$peer, this.$msgId, iOperateCallback);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void setSubscribeFolderUsingSmallRedPoint(final boolean enable) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 181)) {
            iPatchRedirector.redirect((short) 181, (Object) this, enable);
        } else {
            check("setSubscribeFolderUsingSmallRedPoint", new Function0<Unit>(enable) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$setSubscribeFolderUsingSmallRedPoint$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ boolean $enable;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(0);
                    this.$enable = enable;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, this, MsgService.this, Boolean.valueOf(enable));
                    }
                }

                @Override // kotlin.jvm.functions.Function0
                @Nullable
                public final Unit invoke() {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.setSubscribeFolderUsingSmallRedPoint(this.$enable);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void setTokenForMqq(@NotNull final byte[] tokenInfo, @Nullable IOperateCallback result) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 25)) {
            iPatchRedirector.redirect((short) 25, (Object) this, (Object) tokenInfo, (Object) result);
        } else {
            Intrinsics.checkNotNullParameter(tokenInfo, "tokenInfo");
            check("setTokenForMqq", result, new Function1<IOperateCallback, Unit>(tokenInfo) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$setTokenForMqq$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ byte[] $tokenInfo;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(1);
                    this.$tokenInfo = tokenInfo;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, (Object) this, (Object) MsgService.this, (Object) tokenInfo);
                    }
                }

                @Override // kotlin.jvm.functions.Function1
                @Nullable
                public final Unit invoke(@Nullable IOperateCallback iOperateCallback) {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iOperateCallback);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.setTokenForMqq(this.$tokenInfo, iOperateCallback);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void startMsgSync() {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 39)) {
            iPatchRedirector.redirect((short) 39, (Object) this);
        } else {
            check("startMsgSync", new Function0<Unit>() { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$startMsgSync$1
                static IPatchRedirector $redirector_;

                /* JADX INFO: Access modifiers changed from: package-private */
                {
                    super(0);
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, (Object) this, (Object) MsgService.this);
                    }
                }

                @Override // kotlin.jvm.functions.Function0
                @Nullable
                public final Unit invoke() {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.startMsgSync();
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void stopGenerateMsg(@NotNull final Contact peer, final long msgId, @Nullable IOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 63)) {
            iPatchRedirector.redirect((short) 63, this, peer, Long.valueOf(msgId), cb5);
        } else {
            Intrinsics.checkNotNullParameter(peer, "peer");
            check("stopGenerateMsg", cb5, new Function1<IOperateCallback, Unit>(peer, msgId) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$stopGenerateMsg$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ long $msgId;
                final /* synthetic */ Contact $peer;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(1);
                    this.$peer = peer;
                    this.$msgId = msgId;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, this, MsgService.this, peer, Long.valueOf(msgId));
                    }
                }

                @Override // kotlin.jvm.functions.Function1
                @Nullable
                public final Unit invoke(@Nullable IOperateCallback iOperateCallback) {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iOperateCallback);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.stopGenerateMsg(this.$peer, this.$msgId, iOperateCallback);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void stopImportOldDbMsgAndroid() {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 150)) {
            iPatchRedirector.redirect((short) 150, (Object) this);
        } else {
            check("stopImportOldDbMsg", new Function0<Unit>() { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$stopImportOldDbMsgAndroid$1
                static IPatchRedirector $redirector_;

                /* JADX INFO: Access modifiers changed from: package-private */
                {
                    super(0);
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, (Object) this, (Object) MsgService.this);
                    }
                }

                @Override // kotlin.jvm.functions.Function0
                @Nullable
                public final Unit invoke() {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.stopImportOldDbMsgAndroid();
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void switchAnonymousChat(@Nullable final String groupId, final boolean isAnonymousChat, @Nullable final ISwitchAnonymousChatCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 156)) {
            iPatchRedirector.redirect((short) 156, this, groupId, Boolean.valueOf(isAnonymousChat), cb5);
        } else {
            check("switchAnonymousChat", new Function0<Unit>(groupId, isAnonymousChat, cb5) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$switchAnonymousChat$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ ISwitchAnonymousChatCallback $cb;
                final /* synthetic */ String $groupId;
                final /* synthetic */ boolean $isAnonymousChat;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(0);
                    this.$groupId = groupId;
                    this.$isAnonymousChat = isAnonymousChat;
                    this.$cb = cb5;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, this, MsgService.this, groupId, Boolean.valueOf(isAnonymousChat), cb5);
                    }
                }

                @Override // kotlin.jvm.functions.Function0
                @Nullable
                public final Unit invoke() {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.switchAnonymousChat(this.$groupId, this.$isAnonymousChat, this.$cb);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void switchBackGround(@NotNull final BackGroundInfo backInfo, @Nullable IOperateCallback result) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 24)) {
            iPatchRedirector.redirect((short) 24, (Object) this, (Object) backInfo, (Object) result);
        } else {
            Intrinsics.checkNotNullParameter(backInfo, "backInfo");
            check("switchBackGround", result, new Function1<IOperateCallback, Unit>(backInfo) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$switchBackGround$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ BackGroundInfo $backInfo;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(1);
                    this.$backInfo = backInfo;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, (Object) this, (Object) MsgService.this, (Object) backInfo);
                    }
                }

                @Override // kotlin.jvm.functions.Function1
                @Nullable
                public final Unit invoke(@Nullable IOperateCallback iOperateCallback) {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iOperateCallback);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.switchBackGround(this.$backInfo, iOperateCallback);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void switchForeGround(@Nullable IOperateCallback result) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 23)) {
            iPatchRedirector.redirect((short) 23, (Object) this, (Object) result);
        } else {
            check("switchForeGround", result, new Function1<IOperateCallback, Unit>() { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$switchForeGround$1
                static IPatchRedirector $redirector_;

                /* JADX INFO: Access modifiers changed from: package-private */
                {
                    super(1);
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, (Object) this, (Object) MsgService.this);
                    }
                }

                @Override // kotlin.jvm.functions.Function1
                @Nullable
                public final Unit invoke(@Nullable IOperateCallback iOperateCallback) {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iOperateCallback);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.switchForeGround(iOperateCallback);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void t0(@NotNull final ArrayList<MultiMsgInfo> msgInfos, @NotNull final Contact srcContact, @NotNull final Contact dstContacts, @Nullable final ArrayList<MsgElement> commentElements, @NotNull final IOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 36)) {
            iPatchRedirector.redirect((short) 36, this, msgInfos, srcContact, dstContacts, commentElements, cb5);
            return;
        }
        Intrinsics.checkNotNullParameter(msgInfos, "msgInfos");
        Intrinsics.checkNotNullParameter(srcContact, "srcContact");
        Intrinsics.checkNotNullParameter(dstContacts, "dstContacts");
        Intrinsics.checkNotNullParameter(cb5, "cb");
        check("multiForwardMsg", new Function0<Unit>(commentElements, this, msgInfos, srcContact, dstContacts, cb5) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$multiForwardMsg$1
            static IPatchRedirector $redirector_;
            final /* synthetic */ IOperateCallback $cb;
            final /* synthetic */ ArrayList<MsgElement> $commentElements;
            final /* synthetic */ Contact $dstContacts;
            final /* synthetic */ ArrayList<MultiMsgInfo> $msgInfos;
            final /* synthetic */ Contact $srcContact;
            final /* synthetic */ MsgService this$0;

            /* JADX INFO: Access modifiers changed from: package-private */
            /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
            {
                super(0);
                this.$commentElements = commentElements;
                this.this$0 = this;
                this.$msgInfos = msgInfos;
                this.$srcContact = srcContact;
                this.$dstContacts = dstContacts;
                this.$cb = cb5;
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                    iPatchRedirector2.redirect((short) 1, this, commentElements, this, msgInfos, srcContact, dstContacts, cb5);
                }
            }

            @Override // kotlin.jvm.functions.Function0
            @Nullable
            public final Unit invoke() {
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                    return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this);
                }
                ArrayList<MsgElement> arrayList = this.$commentElements;
                if (arrayList != null && !arrayList.isEmpty()) {
                    HashMap<Integer, MsgAttributeInfo> hashMap = new HashMap<>();
                    com.tencent.qqnt.kernel.aio.msg.a.f357212a.a(hashMap, this.$srcContact, this.$commentElements.get(0).elementType);
                    IKernelMsgService service = this.this$0.getService();
                    if (service == null) {
                        return null;
                    }
                    service.multiForwardMsgWithComment(this.$msgInfos, this.$srcContact, this.$dstContacts, this.$commentElements, hashMap, this.$cb);
                    return Unit.INSTANCE;
                }
                IKernelMsgService service2 = this.this$0.getService();
                if (service2 == null) {
                    return null;
                }
                service2.multiForwardMsg(this.$msgInfos, this.$srcContact, this.$dstContacts, this.$cb);
                return Unit.INSTANCE;
            }
        });
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void translatePtt2Text(final long msgId, @NotNull final Contact peer, @NotNull final MsgElement msgElement, @NotNull IOperateCallback result) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 11)) {
            iPatchRedirector.redirect((short) 11, this, Long.valueOf(msgId), peer, msgElement, result);
            return;
        }
        Intrinsics.checkNotNullParameter(peer, "peer");
        Intrinsics.checkNotNullParameter(msgElement, "msgElement");
        Intrinsics.checkNotNullParameter(result, "result");
        check("translatePtt2Text", result, new Function1<IOperateCallback, Unit>(msgId, peer, msgElement) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$translatePtt2Text$1
            static IPatchRedirector $redirector_;
            final /* synthetic */ MsgElement $msgElement;
            final /* synthetic */ long $msgId;
            final /* synthetic */ Contact $peer;

            /* JADX INFO: Access modifiers changed from: package-private */
            /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
            {
                super(1);
                this.$msgId = msgId;
                this.$peer = peer;
                this.$msgElement = msgElement;
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                    iPatchRedirector2.redirect((short) 1, this, MsgService.this, Long.valueOf(msgId), peer, msgElement);
                }
            }

            @Override // kotlin.jvm.functions.Function1
            @Nullable
            public final Unit invoke(@Nullable IOperateCallback iOperateCallback) {
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                    return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iOperateCallback);
                }
                IKernelMsgService service = MsgService.this.getService();
                if (service == null) {
                    return null;
                }
                service.translatePtt2Text(this.$msgId, this.$peer, this.$msgElement, iOperateCallback);
                return Unit.INSTANCE;
            }
        });
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void translatePtt2TextAiVoice(final long msgId, @NotNull final Contact peer, @NotNull final MsgElement msgElement, @NotNull IOperateCallback result) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 12)) {
            iPatchRedirector.redirect((short) 12, this, Long.valueOf(msgId), peer, msgElement, result);
            return;
        }
        Intrinsics.checkNotNullParameter(peer, "peer");
        Intrinsics.checkNotNullParameter(msgElement, "msgElement");
        Intrinsics.checkNotNullParameter(result, "result");
        check("translatePtt2TextAiVoice", result, new Function1<IOperateCallback, Unit>(msgId, peer, msgElement) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$translatePtt2TextAiVoice$1
            static IPatchRedirector $redirector_;
            final /* synthetic */ MsgElement $msgElement;
            final /* synthetic */ long $msgId;
            final /* synthetic */ Contact $peer;

            /* JADX INFO: Access modifiers changed from: package-private */
            /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
            {
                super(1);
                this.$msgId = msgId;
                this.$peer = peer;
                this.$msgElement = msgElement;
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                    iPatchRedirector2.redirect((short) 1, this, MsgService.this, Long.valueOf(msgId), peer, msgElement);
                }
            }

            @Override // kotlin.jvm.functions.Function1
            @Nullable
            public final Unit invoke(@Nullable IOperateCallback iOperateCallback) {
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                    return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iOperateCallback);
                }
                IKernelMsgService service = MsgService.this.getService();
                if (service == null) {
                    return null;
                }
                service.translatePtt2TextAiVoice(this.$msgId, this.$peer, this.$msgElement, iOperateCallback);
                return Unit.INSTANCE;
            }
        });
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void unregisterSysMsgNotification(final int businessType, final long msgType, @NotNull final ArrayList<Long> msgSubType, @Nullable IOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 120)) {
            iPatchRedirector.redirect((short) 120, this, Integer.valueOf(businessType), Long.valueOf(msgType), msgSubType, cb5);
        } else {
            Intrinsics.checkNotNullParameter(msgSubType, "msgSubType");
            check("unregisterSysMsgNotification", cb5, new Function1<IOperateCallback, Unit>(businessType, msgType, msgSubType) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$unregisterSysMsgNotification$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ int $businessType;
                final /* synthetic */ ArrayList<Long> $msgSubType;
                final /* synthetic */ long $msgType;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(1);
                    this.$businessType = businessType;
                    this.$msgType = msgType;
                    this.$msgSubType = msgSubType;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, this, MsgService.this, Integer.valueOf(businessType), Long.valueOf(msgType), msgSubType);
                    }
                }

                @Override // kotlin.jvm.functions.Function1
                @Nullable
                public final Unit invoke(@Nullable IOperateCallback iOperateCallback) {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iOperateCallback);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.unregisterSysMsgNotification(this.$businessType, this.$msgType, this.$msgSubType, iOperateCallback);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void updateAnonymousInfo(@NotNull String groupId, @NotNull GroupAnonymousInfo info) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 162)) {
            iPatchRedirector.redirect((short) 162, (Object) this, (Object) groupId, (Object) info);
            return;
        }
        Intrinsics.checkNotNullParameter(groupId, "groupId");
        Intrinsics.checkNotNullParameter(info, "info");
        IKernelMsgService service = getService();
        if (service != null) {
            service.updateAnonymousInfo(groupId, info);
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void updateElementExtBufForUI(@NotNull final Contact peer, final long rootMsgId, final long elemId, @NotNull final byte[] extBufForUI, @Nullable final IOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 71)) {
            iPatchRedirector.redirect((short) 71, this, peer, Long.valueOf(rootMsgId), Long.valueOf(elemId), extBufForUI, cb5);
            return;
        }
        Intrinsics.checkNotNullParameter(peer, "peer");
        Intrinsics.checkNotNullParameter(extBufForUI, "extBufForUI");
        check("updateElementExtBufForUI", cb5, new Function1<IOperateCallback, Unit>(peer, rootMsgId, elemId, extBufForUI, cb5) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$updateElementExtBufForUI$1
            static IPatchRedirector $redirector_;
            final /* synthetic */ IOperateCallback $cb;
            final /* synthetic */ long $elemId;
            final /* synthetic */ byte[] $extBufForUI;
            final /* synthetic */ Contact $peer;
            final /* synthetic */ long $rootMsgId;

            /* JADX INFO: Access modifiers changed from: package-private */
            /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
            {
                super(1);
                this.$peer = peer;
                this.$rootMsgId = rootMsgId;
                this.$elemId = elemId;
                this.$extBufForUI = extBufForUI;
                this.$cb = cb5;
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                    iPatchRedirector2.redirect((short) 1, this, MsgService.this, peer, Long.valueOf(rootMsgId), Long.valueOf(elemId), extBufForUI, cb5);
                }
            }

            @Override // kotlin.jvm.functions.Function1
            @Nullable
            public final Unit invoke(@Nullable IOperateCallback iOperateCallback) {
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                    return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iOperateCallback);
                }
                IKernelMsgService service = MsgService.this.getService();
                if (service == null) {
                    return null;
                }
                service.updateElementExtBufForUI(this.$peer, this.$rootMsgId, this.$elemId, this.$extBufForUI, this.$cb);
                return Unit.INSTANCE;
            }
        });
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void updateMsgRecordExtPbBufForUI(@NotNull final Contact peer, final long msgId, @NotNull final byte[] extPbBufForUI, @Nullable IOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 72)) {
            iPatchRedirector.redirect((short) 72, this, peer, Long.valueOf(msgId), extPbBufForUI, cb5);
            return;
        }
        Intrinsics.checkNotNullParameter(peer, "peer");
        Intrinsics.checkNotNullParameter(extPbBufForUI, "extPbBufForUI");
        check("updateMsgRecordExtPbBufForUI", cb5, new Function1<IOperateCallback, Unit>(peer, msgId, extPbBufForUI) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$updateMsgRecordExtPbBufForUI$1
            static IPatchRedirector $redirector_;
            final /* synthetic */ byte[] $extPbBufForUI;
            final /* synthetic */ long $msgId;
            final /* synthetic */ Contact $peer;

            /* JADX INFO: Access modifiers changed from: package-private */
            /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
            {
                super(1);
                this.$peer = peer;
                this.$msgId = msgId;
                this.$extPbBufForUI = extPbBufForUI;
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                    iPatchRedirector2.redirect((short) 1, this, MsgService.this, peer, Long.valueOf(msgId), extPbBufForUI);
                }
            }

            @Override // kotlin.jvm.functions.Function1
            @Nullable
            public final Unit invoke(@Nullable IOperateCallback iOperateCallback) {
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                    return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iOperateCallback);
                }
                IKernelMsgService service = MsgService.this.getService();
                if (service == null) {
                    return null;
                }
                service.updateMsgRecordExtPbBufForUI(this.$peer, this.$msgId, this.$extPbBufForUI, iOperateCallback);
                return Unit.INSTANCE;
            }
        });
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void updatePublicAccountInfo(@NotNull final PublicAccountInfo info, @Nullable IOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 182)) {
            iPatchRedirector.redirect((short) 182, (Object) this, (Object) info, (Object) cb5);
        } else {
            Intrinsics.checkNotNullParameter(info, "info");
            check("updatePublicAccountInfo", cb5, new Function1<IOperateCallback, Unit>(info) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$updatePublicAccountInfo$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ PublicAccountInfo $info;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(1);
                    this.$info = info;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, (Object) this, (Object) MsgService.this, (Object) info);
                    }
                }

                @Override // kotlin.jvm.functions.Function1
                @Nullable
                public final Unit invoke(@Nullable IOperateCallback iOperateCallback) {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iOperateCallback);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.updatePublicAccountInfo(this.$info, iOperateCallback);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void w(@NotNull final Contact contact, final long msgType, @NotNull final MsgElement msgElement, final boolean front, @Nullable IOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 117)) {
            iPatchRedirector.redirect((short) 117, this, contact, Long.valueOf(msgType), msgElement, Boolean.valueOf(front), cb5);
            return;
        }
        Intrinsics.checkNotNullParameter(contact, "contact");
        Intrinsics.checkNotNullParameter(msgElement, "msgElement");
        check("addLocalRecordMsg", cb5, new Function1<IOperateCallback, Unit>(contact, msgType, msgElement, front) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$addLocalRecordMsg$1
            static IPatchRedirector $redirector_;
            final /* synthetic */ Contact $contact;
            final /* synthetic */ boolean $front;
            final /* synthetic */ MsgElement $msgElement;
            final /* synthetic */ long $msgType;

            /* JADX INFO: Access modifiers changed from: package-private */
            /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
            {
                super(1);
                this.$contact = contact;
                this.$msgType = msgType;
                this.$msgElement = msgElement;
                this.$front = front;
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                    iPatchRedirector2.redirect((short) 1, this, MsgService.this, contact, Long.valueOf(msgType), msgElement, Boolean.valueOf(front));
                }
            }

            @Override // kotlin.jvm.functions.Function1
            @Nullable
            public final Unit invoke(@Nullable IOperateCallback iOperateCallback) {
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                    return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iOperateCallback);
                }
                IKernelMsgService service = MsgService.this.getService();
                if (service == null) {
                    return null;
                }
                service.addLocalRecordMsg(this.$contact, this.$msgType, this.$msgElement, new HashMap<>(), this.$front, iOperateCallback);
                return Unit.INSTANCE;
            }
        });
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void y(@NotNull final GetArgMsgConfigReqInfo req, @NotNull final IGetArkMsgConfigCallback callback) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 93)) {
            iPatchRedirector.redirect((short) 93, (Object) this, (Object) req, (Object) callback);
            return;
        }
        Intrinsics.checkNotNullParameter(req, "req");
        Intrinsics.checkNotNullParameter(callback, "callback");
        BaseService.checkCommon$default(this, "getTemplateMsgWhiteList", new Function0<Unit>(req, callback) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$getTemplateMsgConfig$1
            static IPatchRedirector $redirector_;
            final /* synthetic */ IGetArkMsgConfigCallback $callback;
            final /* synthetic */ GetArgMsgConfigReqInfo $req;

            /* JADX INFO: Access modifiers changed from: package-private */
            /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
            {
                super(0);
                this.$req = req;
                this.$callback = callback;
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                    iPatchRedirector2.redirect((short) 1, this, MsgService.this, req, callback);
                }
            }

            @Override // kotlin.jvm.functions.Function0
            public /* bridge */ /* synthetic */ Unit invoke() {
                invoke2();
                return Unit.INSTANCE;
            }

            /* renamed from: invoke, reason: avoid collision after fix types in other method */
            public final void invoke2() {
                IPatchRedirector iPatchRedirector2 = $redirector_;
                if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                    iPatchRedirector2.redirect((short) 2, (Object) this);
                    return;
                }
                IKernelMsgService service = MsgService.this.getService();
                if (service != null) {
                    service.getArkMsgConfig(this.$req, this.$callback);
                }
            }
        }, null, 4, null);
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void y0(@NotNull final Contact peer, @NotNull final JsonGrayElement jsonGrayTipElement, @Nullable final JsonGrayMsgInfo jsonGrayMsgInfo, final boolean needStore, final boolean needRecentContact, @Nullable IAddJsonGrayTipMsgCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 115)) {
            iPatchRedirector.redirect((short) 115, this, peer, jsonGrayTipElement, jsonGrayMsgInfo, Boolean.valueOf(needStore), Boolean.valueOf(needRecentContact), cb5);
            return;
        }
        Intrinsics.checkNotNullParameter(peer, "peer");
        Intrinsics.checkNotNullParameter(jsonGrayTipElement, "jsonGrayTipElement");
        if (jsonGrayMsgInfo != null) {
            check("addLocalJsonGrayTipMsgExt", cb5, new Function1<IAddJsonGrayTipMsgCallback, Unit>(peer, jsonGrayMsgInfo, jsonGrayTipElement, needStore, needRecentContact) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$addLocalJsonGrayTipMsg$1$1
                static IPatchRedirector $redirector_;
                final /* synthetic */ JsonGrayMsgInfo $jsonGrayMsgInfo;
                final /* synthetic */ JsonGrayElement $jsonGrayTipElement;
                final /* synthetic */ boolean $needRecentContact;
                final /* synthetic */ boolean $needStore;
                final /* synthetic */ Contact $peer;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(1);
                    this.$peer = peer;
                    this.$jsonGrayMsgInfo = jsonGrayMsgInfo;
                    this.$jsonGrayTipElement = jsonGrayTipElement;
                    this.$needStore = needStore;
                    this.$needRecentContact = needRecentContact;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, this, MsgService.this, peer, jsonGrayMsgInfo, jsonGrayTipElement, Boolean.valueOf(needStore), Boolean.valueOf(needRecentContact));
                    }
                }

                @Override // kotlin.jvm.functions.Function1
                @Nullable
                public final Unit invoke(@Nullable IAddJsonGrayTipMsgCallback iAddJsonGrayTipMsgCallback) {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iAddJsonGrayTipMsgCallback);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.addLocalJsonGrayTipMsgExt(this.$peer, this.$jsonGrayMsgInfo, this.$jsonGrayTipElement, this.$needStore, this.$needRecentContact, iAddJsonGrayTipMsgCallback);
                    return Unit.INSTANCE;
                }
            });
        } else {
            check("addLocalJsonGrayTipMsg", cb5, new Function1<IAddJsonGrayTipMsgCallback, Unit>(peer, jsonGrayTipElement, needStore, needRecentContact) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$addLocalJsonGrayTipMsg$2
                static IPatchRedirector $redirector_;
                final /* synthetic */ JsonGrayElement $jsonGrayTipElement;
                final /* synthetic */ boolean $needRecentContact;
                final /* synthetic */ boolean $needStore;
                final /* synthetic */ Contact $peer;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(1);
                    this.$peer = peer;
                    this.$jsonGrayTipElement = jsonGrayTipElement;
                    this.$needStore = needStore;
                    this.$needRecentContact = needRecentContact;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, this, MsgService.this, peer, jsonGrayTipElement, Boolean.valueOf(needStore), Boolean.valueOf(needRecentContact));
                    }
                }

                @Override // kotlin.jvm.functions.Function1
                @Nullable
                public final Unit invoke(@Nullable IAddJsonGrayTipMsgCallback iAddJsonGrayTipMsgCallback) {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iAddJsonGrayTipMsgCallback);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.addLocalJsonGrayTipMsg(this.$peer, this.$jsonGrayTipElement, this.$needStore, this.$needRecentContact, iAddJsonGrayTipMsgCallback);
                    return Unit.INSTANCE;
                }
            });
        }
    }

    @Override // com.tencent.qqnt.kernel.api.w
    public void getContactUnreadCnt(@NotNull final ArrayList<Contact> peers, @Nullable IOperateCallback cb5) {
        IPatchRedirector iPatchRedirector = $redirector_;
        if (iPatchRedirector != null && iPatchRedirector.hasPatch((short) 91)) {
            iPatchRedirector.redirect((short) 91, (Object) this, (Object) peers, (Object) cb5);
        } else {
            Intrinsics.checkNotNullParameter(peers, "peers");
            check("getContactUnreadCnt", cb5, new Function1<IOperateCallback, Unit>(peers) { // from class: com.tencent.qqnt.kernel.api.impl.MsgService$getContactUnreadCnt$2
                static IPatchRedirector $redirector_;
                final /* synthetic */ ArrayList<Contact> $peers;

                /* JADX INFO: Access modifiers changed from: package-private */
                /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
                {
                    super(1);
                    this.$peers = peers;
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 1)) {
                        iPatchRedirector2.redirect((short) 1, (Object) this, (Object) MsgService.this, (Object) peers);
                    }
                }

                @Override // kotlin.jvm.functions.Function1
                @Nullable
                public final Unit invoke(@Nullable IOperateCallback iOperateCallback) {
                    IPatchRedirector iPatchRedirector2 = $redirector_;
                    if (iPatchRedirector2 != null && iPatchRedirector2.hasPatch((short) 2)) {
                        return (Unit) iPatchRedirector2.redirect((short) 2, (Object) this, (Object) iOperateCallback);
                    }
                    IKernelMsgService service = MsgService.this.getService();
                    if (service == null) {
                        return null;
                    }
                    service.getContactUnreadCnt(this.$peers, iOperateCallback);
                    return Unit.INSTANCE;
                }
            });
        }
    }
}
