package x81;

import android.opengl.GLES20;
import com.tencent.qmethod.pandoraex.monitor.DeviceInfoMonitor;
import com.tencent.qphone.base.util.QLog;
import java.nio.Buffer;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.FloatBuffer;

/* compiled from: P */
/* loaded from: classes11.dex */
public class c {

    /* renamed from: a, reason: collision with root package name */
    FloatBuffer f447418a;

    /* renamed from: b, reason: collision with root package name */
    FloatBuffer f447419b;

    /* renamed from: c, reason: collision with root package name */
    int f447420c = 0;

    public c(float f16, float f17, float f18, float f19) {
        b(f16, f17, f18, f19);
    }

    public void a(int i3, int i16) {
        GLES20.glVertexAttribPointer(i3, 3, 5126, false, 16, (Buffer) this.f447418a);
        GLES20.glVertexAttribPointer(i16, 2, 5126, false, 16, (Buffer) this.f447419b);
        GLES20.glEnableVertexAttribArray(i3);
        GLES20.glEnableVertexAttribArray(i16);
        GLES20.glDrawArrays(4, 0, this.f447420c);
    }

    public void b(float f16, float f17, float f18, float f19) {
        int i3;
        int i16;
        int i17;
        float f26;
        float[] fArr;
        int i18;
        float f27;
        double d16;
        float f28 = (float) ((f17 / (f19 * 3.141592653589793d)) * 360.0d);
        float f29 = (f19 / 2.0f) * f16;
        float f36 = f16 * f18;
        float f37 = f28 / 1.0f;
        int i19 = (int) f37;
        int i26 = i19 * 3 * 4;
        this.f447420c = i26;
        int i27 = i26 * 4;
        float[] fArr2 = new float[i27];
        int i28 = i26 * 4;
        float[] fArr3 = new float[i28];
        String str = "AREngine_CylinderSide";
        QLog.i("AREngine_CylinderSide", 1, "initVertexData. w = " + f17 + ", h = " + f36 + ", d = " + f19 + ", angleLen = " + f28 + ", angdegSpan = 1.0, ni = " + i19 + ", nf = " + f37);
        if (!DeviceInfoMonitor.getModel().equalsIgnoreCase("MI-ONE Plus") && !DeviceInfoMonitor.getModel().equalsIgnoreCase("M040")) {
            i16 = 1;
            i3 = 0;
        } else {
            i3 = 1;
            i16 = 0;
        }
        float f38 = 0.0f;
        int i29 = 0;
        int i36 = 0;
        int i37 = 0;
        while (true) {
            double d17 = f38;
            int i38 = i28;
            int i39 = i27;
            if (Math.ceil(d17) < f28) {
                double radians = Math.toRadians(d17);
                float f39 = f38 + 1.0f;
                int i46 = i16;
                double radians2 = Math.toRadians(f39);
                int i47 = i29 + 1;
                float f46 = i47;
                float f47 = f28 - (i19 * 1.0f);
                if (f47 > 0.01d) {
                    i17 = i29;
                    if (i17 == i19) {
                        fArr = fArr3;
                        i18 = i3;
                        double radians3 = Math.toRadians(f38 + f47);
                        float f48 = i17 + (f47 / 1.0f);
                        StringBuilder sb5 = new StringBuilder();
                        sb5.append("initVertexData. angrad = ");
                        f26 = f37;
                        sb5.append((radians * 180.0d) / 3.141592653589793d);
                        sb5.append(", angradNext = ");
                        sb5.append((180.0d * radians3) / 3.141592653589793d);
                        sb5.append(", k = ");
                        sb5.append(i17);
                        sb5.append(", kNext = ");
                        sb5.append(f48);
                        QLog.i(str, 1, sb5.toString());
                        f27 = f48;
                        d16 = radians3;
                        int i48 = i36 + 1;
                        double d18 = f29;
                        String str2 = str;
                        float f49 = f28;
                        fArr2[i36] = (float) (d18 * Math.cos(radians));
                        int i49 = i48 + 1;
                        float f56 = f29;
                        fArr2[i48] = (float) (d18 * Math.sin(radians));
                        int i56 = i49 + 1;
                        fArr2[i49] = 0.0f;
                        int i57 = i56 + 1;
                        fArr2[i56] = 0.0f;
                        int i58 = i37 + 1;
                        float f57 = i17 / f26;
                        fArr[i37] = f57;
                        int i59 = i58 + 1;
                        int i65 = i19;
                        int i66 = i18;
                        float f58 = i66;
                        fArr[i58] = f58;
                        int i67 = i59 + 1;
                        fArr[i59] = 0.0f;
                        int i68 = i67 + 1;
                        fArr[i67] = 1.0f;
                        int i69 = i57 + 1;
                        fArr2[i57] = (float) (d18 * Math.cos(d16));
                        int i75 = i69 + 1;
                        fArr2[i69] = (float) (Math.sin(d16) * d18);
                        int i76 = i75 + 1;
                        fArr2[i75] = f36;
                        int i77 = i76 + 1;
                        fArr2[i76] = 0.0f;
                        int i78 = i68 + 1;
                        float f59 = f27 / f26;
                        fArr[i68] = f59;
                        int i79 = i78 + 1;
                        float f65 = i46;
                        fArr[i78] = f65;
                        int i85 = i79 + 1;
                        fArr[i79] = 0.0f;
                        int i86 = i85 + 1;
                        fArr[i85] = 1.0f;
                        int i87 = i77 + 1;
                        double d19 = d16;
                        fArr2[i77] = (float) (d18 * Math.cos(radians));
                        int i88 = i87 + 1;
                        fArr2[i87] = (float) (Math.sin(radians) * d18);
                        int i89 = i88 + 1;
                        fArr2[i88] = f36;
                        int i95 = i89 + 1;
                        fArr2[i89] = 0.0f;
                        int i96 = i86 + 1;
                        fArr[i86] = f57;
                        int i97 = i96 + 1;
                        fArr[i96] = f65;
                        int i98 = i97 + 1;
                        fArr[i97] = 0.0f;
                        int i99 = i98 + 1;
                        fArr[i98] = 1.0f;
                        int i100 = i95 + 1;
                        fArr2[i95] = (float) (d18 * Math.cos(radians));
                        int i101 = i100 + 1;
                        fArr2[i100] = (float) (Math.sin(radians) * d18);
                        int i102 = i101 + 1;
                        fArr2[i101] = 0.0f;
                        int i103 = i102 + 1;
                        fArr2[i102] = 0.0f;
                        int i104 = i99 + 1;
                        fArr[i99] = f57;
                        int i105 = i104 + 1;
                        fArr[i104] = f58;
                        int i106 = i105 + 1;
                        fArr[i105] = 0.0f;
                        int i107 = i106 + 1;
                        fArr[i106] = 1.0f;
                        int i108 = i103 + 1;
                        fArr2[i103] = (float) (Math.cos(d19) * d18);
                        int i109 = i108 + 1;
                        fArr2[i108] = (float) (Math.sin(d19) * d18);
                        int i110 = i109 + 1;
                        fArr2[i109] = 0.0f;
                        int i111 = i110 + 1;
                        fArr2[i110] = 0.0f;
                        int i112 = i107 + 1;
                        fArr[i107] = f59;
                        int i113 = i112 + 1;
                        fArr[i112] = f58;
                        int i114 = i113 + 1;
                        fArr[i113] = 0.0f;
                        int i115 = i114 + 1;
                        fArr[i114] = 1.0f;
                        int i116 = i111 + 1;
                        fArr2[i111] = (float) (Math.cos(d19) * d18);
                        int i117 = i116 + 1;
                        fArr2[i116] = (float) (d18 * Math.sin(d19));
                        int i118 = i117 + 1;
                        fArr2[i117] = f36;
                        int i119 = i118 + 1;
                        fArr2[i118] = 0.0f;
                        int i120 = i115 + 1;
                        fArr[i115] = f59;
                        int i121 = i120 + 1;
                        fArr[i120] = f65;
                        int i122 = i121 + 1;
                        fArr[i121] = 0.0f;
                        int i123 = i122 + 1;
                        fArr[i122] = 1.0f;
                        fArr3 = fArr;
                        f29 = f56;
                        i19 = i65;
                        i16 = i46;
                        f37 = f26;
                        i27 = i39;
                        i28 = i38;
                        f38 = f39;
                        i29 = i47;
                        f28 = f49;
                        i3 = i66;
                        i36 = i119;
                        i37 = i123;
                        str = str2;
                    }
                } else {
                    i17 = i29;
                }
                f26 = f37;
                fArr = fArr3;
                i18 = i3;
                f27 = f46;
                d16 = radians2;
                int i482 = i36 + 1;
                double d182 = f29;
                String str22 = str;
                float f492 = f28;
                fArr2[i36] = (float) (d182 * Math.cos(radians));
                int i492 = i482 + 1;
                float f562 = f29;
                fArr2[i482] = (float) (d182 * Math.sin(radians));
                int i562 = i492 + 1;
                fArr2[i492] = 0.0f;
                int i572 = i562 + 1;
                fArr2[i562] = 0.0f;
                int i582 = i37 + 1;
                float f572 = i17 / f26;
                fArr[i37] = f572;
                int i592 = i582 + 1;
                int i652 = i19;
                int i662 = i18;
                float f582 = i662;
                fArr[i582] = f582;
                int i672 = i592 + 1;
                fArr[i592] = 0.0f;
                int i682 = i672 + 1;
                fArr[i672] = 1.0f;
                int i692 = i572 + 1;
                fArr2[i572] = (float) (d182 * Math.cos(d16));
                int i752 = i692 + 1;
                fArr2[i692] = (float) (Math.sin(d16) * d182);
                int i762 = i752 + 1;
                fArr2[i752] = f36;
                int i772 = i762 + 1;
                fArr2[i762] = 0.0f;
                int i782 = i682 + 1;
                float f592 = f27 / f26;
                fArr[i682] = f592;
                int i792 = i782 + 1;
                float f652 = i46;
                fArr[i782] = f652;
                int i852 = i792 + 1;
                fArr[i792] = 0.0f;
                int i862 = i852 + 1;
                fArr[i852] = 1.0f;
                int i872 = i772 + 1;
                double d192 = d16;
                fArr2[i772] = (float) (d182 * Math.cos(radians));
                int i882 = i872 + 1;
                fArr2[i872] = (float) (Math.sin(radians) * d182);
                int i892 = i882 + 1;
                fArr2[i882] = f36;
                int i952 = i892 + 1;
                fArr2[i892] = 0.0f;
                int i962 = i862 + 1;
                fArr[i862] = f572;
                int i972 = i962 + 1;
                fArr[i962] = f652;
                int i982 = i972 + 1;
                fArr[i972] = 0.0f;
                int i992 = i982 + 1;
                fArr[i982] = 1.0f;
                int i1002 = i952 + 1;
                fArr2[i952] = (float) (d182 * Math.cos(radians));
                int i1012 = i1002 + 1;
                fArr2[i1002] = (float) (Math.sin(radians) * d182);
                int i1022 = i1012 + 1;
                fArr2[i1012] = 0.0f;
                int i1032 = i1022 + 1;
                fArr2[i1022] = 0.0f;
                int i1042 = i992 + 1;
                fArr[i992] = f572;
                int i1052 = i1042 + 1;
                fArr[i1042] = f582;
                int i1062 = i1052 + 1;
                fArr[i1052] = 0.0f;
                int i1072 = i1062 + 1;
                fArr[i1062] = 1.0f;
                int i1082 = i1032 + 1;
                fArr2[i1032] = (float) (Math.cos(d192) * d182);
                int i1092 = i1082 + 1;
                fArr2[i1082] = (float) (Math.sin(d192) * d182);
                int i1102 = i1092 + 1;
                fArr2[i1092] = 0.0f;
                int i1112 = i1102 + 1;
                fArr2[i1102] = 0.0f;
                int i1122 = i1072 + 1;
                fArr[i1072] = f592;
                int i1132 = i1122 + 1;
                fArr[i1122] = f582;
                int i1142 = i1132 + 1;
                fArr[i1132] = 0.0f;
                int i1152 = i1142 + 1;
                fArr[i1142] = 1.0f;
                int i1162 = i1112 + 1;
                fArr2[i1112] = (float) (Math.cos(d192) * d182);
                int i1172 = i1162 + 1;
                fArr2[i1162] = (float) (d182 * Math.sin(d192));
                int i1182 = i1172 + 1;
                fArr2[i1172] = f36;
                int i1192 = i1182 + 1;
                fArr2[i1182] = 0.0f;
                int i1202 = i1152 + 1;
                fArr[i1152] = f592;
                int i1212 = i1202 + 1;
                fArr[i1202] = f652;
                int i1222 = i1212 + 1;
                fArr[i1212] = 0.0f;
                int i1232 = i1222 + 1;
                fArr[i1222] = 1.0f;
                fArr3 = fArr;
                f29 = f562;
                i19 = i652;
                i16 = i46;
                f37 = f26;
                i27 = i39;
                i28 = i38;
                f38 = f39;
                i29 = i47;
                f28 = f492;
                i3 = i662;
                i36 = i1192;
                i37 = i1232;
                str = str22;
            } else {
                ByteBuffer allocateDirect = ByteBuffer.allocateDirect(i39 * 4);
                allocateDirect.order(ByteOrder.nativeOrder());
                FloatBuffer asFloatBuffer = allocateDirect.asFloatBuffer();
                this.f447418a = asFloatBuffer;
                asFloatBuffer.put(fArr2);
                this.f447418a.position(0);
                ByteBuffer allocateDirect2 = ByteBuffer.allocateDirect(i38 * 4);
                allocateDirect2.order(ByteOrder.nativeOrder());
                FloatBuffer asFloatBuffer2 = allocateDirect2.asFloatBuffer();
                this.f447419b = asFloatBuffer2;
                asFloatBuffer2.put(fArr3);
                this.f447419b.position(0);
                return;
            }
        }
    }
}
